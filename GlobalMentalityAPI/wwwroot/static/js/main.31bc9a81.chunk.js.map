{"version":3,"sources":["webpack:///./src/images/global-mentality-icon.svg?8a5c","images/Avator-Headshots/Doctor-Headshots/Doctor-1.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-1.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-4.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-2.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-3.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-5.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-6.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-7.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-8.jpg","images/global-mentality-icon.svg","containers/App/redux/types.js","utils/constants.js","containers/App/redux/reducer.js","containers/PatientPage/redux/types.js","containers/PatientPage/redux/reducer.js","containers/LoginPage/redux/types.js","containers/LoginPage/redux/reducer.js","reducers.js","mock-data/mock-data.js","containers/PatientPage/redux/epic.js","containers/PatientPage/redux/actions.js","epics.js","containers/App/redux/selectors.js","styled-components/Header/header-styled.js","styled-components/Buttons/buttons-styled.js","styled-components/Icons/icons-styled.js","styled-components/SideMenu/side-menu-styled.js","styled-components/Divider/divider-styled.js","components/Clinicians/ClinicianSideMenu/ClinicianSideMenu.js","components/Patients/PatientSideMenu/PatientSideMenu.js","components/Clinicians/ClinicianSideMenu/style.js","components/Patients/PatientSideMenu/style.js","components/Header/Header.js","components/Header/style.js","components/SideMenu/SideMenu.js","styled-components/PatientCard/patient-card-styled.js","styled-components/Profile/profile-card-styled.js","components/Patients/patients-card-items/patient-header.js","components/Patients/patient-appointments.js","components/Patients/patient-dashboard.js","styled-components/Forms/forms-styled.js","components/Patients/patient-profile.js","components/ReusableComponents/CardItems/CardCalendar.js","components/ReusableComponents/CardItems/CardMessaging.js","components/Patients/PatientCard.js","containers/PatientPage/PatientPage.js","utils/functional.js","containers/PatientPage/redux/selectors.js","containers/PatientPage/index.js","containers/App/redux/actions.js","containers/NotFoundPage/NotFoundPage.js","styled-components/SignIn/signIn-styled.js","containers/LoginPage/LoginPage.js","containers/LoginPage/redux/selectors.js","containers/LoginPage/index.js","containers/LoginPage/redux/actions.js","containers/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","AppActionTypes","LOAD_APP","APP_LOADED_SUCCESS","APP_LOADED_ERROR","DEFAULT_LOCALE","CHANGE_CURRENT_PAGE","Role","Current","initialState","loading","error","isError","theError","currentUser","current_page","combineReducers","state","arguments","length","undefined","type","action","LOAD_REPOS_ERROR","payload","current","PatientPageActionTypes","username","getPatientLoading","userData","userDataError","patientReducer","LoginPageActionTypes","user","email","password","loginReducer","formSubmit","newState","Object","objectSpread","console","log","routeInitialState","location","configInitialState","userRole","userID","rootReducer","route","LOCATION_CHANGE","global","globalReducer","patient","login","config","Patient1MockData","id","firstName","lastName","cellPhone","homePhone","emailAddress","picture","Headshot1","address","gender","dateOfBirth","insurance","groupInsuranceNumber","provider","providerID","Doctor4","city","practice","phoneNum","faxNum","title","emergency","relationship","Patient2MockData","Headshot2","Patient3MockData","Headshot3","Patient4MockData","Headshot4","Patient5MockData","Headshot5","CalendarEvents","allDay","start","Date","end","desc","setHours","getHours","MILLI","seconds","minutes","hours","day","MONTHS","dates","dateMath","monthsInYear","year","date","map","i","month","firstVisibleDay","localizer","firstOfMonth","startOf","startOfWeek","lastVisibleDay","endOfMonth","endOf","visibleDays","last","days","lte","push","add","ceil","unit","floor","eq","range","merge","time","milliseconds","eqTime","dateA","dateB","isJustDate","duration","firstOfWeek","Math","abs","diff","round","total","ms","getTime","div","week","d","setDate","getDate","getDay","getFullYear","today","yesterday","tomorrow","CalendarDates","patientAppointments","appointment_time","appointment_date","patient_Name","patient_Email","assigned_To","photo","clinicians_Name","service","status","PatientEpic","combineEpics","action$","state$","pipe","ofType","switchMap","_ref2","defer","value","Observable","create","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","observer","patients","randomPatient","wrap","_context","prev","next","random","err","complete","stop","_x","apply","this","rootEpic","getCurrentPage","HeaderWrapper","styled","AppBar","_templateObject","StyledButton","Button","buttons_styled_templateObject","backgroundscolor","heights","_ref3","widths","_ref4","boxshadow","_ref5","colors","_ref6","bordersradius","_ref7","fontssize","_ref8","margins","_ref9","borders","_ref10","linesheight","_ref11","mediaminwidths","EditIcon","icons_styled_templateObject","AccountCircle","_templateObject2","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","StyledMoreVertIcon","Menu","_templateObject3","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","SideMenuWrapper","side_menu_styled_templateObject","side_menu_styled_templateObject2","StyledDivider","Divider","divider_styled_templateObject","paddings","displays","mediadisplays","ClinicianSideMenu","classes","props","react_default","createElement","react","src","Logo","className","img","react_inlinesvg_es","MenuList_default","menuList","heading","MenuItem_default","menuItem","ListItemIcon_default","icon","index_es","ListItemText_default","primary","inset","variant","style","paddingLeft","PureComponent","PatientSideMenu","withStyles","theme","&:focus","backgroundColor","& $primary, & $icon","color","margin","marginBottom","marginLeft","dashboardRef","React","createRef","buttonRef","_this$props","changePage","currentPage","focus","onClick","_this$props2","ref","Component","Header","anchorEl","mobileMoreAnchorEl","mobileOpen","handleMenuClose","_this","setState","handleMobileMenuClose","window","innerWidth","handleDrawerToggle","addEventListener","removeEventListener","_this$state","currentProfile","isMenuOpen","Boolean","renderMenu","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","drawer","Patients_PatientSideMenu_PatientSideMenu","Toolbar_default","grow","sectionDesktop","AccountCircle_default","sectionMobile","aria-haspopup","Hidden_default","smUp","implementation","Drawer_default","container","anchor","paper","drawerPaper","root","width","height","flexGrow","display","fontSize","defineProperty","breakpoints","up","SideMenu","handleDrawerOpen","PatientCardWrapper","Card","patient_card_styled_templateObject","maxwidths","minwidths","boxshadows","justify","liheight","mediawidths","mediamargins","PatientHeaderWrapper","patient_card_styled_templateObject2","patient_card_styled_templateObject3","_templateObject4","PatientProfileCard","_templateObject5","align","flexsflow","marginsTop","fontsweight","_ref28","mediajustify","_ref29","mediaflexsflow","_ref30","mediaalign","_ref31","_templateObject6","_ref32","_ref33","_ref34","_ref35","_ref36","ImageCard","_templateObject7","_templateObject8","_ref37","_ref38","_ref39","_ref40","_ref41","_ref42","_ref43","_ref44","_ref45","_ref46","_ref47","_templateObject9","_ref48","concat","_ref49","_ref50","_ref51","_ref52","_ref53","ProfileSettingsWrapper","_templateObject10","Name","_templateObject11","Details","_templateObject12","PatientCardButton","_templateObject13","_ref54","_ref55","profile_card_styled_templateObject","bordersbottom","bordersleft","bordersright","borderstop","mediabordersright","mediabordersbottom","Avatar","profile_card_styled_templateObject2","PatientHeader","objectDestructuringEmpty","fontWeight","marginTop","flexContainer","flexFlow","padding","maxHeight","appointmentTime","maxWidth","textAlign","menuButton","marginRight","search","position","borderColor","borderRadius","shape","fade","palette","common","white","&:hover","spacing","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","transition","transitions","clinician","Fragment","InputBase_default","placeholder","Grid_default","item","xs","List_default","ListItem_default","appointment","index","key","secondary","Avatar_default","PatientDashboard","FormHeader","forms_styled_templateObject","FormBody","forms_styled_templateObject2","FormRow","forms_styled_templateObject3","FormColumn","forms_styled_templateObject4","StyledInputTextField","InputTextField","forms_styled_templateObject5","StyledDropdownField","Select","forms_styled_templateObject6","InvisibleDiv","forms_styled_templateObject7","createMuiTheme","main","typography","useNextVariants","dateOptions","FormikDatePicker","_name","name","defaultValue","setFieldValue","form","field","material_ui_pickers_esm","utils","DateFnsUtils","keyboard","format","clearable","onChange","toLocaleString","PatientProfile","handleChange","e","fn","target","formSubmission","data","_this2","patientList","selectedDate","formik_esm","initialValues","middleInitial","onSubmit","values","errors","touched","handleBlur","handleSubmit","isSubmitting","core_styles","disabled","onBlur","input","Input_default","inputProps","maxLength","fullWidth","component","allViews","keys","BigCalendar","Views","k","momentLocalizer","moment","CardCalendar","lib_default","events","views","step","showMultiDayTimes","max","defaultDate","CardMessaging","PatientCard","patient_header_PatientHeader","patient_dashboard","patient_appointments","appointments","CardItems_CardCalendar","CardItems_CardMessaging","patient_profile","PatientPage","getPatientData","userDataLoading","Helmet","content","components_Header_Header","SideMenu_SideMenu","Patients_PatientCard","Sum","x","y","inspect","empty","All","Any","getUserData","getUserLoading","getUserDataError","mapDispatchToProps","changeUsername","next_page","compose","withRouter","connect","NotFound","SignInWrapper","signIn_styled_templateObject","backgroundcolors","SignInSection","section","signIn_styled_templateObject2","SignInImage","signIn_styled_templateObject3","SignInTick","signIn_styled_templateObject4","zIndex","tops","lefts","NewPasswordText","signIn_styled_templateObject5","LoginPage","isDesktop","handleResize","validationSchema","Yup","required","TextField_default","label","react_event_listener_cjs_default","onResize","alt","href","getEmail","getPassword","loginInfo","navigateTo","pathname","role","ClinicianPage","OfficePage","AdminPage","NotFoundPage","App","titleTemplate","defaultTitle","Switch","Route","path","exact","FontFaceObserver","load","then","document","body","classList","remove","logger","createLogger","collapsed","timestamp","level","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","epicMiddleware","createEpicMiddleware","history","createHistory","store","createStore","applyMiddleware","run","ReactDOM","render","es","react_router_redux_es","containers_App_App","getState","getElementById"],"mappings":"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","file":"static/js/main.31bc9a81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/global-mentality-icon.d16b15f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Doctor-1.27752586.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-1.5031d20e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-4.551b9b21.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-2.d479c177.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-3.624eb147.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-5.57e42ab4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-6.86d8660a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-7.c1b2f038.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-8.9ca91e38.jpg\";","module.exports = __webpack_public_path__ + \"global-mentality-icon.svg\";","/*\n * AppTypes\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * types here. We prefix them with '[App] Whatever the action is doing' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_TYPE = '[APP] Whatever the action is doing';\n */\n\nexport const AppActionTypes = {\n  LOAD_APP: '[APP] Loading App........',\n  APP_LOADED_SUCCESS: '[APP] Load Success',\n  APP_LOADED_ERROR: '[APP] Load Error',\n  DEFAULT_LOCALE: 'en',\n  CHANGE_CURRENT_PAGE: '[APP] Go to next page'\n};\n","export const Role = {\n Patient: 'patient',\n Clinician: 'clinician',\n OfficeAdmin: 'office',\n SuperAdmin: 'super_admin',\n}\n\nexport const Current = {\n    Dashboard: 'dashboard',\n    Appointments: 'appointments',\n    Calendar: 'calendar',\n    Messaging: 'messaging',\n    Services: 'services',\n    Patients: 'patients',\n    Personnel: 'personnel',\n    Settings: 'settings',\n    ClinicianProfile: 'clinicianProfile',\n    PatientProfile: 'patientProfile',\n    OfficeProfile: 'officeProfile',\n}","/*\n * AppReducer\n *\n * The reducer takes care of our data. Using actions, we can change our\n * application state.\n * To add a new action, add it to the switch statement in the reducer function\n *\n * Example:\n * case YOUR_ACTION_CONSTANT:\n *   return state.set('yourStateVariable', true);\n */\nimport { combineReducers } from 'redux';\n// Action Types\nimport { AppActionTypes } from './types';\nimport { Current } from '../../../utils/constants';\n\n// The initial state of the App\nconst initialState = {\n  loading: false,\n  error: {\n    isError: false,\n    theError: {}\n  },\n  currentUser: {\n    // Currently nothing, but will use this instead of in config reducer\n  },\n  current_page: Current.Dashboard,\n};\n\nconst loading = (state = initialState.loading, action) => {\n  switch (action.type) {\n    case AppActionTypes.LOAD_APP:\n      return true;\n\n    case AppActionTypes.APP_LOADED_SUCCESS:\n    case AppActionTypes.APP_LOADED_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst error = (state = initialState.error, action) => {\n  switch (action.type) {\n    case AppActionTypes.LOAD_REPOS_ERROR:\n      return { isError: true, theError: action.payload };\n\n    case AppActionTypes.APP_LOADED_SUCCESS:\n    case AppActionTypes.LOAD_APP:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nconst current = (state = initialState.current_page, action) => {\n  switch (action.type) {\n    case AppActionTypes.CHANGE_CURRENT_PAGE:\n      return action.payload;  \n\n    default:\n      return state;\n  }\n};\n\n\nexport default combineReducers({\n  loading,\n  error,\n  current,\n});\n","/*\n * PatientTypes\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * types here. We prefix them with '[ Patient ]' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_TYPE: '[Patient] whatever your action is doing';\n */\nexport const PatientPageActionTypes = {\n  CHANGE_USERNAME: '[ Patient ] Change user name',\n  GET_PATIENT_DATA_FOR_EPIC: '[ Patient ] Getting Patient Data from EPIC',\n  GET_PATIENT_DATA_SUCCESS: '[ Patient ] Getting Patient Data Success',\n  GET_PATIENT_DATA_ERROR: '[ Patient ] Getting Patient Data ERROR',\n};\n","/*\n * PatientReducer\n *\n * The reducer takes care of our data. Using actions, we can change our\n * application state.\n * To add a new action, add it to the switch statement in the reducer function\n *\n * Example:\n * case YOUR_ACTION_TYPE:\n *   return action.payload || [..action.payload] || {...action.payload} || state <= to clear;\n */\n\nimport { combineReducers } from 'redux';\nimport { PatientPageActionTypes } from './types';\n\n// The initial state of the App\nconst initialState = {\n  username: 'Larry Tom',\n  getPatientLoading: false,\n  userData: {},\n  userDataError: {},\n  \n};\n\nconst getPatientLoading = (state = initialState.getPatientLoading, action) => {\n  switch(action.type){\n    case PatientPageActionTypes.GET_PATIENT_DATA_FOR_EPIC:\n     return true;\n\n     case PatientPageActionTypes.GET_PATIENT_DATA_SUCCESS:\n     case PatientPageActionTypes.GET_PATIENT_DATA_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n}\n\nconst userData = (state = initialState.userData, action) => {\n    switch(action.type){\n      case PatientPageActionTypes.GET_PATIENT_DATA_SUCCESS:\n        return action.payload;\n\n      default:\n        return state;\n    }\n}\n\nconst userDataError = (state = initialState.userDataError, action) => {\n  switch(action.type){\n    case PatientPageActionTypes.GET_PATIENT_DATA_ERROR:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\n\nconst username = (state = initialState.username, action) => {\n  switch (action.type) {\n    case PatientPageActionTypes.CHANGE_USERNAME:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\n\n\nexport const patientReducer = combineReducers({\n  username,\n  userData,\n  getPatientLoading,\n  userDataError,\n});","/*\n * LoginTypes\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * types here. We prefix them with '[ Login ]' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_TYPE: '[Login] whatever your action is doing';\n */\nexport const LoginPageActionTypes = {\n  // CHANGE_USERNAME: '[ Login ] Change user name',\n  // HANDLE_RESIZE: '[ Login ] Handle Resize',\n  FORM_SUBMISSION: '[ Login ] Form Submission',\n};\n","/*\n * LoginReducer\n *\n * The reducer takes care of our data. Using actions, we can change our\n * application state.\n * To add a new action, add it to the switch statement in the reducer function\n *\n * Example:\n * case YOUR_ACTION_TYPE:\n *   return action.payload || [..action.payload] || {...action.payload} || state <= to clear;\n */\nimport { combineReducers } from 'redux';\nimport { LoginPageActionTypes } from './types';\n\n// The initial state of the App\nconst initialState = {\n  // isDesktop: true,\n  user: {\n    email: \"\",\n    password: \"\"\n  }\n};\n\n\n// const isDesktop = (state = initialState.isDesktop, action) => {\n//   const newState = { ...state }\n//   switch (action.type) {\n//     case LoginPageActionTypes.HANDLE_RESIZE:\n//       if (window.innerWidth <= 700) {\n//         return newState.isDesktop = false\n//       }\n//       else {\n//         return newState.isDesktop = true\n//       }\n//       break;\n\n//     default:\n//       return newState;\n//   }\n// };\n\nconst formSubmit = (state = initialState.user, action) => {\n  const newState = { ...state }\n  switch (action.type) {\n    case LoginPageActionTypes.FORM_SUBMISSION:\n\n      newState.email = action.payload.email\n      newState.password = action.payload.password\n      console.log(newState)\n      return newState\n      break;\n    default:\n      return state;\n  }\n}\n\nexport const loginReducer = combineReducers({\n  // isDesktop,\n  formSubmit\n});","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport { LOCATION_CHANGE } from 'react-router-redux';\n\nimport globalReducer from './containers/App/redux/reducer';\nimport { patientReducer } from './containers/PatientPage/redux/reducer';\nimport { loginReducer } from './containers/LoginPage/redux/reducer'\n\n\n// Initial routing state\nconst routeInitialState = {\n  location: null,\n};\n\nconst configInitialState = {\n userRole: 'clinician',\n userID: null,\n}\n/**\n * Merge route into the global application state\n */\nfunction routeReducer(state = routeInitialState, action) {\n  switch (action) {\n    case LOCATION_CHANGE:\n        return action.payload;\n    default:\n      return state;\n  }\n}\n/**\n * Setting the config file for the app and user\n */\nfunction configReducer(state = configInitialState, action) {\n  switch (state) {\n\n    default:\n      return state;\n  }\n}\n/**\n * Creates the main reducer;\n */\nexport const rootReducer = combineReducers({\n  route: routeReducer,\n  global: globalReducer,\n  patient: patientReducer,\n  login: loginReducer,\n  config: configReducer,\n});\n","import dateMath from 'date-arithmetic';\nimport Headshot1 from '../images/Avator-Headshots/Regular-Headshots/Headshot-1.jpg';\nimport Headshot2 from '../images/Avator-Headshots/Regular-Headshots/Headshot-2.jpg';\nimport Headshot3 from '../images/Avator-Headshots/Regular-Headshots/Headshot-3.jpg';\nimport Headshot4 from '../images/Avator-Headshots/Regular-Headshots/Headshot-4.jpg';\nimport Headshot5 from '../images/Avator-Headshots/Regular-Headshots/Headshot-5.jpg';\nimport Headshot6 from '../images/Avator-Headshots/Regular-Headshots/Headshot-6.jpg';\nimport Headshot7 from '../images/Avator-Headshots/Regular-Headshots/Headshot-7.jpg';\nimport Headshot8 from '../images/Avator-Headshots/Regular-Headshots/Headshot-8.jpg';\nimport Doctor4 from '../images/Avator-Headshots/Doctor-Headshots/Doctor-1.jpg';\n\n\nexport const Patient1MockData = {\n  id: 'PA#4837289HDSKJFLHDA',\n  userID: 3,\n  firstName: \"Carson\",\n  lastName: \"Alexander\",\n  cellPhone: \"323-565-4534\",\n  homePhone: null,\n  emailAddress: \"cAlexander@gmail.com\",\n  picture: Headshot1,\n  address: \"8567 Sun Street Los Angeles CA 90293\",\n  gender: \"Male\",\n  dateOfBirth: \"2019-03-01T12:51:56.1586433\",\n  insurance: \"Aetna\",\n  groupInsuranceNumber: 1238548,\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane\",\n    city: \"Los Angeles\",\n    state: \"CA\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\nexport const Patient2MockData = {\n  id: 'PA#134278732134018HG92344',\n  userID: 3,\n  firstName: \"Ivan\",\n  lastName: \"Baldy\",\n  cellPhone: \"323-565-4534\",\n  homePhone: null,\n  emailAddress: \"ibaldy@gmail.com\",\n  picture: Headshot2,\n  address: \"85 23rd Street\",\n  city: \"Los Angeles\",\n  state: \"CA\",\n  gender: \"Male\",\n  dateOfBirth: \"2019-03-01T12:51:56.1586433\",\n  insurance: \"Aetna\",\n  groupInsuranceNumber: 1238548,\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane Los Angeles, CA 90345\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\nexport const Patient3MockData = {\n  id: \"PA#34921902834UHSIDFUH\",\n  userID: 3,\n  firstName: \"Robert\",\n  lastName: \"Cruise\",\n  cellPhone: \"323-565-4534\",\n  homePhone: null,\n  emailAddress: \"rcruise@gmail.com\",\n  picture: Headshot3,\n  address: \"4536 5th Street\",\n  city: \"Los Angeles\",\n  state: \"CA\",\n  gender: \"Male\",\n  dateOfBirth: \"2019-03-01T12:51:56.1586433\",\n  insurance: \"Aetna\",\n  groupInsuranceNumber: 1238548,\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane Los Angeles, CA 90345\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\nexport const Patient4MockData = {\n  id: \"PA#UHKSDHJ7893274243\",\n  userID: 3,\n  firstName: \"Ashely\",\n  lastName: \"Hendricks\",\n  cellPhone: \"323-565-4534\",\n  homePhone: null,\n  emailAddress: \"ahendricks@gmail.com\",\n  picture: Headshot4,\n  address: \"238 Circle Drive\",\n  city: \"Los Angeles\",\n  state: \"CA\",\n  gender: \"Female\",\n  dateOfBirth: \"2019-03-01T12:51:56.1586433\",\n  insurance: \"Aetna\",\n  groupInsuranceNumber: 1238548,\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane Los Angeles, CA 90345\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\n\nexport const Patient5MockData = {\n  id: \"PA#123984HADSKHFA932AX\",\n  userID: 3,\n  firstName: \"Chrissy\",\n  lastName: \"Ellis\",\n  cellPhone: \"323-565-3421\",\n  homePhone: null,\n  emailAddress: \"cEllis@gmail.com\",\n  picture: Headshot5,\n  address: \"1 Marvin Street\",\n  city: \"Los Angeles\",\n  state: \"CA\",\n  gender: \"Female\",\n  dateOfBirth: \"1995-03-01T12:51:56.1586433\",\n  insurance: \"Aetna\",\n  groupInsuranceNumber: 1238548,\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane Los Angeles, CA 90345\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n};\n\nexport const CalendarEvents = [\n  {\n    id: 0,\n    title: 'All Day Event very long title',\n    allDay: true,\n    start: new Date(2019, 3, 0),\n    end: new Date(2019, 3, 1),\n  },\n  {\n    id: 1,\n    title: 'Long Event',\n    start: new Date(2019, 3, 7),\n    end: new Date(2019, 3, 10),\n  },\n\n  {\n    id: 2,\n    title: 'DTS STARTS',\n    start: new Date(2016, 2, 13, 0, 0, 0),\n    end: new Date(2016, 2, 20, 0, 0, 0),\n  },\n\n  {\n    id: 3,\n    title: 'DTS ENDS',\n    start: new Date(2016, 10, 6, 0, 0, 0),\n    end: new Date(2016, 10, 13, 0, 0, 0),\n  },\n\n  {\n    id: 4,\n    title: 'Some Event',\n    start: new Date(2019, 3, 9, 0, 0, 0),\n    end: new Date(2019, 3, 10, 0, 0, 0),\n  },\n  {\n    id: 5,\n    title: 'Conference',\n    start: new Date(2019, 3, 11),\n    end: new Date(2019, 3, 13),\n    desc: 'Big conference for important people',\n  },\n  {\n    id: 6,\n    title: 'Meeting',\n    start: new Date(2019, 3, 12, 10, 30, 0, 0),\n    end: new Date(2019, 3, 12, 12, 30, 0, 0),\n    desc: 'Pre-meeting meeting, to prepare for the meeting',\n  },\n  {\n    id: 7,\n    title: 'Lunch',\n    start: new Date(2019, 3, 12, 12, 0, 0, 0),\n    end: new Date(2019, 3, 12, 13, 0, 0, 0),\n    desc: 'Power lunch',\n  },\n  {\n    id: 8,\n    title: 'Meeting',\n    start: new Date(2019, 3, 12, 14, 0, 0, 0),\n    end: new Date(2019, 3, 12, 15, 0, 0, 0),\n  },\n  {\n    id: 9,\n    title: 'Meeting',\n    start: new Date(2019, 3, 12, 17, 0, 0, 0),\n    end: new Date(2019, 3, 12, 17, 30, 0, 0),\n    desc: 'With a client.',\n  },\n  {\n    id: 10,\n    title: 'Dinner',\n    start: new Date(2019, 3, 12, 20, 0, 0, 0),\n    end: new Date(2019, 3, 12, 21, 0, 0, 0),\n  },\n  {\n    id: 11,\n    title: 'Birthday Party',\n    start: new Date(2019, 3, 13, 7, 0, 0),\n    end: new Date(2019, 3, 13, 10, 30, 0),\n  },\n  {\n    id: 12,\n    title: 'Late Night Event',\n    start: new Date(2019, 3, 17, 19, 30, 0),\n    end: new Date(2019, 3, 18, 2, 0, 0),\n  },\n  {\n    id: 12.5,\n    title: 'Late Same Night Event',\n    start: new Date(2019, 3, 17, 19, 30, 0),\n    end: new Date(2019, 3, 17, 23, 30, 0),\n  },\n  {\n    id: 13,\n    title: 'Multi-day Event',\n    start: new Date(2019, 3, 20, 19, 30, 0),\n    end: new Date(2019, 3, 22, 2, 0, 0),\n  },\n  {\n    id: 14,\n    title: 'Today',\n    start: new Date(new Date().setHours(new Date().getHours() - 3)),\n    end: new Date(new Date().setHours(new Date().getHours() + 3)),\n  },\n];\n\nconst MILLI = {\n  seconds: 1000,\n  minutes: 1000 * 60,\n  hours: 1000 * 60 * 60,\n  day: 1000 * 60 * 60 * 24,\n}\n\nconst MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n\n\nlet dates = {\n  ...dateMath,\n\n  monthsInYear(year) {\n    let date = new Date(year, 0, 1)\n\n    return MONTHS.map(i => dates.month(date, i))\n  },\n\n  firstVisibleDay(date, localizer) {\n    let firstOfMonth = dates.startOf(date, 'month')\n\n    return dates.startOf(firstOfMonth, 'week', localizer.startOfWeek())\n  },\n\n  lastVisibleDay(date, localizer) {\n    let endOfMonth = dates.endOf(date, 'month')\n\n    return dates.endOf(endOfMonth, 'week', localizer.startOfWeek())\n  },\n\n  visibleDays(date, localizer) {\n    let current = dates.firstVisibleDay(date, localizer),\n      last = dates.lastVisibleDay(date, localizer),\n      days = []\n\n    while (dates.lte(current, last, 'day')) {\n      days.push(current)\n      current = dates.add(current, 1, 'day')\n    }\n\n    return days\n  },\n\n  ceil(date, unit) {\n    let floor = dates.startOf(date, unit)\n\n    return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit)\n  },\n\n  range(start, end, unit = 'day') {\n    let current = start,\n      days = []\n\n    while (dates.lte(current, end, unit)) {\n      days.push(current)\n      current = dates.add(current, 1, unit)\n    }\n\n    return days\n  },\n\n  merge(date, time) {\n    if (time == null && date == null) return null\n\n    if (time == null) time = new Date()\n    if (date == null) date = new Date()\n\n    date = dates.startOf(date, 'day')\n    date = dates.hours(date, dates.hours(time))\n    date = dates.minutes(date, dates.minutes(time))\n    date = dates.seconds(date, dates.seconds(time))\n    return dates.milliseconds(date, dates.milliseconds(time))\n  },\n\n  eqTime(dateA, dateB) {\n    return (\n      dates.hours(dateA) === dates.hours(dateB) &&\n      dates.minutes(dateA) === dates.minutes(dateB) &&\n      dates.seconds(dateA) === dates.seconds(dateB)\n    )\n  },\n\n  isJustDate(date) {\n    return (\n      dates.hours(date) === 0 &&\n      dates.minutes(date) === 0 &&\n      dates.seconds(date) === 0 &&\n      dates.milliseconds(date) === 0\n    )\n  },\n\n  duration(start, end, unit, firstOfWeek) {\n    if (unit === 'day') unit = 'date'\n    return Math.abs(\n      dates[unit](start, undefined, firstOfWeek) -\n      dates[unit](end, undefined, firstOfWeek)\n    )\n  },\n\n  diff(dateA, dateB, unit) {\n    if (!unit || unit === 'milliseconds') return Math.abs(+dateA - +dateB)\n\n    // the .round() handles an edge case\n    // with DST where the total won't be exact\n    // since one day in the range may be shorter/longer by an hour\n    return Math.round(\n      Math.abs(\n        +dates.startOf(dateA, unit) / MILLI[unit] -\n        +dates.startOf(dateB, unit) / MILLI[unit]\n      )\n    )\n  },\n\n  total(date, unit) {\n    let ms = date.getTime(),\n      div = 1\n\n    switch (unit) {\n      case 'week':\n        div *= 7\n      case 'day':\n        div *= 24\n      case 'hours':\n        div *= 60\n      case 'minutes':\n        div *= 60\n      case 'seconds':\n        div *= 1000\n    }\n\n    return ms / div\n  },\n\n  week(date) {\n    var d = new Date(date)\n    d.setHours(0, 0, 0)\n    d.setDate(d.getDate() + 4 - (d.getDay() || 7))\n    return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7)\n  },\n\n  today() {\n    return dates.startOf(new Date(), 'day')\n  },\n\n  yesterday() {\n    return dates.add(dates.startOf(new Date(), 'day'), -1, 'day')\n  },\n\n  tomorrow() {\n    return dates.add(dates.startOf(new Date(), 'day'), 1, 'day')\n  },\n}\nexport let CalendarDates = dates;\n\nexport const patientAppointments = [{\n  appointment_time: '12:00 PM',\n  appointment_date: '03/03/2019',\n  patient_Name: 'Yusef Trowell',\n  patient_Email: 'ytrowell@gmail.com',\n  assigned_To: {\n    photo: Headshot1,\n    clinicians_Name: 'Debbie Allen'\n  },\n  service: 'Speech Therapy',\n  duration: '30min',\n  status: 'Approved'\n},\n{\n  appointment_time: '3:00 PM',\n  appointment_date: '01/03/2019',\n  patient_Name: 'John Doe',\n  patient_Email: 'johndoe@gmail.com',\n  assigned_To: {\n    photo: Headshot1,\n    clinicians_Name: 'Max Payne'\n  },\n  service: 'Medical',\n  duration: '90min',\n  status: 'Pending'\n}, {\n  appointment_time: '09:00 AM',\n  appointment_date: '12/12/2017',\n  patient_Name: 'Kayne West',\n  patient_Email: 'testing@gmail.com',\n  assigned_To: {\n    photo: Headshot1,\n    clinicians_Name: 'Keith Adams'\n  },\n  service: 'Medidtation',\n  duration: '60min',\n  status: 'Approved'\n}]","import { Patient1MockData, Patient2MockData, Patient3MockData, Patient4MockData, Patient5MockData} from '../../../mock-data';\nimport { PatientPageActionTypes } from './types';\nimport { patientDataSuccess, patientDataError} from './actions';\nimport { combineEpics, ofType } from 'redux-observable';\nimport { switchMap, catchError, startWith } from 'rxjs/operators';\nimport { defer, Observable } from 'rxjs';\n\n// -- User Imports\n// import { request } from 'utils/request';\n\nconst getPatientData = (state, payload) =>\n Observable.create(async observer => {\n   try {\n\n    //  let data;\n\n    //  if (config.enableMock) {\n    //    data = fetchKidProfileData;\n    //  } else {\n    //    //TODO: Put real request when API is ready\n    //    data = await request.post(`${config.baseUrl}/kid-profile/`, {\n    //      body: JSON.stringify(payload),\n    //      headers: {\n    //        Accept: 'application/json',\n    //        'Content-Type': 'application/json',\n    //        //TODO: Auth Here\n    //      },\n    //      //params: params,\n    //    });\n    //  }\n      const patients = [Patient1MockData, Patient2MockData, Patient3MockData, Patient4MockData, Patient5MockData]\n      const randomPatient = patients[Math.floor(Math.random()*patients.length)];\n      console.log(randomPatient)\n\n     observer.next(patientDataSuccess(randomPatient));\n   } catch (err) {\n     observer.next(patientDataError(err));\n   } finally {\n     observer.complete();\n   }\n });\n\nconst patientDataEpic = (action$, state$) =>\n action$.pipe(\n   ofType(PatientPageActionTypes.GET_PATIENT_DATA_FOR_EPIC),\n   switchMap(({ payload }) => defer(() => getPatientData(state$.value, payload))),\n );\n\nexport const PatientEpic = combineEpics(\n  patientDataEpic\n);\n","/*\n * Patient Actions\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your types\n * 2) Add a function like this:\n *    export yourAction = (var || var, var) => ({\n *        type: YOUR_ACTION_TYPE,\n *        payload: var || payload: { var, var}\n *    });\n */\nimport { PatientPageActionTypes } from './types';\n\n/**\n * Changes the input field of the form\n * @param  {string} username The new text of the input field\n * @return {object}    An action object with a type of CHANGE_USERNAME\n */\nexport const changeUsername = (username) => ({\n  type: PatientPageActionTypes.CHANGE_USERNAME,\n  payload: username\n});\n\n/**\n * Changes the input field of the form\n * @return {Array}    An action object with a type of CHANGE_USERNAME\n */\nexport const getPatientData = (id) => ({\n  type: PatientPageActionTypes.GET_PATIENT_DATA_FOR_EPIC,\n  payload: id,\n});\n\n\nexport const patientDataSuccess = (response) => ({\n  type: PatientPageActionTypes.GET_PATIENT_DATA_SUCCESS,\n  payload: response,\n});\n\nexport const patientDataError = (error) => ({\n  type: PatientPageActionTypes.GET_PATIENT_DATA_ERROR,\n  payload: error,\n});\n\n","import { combineEpics } from 'redux-observable';\nimport { PatientEpic } from './containers/PatientPage/redux/epic'\n\n// Epics\nexport const rootEpic = combineEpics(\n    PatientEpic,\n\n\n);\n","/**\n * The global state selectors\n */\n\nimport { createSelector } from 'reselect';\n//Regular Selectors\nexport const getCurrentPage = (state) => state.global.current;\n\n\n\n\n\nconst selectGlobal = (state) => state.get('global');\n\nconst selectRoute = (state) => state.get('route');\n\nconst makeSelectCurrentUser = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.get('currentUser')\n);\n\nconst makeSelectLoading = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.get('loading')\n);\n\nconst makeSelectError = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.get('error')\n);\n\nconst makeSelectLocation = () => createSelector(\n  selectRoute,\n  (routeState) => routeState.get('location').toJS()\n);\n\nexport {\n  selectGlobal,\n  makeSelectCurrentUser,\n  makeSelectLoading,\n  makeSelectError,\n  makeSelectLocation,\n};\n","import styled from 'styled-components';\nimport AppBar from '@material-ui/core/AppBar';\n\nexport const HeaderWrapper = styled(AppBar)`\n  height: 50px;\n  width: calc(100vw - 200px);\n  background-color: var(--color-secondary) !important;\n  position: relative !important;\n  box-shadow: none !important;\n  padding: 0px !important;\n  margin: 0;\n  div:first-child {\n    padding: 0px !important;\n    box-shadow: none !important;\n    height: 50px;\n    min-height: 50px !important;\n  }\n`;\n","import styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\n\nexport const StyledButton = styled(Button)`\nbackground-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\nheight: ${({ heights }) => (heights)}!important;\nwidth: ${({ widths }) => (widths)}!important;\nbox-shadow: ${({ boxshadow }) => (boxshadow)}!important;\ncolor: ${({ colors }) => (colors)}!important;\nborder-radius: ${({ bordersradius }) => (bordersradius)}!important;\nfont-size: ${({ fontssize }) => (fontssize)}!important;\nmargin: ${({ margins }) => (margins)}!important;\nborder: ${({ borders }) => (borders)} !important;\nline-height: ${({ linesheight }) => (linesheight)} !important;\n@media only screen and (max-width: 1029px) and (min-width: 400px){\n    min-width: ${({ mediaminwidths }) => (mediaminwidths)}!important;\n   }\n`;","import styled from 'styled-components';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Menu from '@material-ui/icons/Menu';\n\nexport const StyledEditIcon = styled(EditIcon)`\nbackground-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\nheight: ${({ heights }) => (heights)}!important;\nwidth: ${({ widths }) => (widths)}!important;\nbox-shadow: ${({ boxshadow }) => (boxshadow)}!important;\ncolor: ${({ colors }) => (colors)}!important;\nborder-radius: ${({ bordersradius }) => (bordersradius)}!important;\nfont-size: ${({ fontssize }) => (fontssize)}!important;\nmargin: ${({ margins }) => (margins)}!important;\nborder: ${({ borders }) => (borders)} !important;\n`;\n\nexport const StyledAccountCircleIcon = styled(AccountCircle)`\nbackground-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\nheight: ${({ heights }) => (heights)}!important;\nwidth: ${({ widths }) => (widths)}!important;\nbox-shadow: ${({ boxshadow }) => (boxshadow)}!important;\ncolor: ${({ colors }) => (colors)}!important;\nborder-radius: ${({ bordersradius }) => (bordersradius)}!important;\nfont-size: ${({ fontssize }) => (fontssize)}!important;\nmargin: ${({ margins }) => (margins)}!important;\nborder: ${({ borders }) => (borders)} !important;\n`;\n\nexport const StyledMoreVertIcon = styled(Menu)`\nbackground-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\nheight: ${({ heights }) => (heights)}!important;\nwidth: ${({ widths }) => (widths)}!important;\nbox-shadow: ${({ boxshadow }) => (boxshadow)}!important;\ncolor: ${({ colors }) => (colors)}!important;\nborder-radius: ${({ bordersradius }) => (bordersradius)}!important;\nfont-size: ${({ fontssize }) => (fontssize)}!important;\nmargin: ${({ margins }) => (margins)}!important;\nborder: ${({ borders }) => (borders)} !important;\n`;\n","import styled from 'styled-components';\n\nexport const SideMenuWrapper = styled.div`\n  height: 100vh;\n  width: 250px;\n  position: fixed;\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 0;\n  top: 0;\n  left: 0;\n  background-color: var(--color-white) !important;\n  box-shadow: none !important;\n  div:first-child {\n    padding: 0px !important;\n    box-shadow: none !important;\n  }\n  p{\n    padding-left: 20px;\n  }\n  a{\n    color:black;\n  }\n\n  li {\n    display: flex;\n    justify-content: center;\n  }\n\n\n  @media only screen and (max-width: 600px) and (min-width: 400px){\n    display: none;\n    padding: 20px;\n    align-items: center;\n  }\n`;\n\nexport const SideMenuSettings = styled.div`\n  justify-content: flex-end;\n  text-align:center;\n  position: fixed;\n  bottom: 2%;\n  left:100px;\n`;\n","import styled from 'styled-components';\nimport Divider from '@material-ui/core/Divider';\n\n\nexport const StyledDivider = styled(Divider)`\n  background-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\n  height: ${({ heights }) => (heights)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  box-shadow: ${({ boxshadow }) => (boxshadow)}!important;\n  color: ${({ colors }) => (colors)}!important;\n  border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n  font-size: ${({ fontssize }) => (fontssize)}!important;\n  margin: ${({ margins }) => (margins)}!important;\n  padding: ${({ paddings }) => (paddings)}!important;\n  display: ${({ displays }) => (displays)}!important;\n  @media only screen and (max-width: 1029px) and (min-width: 400px){\n    display: ${({ mediadisplays }) => (mediadisplays)}!important;\n  }\n`;","/*\n * ClinicianSideMenu\n * Condiditonal based on usertype doctor\n */\nimport React, { Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { styles } from './style';\n\n//Material UI\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { AssignmentTurnedIn, DateRange, Chat, Home, Person, Settings, Assessment, VideoCam, Ballot, People } from '@material-ui/icons';\n//Styled\nimport Logo from '../../../images/global-mentality-icon.svg';\nimport { SideMenuWrapper } from '../../../styled-components/SideMenu/side-menu-styled';\nimport { StyledDivider } from '../../../styled-components/Divider/divider-styled';\nimport SVG from 'react-inlinesvg';\n\nclass ClinicianSideMenu extends PureComponent { // eslint-disable-line react/prefer-stateless-function\n\n    componentDidMount() {\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            // <Fragment>\n            //     <List>\n            //         <ListItem>\n            //             <h4>Patients</h4>\n            //         </ListItem>\n            //         <ListItem>\n            //             <ListItemIcon>\n            //                 <Home />\n            //             </ListItemIcon>\n            //             <ListItemText primary=\"Overview\" />\n            //         </ListItem>\n\n            //     </List>\n\n            // </Fragment>\n            <Fragment>\n                <div>\n                    <img src={Logo} className={classes.img} />\n                    {/* Only problem that I have with  */}\n                    {/* <SVG src={Logo} className={classes.img} /> */}\n                </div>\n\n                <SideMenuWrapper>\n                    <SVG src={Logo} />\n                </SideMenuWrapper>\n\n                <MenuList className={classes.menuList}>\n                    <div>\n                        <h3 className={classes.heading}>Menu</h3>\n                    </div>\n                    <MenuItem className={classes.menuItem}>\n                        <ListItemIcon className={classes.icon}>\n                            <Home />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Dashboard\" />\n                    </MenuItem>\n                    <MenuItem className={classes.menuItem}>\n                        <ListItemIcon className={classes.icon}>\n                            <AssignmentTurnedIn />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Appointments\" />\n                    </MenuItem>\n                    <MenuItem className={classes.menuItem}>\n                        <ListItemIcon className={classes.icon}>\n                            <DateRange />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Calendar\" />\n                    </MenuItem>\n                    <MenuItem className={classes.menuItem}>\n                        <ListItemIcon className={classes.icon}>\n                            <Chat />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Services\" />\n                    </MenuItem>\n                    <MenuItem className={classes.menuItem}>\n                        <ListItemIcon className={classes.icon}>\n                            <Ballot />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Patients\" />\n                    </MenuItem>\n                    <MenuItem className={classes.menuItem}>\n                        <ListItemIcon className={classes.icon}>\n                            <People />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Personnel\" />\n                    </MenuItem>\n                    <MenuItem className={classes.menuItem}>\n                        <ListItemIcon className={classes.icon}>\n                            <Settings />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Settings\" />\n                    </MenuItem>\n                    <StyledDivider heights={'1px'} backgroundscolor={'var(--color-secondary)'} variant={'middle'} />\n                    <MenuItem className={classes.menuItem}>\n                        <ListItemIcon className={classes.icon}>\n                            <Person />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} primary=\"Profile\" />\n                    </MenuItem>\n                    <StyledDivider heights={'1px'} backgroundscolor={'var(--color-secondary)'} variant={'middle'} />\n                    <MenuItem style={{ paddingLeft: '20px' }}>\n                        <ListItemText primary=\"Invite friends\" />\n                    </MenuItem>\n                    <MenuItem style={{ paddingLeft: '20px' }}>\n                        <ListItemText primary=\"Help & Support\" />\n                    </MenuItem>\n                    <MenuItem style={{ paddingLeft: '20px' }}>\n                        <ListItemText primary=\"Feedback\" />\n                    </MenuItem>\n                </MenuList>\n            </Fragment>\n        );\n    }\n}\n\nClinicianSideMenu.propTypes = {\n\n};\n\nexport default withStyles(styles)(ClinicianSideMenu)","/*\n * PatientSideMenu\n *  Condiditonal based on usertype doctor\n */\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport { StyledDivider } from '../../../styled-components/Divider/divider-styled';\nimport { AssignmentTurnedIn, DateRange, Chat, Home, Person } from '@material-ui/icons';\nimport { SideMenuWrapper } from '../../../styled-components/SideMenu/side-menu-styled';\nimport Logo from '../../../images/global-mentality-icon.svg';\nimport { styles } from './style';\nimport SVG from 'react-inlinesvg';\n\nimport { Current } from '../../../utils/constants';\nclass PatientSideMenu extends Component { // eslint-disable-line react/prefer-stateless-function\n    \n    dashboardRef = React.createRef();\n    buttonRef = React.createRef();\n    componentDidMount() {\n        const { changePage, currentPage } = this.props;\n        if(currentPage === Current.Dashboard){\n            this.buttonRef.current.focus();\n            this.dashboardRef.current.props.onClick(changePage(Current.Dashboard));\n        }   \n    }\n\n    render() {\n        const { classes, changePage } = this.props;\n        return (\n            <Fragment>\n                <div>\n                    <img src={Logo} className={classes.img} />\n                    {/* Only problem that I have with  */}\n                    {/* <SVG src={Logo} className={classes.img} /> */}\n                </div>\n\n                <SideMenuWrapper>\n                    <SVG src={Logo} />\n                </SideMenuWrapper>\n\n                <MenuList className={classes.menuList}>\n                    <div>\n                        <h3 className={classes.heading}>Menu</h3>\n                    </div>\n                    <MenuItem className={classes.menuItem} ref={this.dashboardRef} buttonRef={this.buttonRef} onClick={()=> changePage(Current.Dashboard)}>\n                        <ListItemIcon className={classes.icon}>\n                            <Home />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Dashboard\" />\n                    </MenuItem>\n                    <MenuItem className={classes.menuItem} onClick={()=> changePage(Current.Appointments)}>\n                        <ListItemIcon className={classes.icon}>\n                            <AssignmentTurnedIn />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Appointments\" />\n                    </MenuItem>\n                    <MenuItem className={classes.menuItem} onClick={()=> changePage(Current.Calendar)}>\n                        <ListItemIcon className={classes.icon}>\n                            <DateRange />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Calendar\" />\n                    </MenuItem>\n                    <MenuItem className={classes.menuItem} onClick={()=> changePage(Current.Messaging)}>\n                        <ListItemIcon className={classes.icon}>\n                            <Chat />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Messaging\" />\n                    </MenuItem>\n\n                    <StyledDivider heights={'1px'} backgroundscolor={'var(--color-secondary)'} variant={'middle'} />\n\n                    <MenuItem className={classes.menuItem} onClick={()=> changePage(Current.PatientProfile)}>\n                        <ListItemIcon className={classes.icon}>\n                            <Person />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} primary=\"Profile\" />\n                    </MenuItem>\n\n                    <StyledDivider heights={'1px'} backgroundscolor={'var(--color-secondary)'} variant={'middle'} />\n                    <MenuItem style={{paddingLeft: '20px'}}>\n                        <ListItemText primary=\"Invite friends\" />\n                    </MenuItem>\n                    <MenuItem style={{paddingLeft: '20px'}}>\n                        <ListItemText primary=\"Help & Support\" />\n                    </MenuItem>\n                    <MenuItem style={{paddingLeft: '20px'}}>\n                        <ListItemText primary=\"Feedback\" />\n                    </MenuItem>\n                </MenuList>\n\n            </Fragment>\n        );\n    }\n}\n\nPatientSideMenu.propTypes = {\n    classes: PropTypes.any\n};\n\nexport default withStyles(styles)(PatientSideMenu)\n","import { Autorenew } from \"@material-ui/icons\";\n\nexport const styles = theme => ({\n    menuItem: {\n        '&:focus': {\n            backgroundColor: 'var(--color-blue)',\n            '& $primary, & $icon': {\n                color: 'var(--color-white)',\n            },\n        },\n    },\n    primary: {},\n    icon: {},\n    img: {\n        // padding: '20px',\n        margin: '10% 40%',\n        marginBottom: '-15%'\n    },\n    heading: {\n        marginLeft: '8%',\n\n    }\n});","import { Autorenew } from \"@material-ui/icons\";\n\nexport const styles = theme => ({\n    menuItem: {\n        '&:focus': {\n            backgroundColor: 'var(--color-blue)',\n            '& $primary, & $icon': {\n                color: 'var(--color-white)',\n            },\n        },\n    },\n    primary: {},\n    icon: {},\n    img: {\n        // padding: '20px',\n        margin: '10% 40%',\n        marginBottom: '-15%'\n    },\n    heading: {\n        marginLeft: '8%',\n\n    }\n});","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { styles } from './style';\n//Material UI Items\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from \"@material-ui/core/Hidden\";\n//Styled Components\nimport { HeaderWrapper } from '../../styled-components/Header/header-styled';\nimport { StyledButton } from '../../styled-components/Buttons/buttons-styled';\nimport { StyledMoreVertIcon } from '../../styled-components/Icons/icons-styled';\n//Components\nimport ClinicianSideMenu from '../Clinicians/ClinicianSideMenu';\nimport PatientSideMenu from '../Patients/PatientSideMenu/PatientSideMenu';\n\n\nclass Header extends Component { // eslint-disable-line react/prefer-stateless-function\n  state = {\n    anchorEl: null,\n    mobileMoreAnchorEl: null,\n    mobileOpen: false\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleMobileMenuClose)\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleMobileMenuClose)\n  }\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null });\n    this.handleMobileMenuClose();\n  };\n\n  handleMobileMenuClose = () => {\n    if (window.innerWidth >= 600 && this.state.mobileOpen) {\n      this.setState({ mobileOpen: false });\n    }\n  };\n\n  handleDrawerToggle = () => {\n\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  render() {\n    const { anchorEl, mobileMoreAnchorEl } = this.state;\n    const { classes, changePage, currentProfile, currentPage } = this.props;\n    const isMenuOpen = Boolean(anchorEl);\n\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const renderMenu = (\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMenuOpen}\n        onClose={this.handleMenuClose}\n      >\n        <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\n        <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n      </Menu>\n    );\n    const drawer = (\n      <div>\n        {/* <ClinicianSideMenu changePage={changePage} currentPage={currentPage} /> */}\n        <PatientSideMenu changePage={changePage} currentPage={currentPage} />\n      </div>\n    );\n\n\n    return (\n      <Fragment>\n        <HeaderWrapper>\n          <Toolbar>\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <StyledButton\n                backgroundscolor={'var(--color-primary)'}\n                colors={'var(--color-secondary)'}\n                widths={'50px'}\n                heights={'50px'}\n                bordersradius={'0px'}\n                fontssize={'10px'}\n                margins={'0'}\n                onClick={() => changePage(currentProfile)}\n              >\n                <AccountCircle />\n              </StyledButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <StyledButton\n                backgroundscolor={'var(--color-primary)'}\n                colors={'var(--color-secondary)'}\n                widths={'50px'}\n                heights={'50px'}\n                bordersradius={'0px'}\n                fontssize={'10px'}\n                margins={'0'}\n                mediaminwidths={'50px'}\n                // onClick={this.handleMobileMenuOpen}\n                onClick={this.handleDrawerToggle}\n                aria-haspopup=\"true\"\n              >\n                <StyledMoreVertIcon colors={'var(--color-secondary)'} />\n              </StyledButton>\n            </div>\n          </Toolbar>\n        </HeaderWrapper>\n\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={this.props.container}\n              variant=\"temporary\"\n              anchor=\"right\"\n              open={this.state.mobileOpen}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n\n        </nav>\n        {renderMenu}\n        {/* {renderMobileMenu} */}\n      </Fragment>\n    );\n  }\n}\nHeader.propTypes = {\n  classes: PropTypes.any,\n};\nexport default withStyles(styles)(Header);\n","export const styles = (theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  title: {\n    display: 'block',\n    marginLeft: '20px',\n    fontSize: '12px',\n    color: 'var(--color-secondary)',\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n});\n","/*\n * PatientPage\n * This is the first thing users see of our App, at the '/' route\n */\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\n// import Drawer from '@material-ui/core/Drawer';\nimport PatientSideMenu from '../Patients/PatientSideMenu/PatientSideMenu';\nimport { SideMenuWrapper } from '../../styled-components/SideMenu/side-menu-styled';\nimport ClinicianSideMenu from '../Clinicians/ClinicianSideMenu/ClinicianSideMenu';\n\n\nexport default class SideMenu extends Component { // eslint-disable-line react/prefer-stateless-function\n\n  state = {\n    open: true\n  }\n  componentDidMount() {\n    window.addEventListener('screenSize', this.handleDrawerOpen);\n    if (window.innerWidth >= 600) {\n      this.setState({ open: true });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('screenSize', this.handleDrawerOpen);\n  }\n  handleDrawerOpen = () => {\n    if (window.innerWidth >= 600) {\n      this.setState({ open: true });\n    }\n    else {\n      this.setState({ open: false })\n    };\n  }\n\n\n  render() {\n    const { open } = this.state;\n    const { changePage, currentPage } = this.props;\n\n    return (\n      <Fragment>\n        <SideMenuWrapper>\n          {/* <ClinicianSideMenu currentPage={currentPage} changePage={changePage} /> */}\n          <PatientSideMenu currentPage={currentPage} changePage={changePage} />\n        </SideMenuWrapper>\n      </Fragment>\n    );\n  }\n}\n\nSideMenu.propTypes = {\n\n};\n","import styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport { Button } from '@material-ui/core';\n\nexport const PatientCardWrapper = styled(Card)`\n  min-height: auto;\n  height: ${({ heights }) => (heights ? heights : '100%')}!important;\n  max-width: ${({ maxwidths }) => (maxwidths)}!important;\n  min-width: ${({ minwidths }) => (minwidths)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  background-color: var(--color-white)!important;\n  display: flex;\n  flex-flow: column wrap;\n  margin: ${({ margins }) => (margins)}!important;\n  padding: ${({paddings }) => (paddings ? paddings : '20px')}};\n  margin-right: 65px;\n  border-radius: ${({ bordersradius }) => (bordersradius ? bordersradius : '0px')}!important;\n  box-shadow: ${({ boxshadows }) => (!boxshadows ? 'none' : '')}!important;\n  justify-content: ${({ justify }) => (justify)}!important;\n}\n  li {\n    height: ${({ liheight }) => (liheight)}!important;\n  }\n\n  .MuiListItem-root-127{\n   text-align:center;\n  }\n  .MuiListItem-gutters-135{\n    padding: 0 !important\n  }\n\n  .MuiList-root-120 li:first-child{\n    margin-right: 18px\n  }\n\n  .MuiInputBase-root-198{\n    background-color: #F2F3F5;\n    margin-bottom: 30px;\n    border-radius: 5px;\n    width:90%;\n    padding: .8% .5%;\n  }\n\n  .MuiTypography-subheading-153{\n    font-weight: bold;\n  }\n  @media only screen and (max-width: 600px) and (min-width: 400px){\n    padding: 10px;\n    width: ${({ mediawidths }) => (mediawidths)}!important;\n    margin: ${({ mediamargins }) => (mediamargins)}!important;\n  }\n`;\nexport const PatientSubHeader = styled(Card)`\n  min-height: 50px;\n  height: 100%;\n  background-color: var(--color-white) !important;\n  display: flex;\n  flex-flow: column wrap;\n  padding: 20px;\n  margin-right: 65px;\n  border-radius: 0px !important;\n  box-shadow: none !important;\n  @media only screen and (max-width: 600px) and (min-width: 400px){\n    padding: 10px;\n  }\n`;\nexport const PatientCardInformationWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n`;\nexport const PatientHeaderWrapper = styled.div`\n  height: 65px;\n  background-color: var(--color-white) !important;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  margin-right: 65px;\n  border-radius: 0px !important;\n  box-shadow: none !important;\n  margin-bottom: 3px;\n  @media only screen and (max-width: 600px) and (min-width: 400px){\n    margin-right: 50px!important;\n   }\n`;\nexport const PatientAppointmentStatusWrapper = styled.div`\n  display: flex;\n  justify-content:${({ justify }) => (justify ? justify : 'center')}!important;\n  align-items: ${({ align }) => (align ? align : '')}!important;\n  flex-flow: ${({ flexsflow }) => (flexsflow ? flexsflow : 'column wrap')}!important;\n  background-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\n  height: ${({ heights }) => (heights)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  box-shadow: ${({ boxshadow }) => (boxshadow)}!important;\n  color: ${({ colors }) => (colors ? colors : \"var(--color-grey-text)\")}!important;\n  border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n  font-size: ${({ fontssize }) => (fontssize ? fontssize : '11px')}!important;\n  margin: ${({ margins }) => (margins)}!important;\n  border: ${({ borders }) => (borders)} !important;\n  margin-top: ${({ marginsTop }) => (marginsTop ? marginsTop : ' -10px 0')}!important;\n  font-weight: ${({ fontsweight }) => (fontsweight)}!important;\n  @media only screen and (max-width: 1029px) and (min-width: 400px){\n    width: ${({ mediawidths }) => (mediawidths)}!important;\n    justify-content:${({ mediajustify }) => (mediajustify)}!important;\n    flex-flow: ${({ mediaflexsflow }) => (mediaflexsflow)}!important;\n    align-items:${({ mediaalign }) => (mediaalign)}!important;\n    margin: ${({ mediamargins }) => (mediamargins)}!important;\n  }\n`;\nexport const PatientProfileCard = styled(Card)`\n  display: flex;\n  justify-content: flex-start !important;\n  align-items: center !important;\n  flex-flow: column wrap !important;\n  height: 600px !important;\n  width: 300px !important;\n  box-shadow: none !important;\n  color: var(--color-grey-text) !important;\n  font-size: 11px !important;\n  margin: 40px 20px 40px 0 !important;\n  margin-top: -10px 0 !important;\n  @media only screen and (max-width: 1029px) and (min-width: 400px){\n    width: ${({ mediawidths }) => (mediawidths)}!important;\n    justify-content:${({ mediajustify }) => (mediajustify)}!important;\n    flex-flow: ${({ mediaflexsflow }) => (mediaflexsflow)}!important;\n    align-items:${({ mediaalign }) => (mediaalign)}!important;\n    margin: ${({ mediamargins }) => (mediamargins)}!important;\n  }\n`;\nexport const PatientCardButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 28px 10px 0 10px;\n\n`;\n\nexport const PatientCardRow = styled.div`\n  margin-top: 30px;\n  background-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\n  height: ${({ heights }) => (heights)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  box-shadow: ${({ boxshadow }) => (boxshadow)}!important;\n  color: ${({ colors }) => (colors ? colors : \"var(--color-black-text)\")}!important;\n  border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n  font-size: ${({ fontssize }) => (fontssize ? fontssize : '11px')}!important;\n  margin: ${({ margins }) => (margins)}!important;\n  border: ${({ borders }) => (borders)} !important;\n  margin-top: ${({ marginsTop }) => (marginsTop ? marginsTop : '30px')}!important;\n  font-weight: ${({ fontsweight }) => (fontsweight)}!important;\n`;\nexport const ImageCard = styled.div`\n  display: flex;\n  justify-content: center !important;\n  flex-flow: column wrap !important;\n  background-color: grey !important;\n  height: 275px !important;\n  width: 300px !important;\n  color: var(--color-grey-text)!important;\n  font-size: 11px !important;\n  background-image: ${({ src }) => (`url(${src})`)}!important;\n  background-size: cover !important;\n  @media only screen and (max-width: 1029px) and (min-width: 400px){\n    width: ${({ mediawidths }) => (mediawidths)}!important;\n    justify-content:${({ mediajustify }) => (mediajustify)}!important;\n    flex-flow: ${({ mediaflexsflow }) => (mediaflexsflow)}!important;\n    align-items:${({ mediaalign }) => (mediaalign)}!important;\n    margin: ${({ mediamargins }) => (mediamargins)}!important;\n  }\n`;\n\n\nexport const ProfileSettingsWrapper = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n  padding-right: 5px;\n`;\n\nProfileSettingsWrapper.Name = styled.div`\n  display: flex;\n  align-items: center;\n  height: 60px;\n  width: 100%;\n  font-size: 20px;\n  border-bottom: 1px solid var(--color-grey-text-light);\n  padding-left: 40px;\n  color: black;\n  font-weight: bold;\n`;\n\nProfileSettingsWrapper.Details = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  padding-left: 40px;\n  h4 {\n    color: rgba(128,128,128, .5);\n    font-size: 13px;\n    margin-bottom: 10px;\n  }\n\n`;\n\nexport const PatientCardButton = styled(Button)`\n  display: flex;\n  width: 100%;\n  height: 40px;\n  justify-content: flex-start !important;\n  margin-left: -10px !important;\n  padding-left: 10px !important;\n  margin-bottom: 10px !important;\n  background-color: ${({ backgroundscolor }) => (backgroundscolor ? 'var(--color-primary)' : '')}!important;\n  color: ${({ colors }) => (colors ? 'var(--color-secondary)' : '')} !important;\n`;","import styled from 'styled-components';\nimport Avatar from '@material-ui/core/Avatar';\n\nexport const ProfileCardWrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  background-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\n  height: ${({ heights }) => (heights)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  box-shadow: ${({ boxshadow }) => (boxshadow)}!important;\n  color: ${({ colors }) => (colors)}!important;\n  border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n  font-size: ${({ fontssize }) => (fontssize)}!important;\n  margin: ${({ margins }) => (margins)}!important;\n  border: ${({ borders }) => (borders)} !important;\n  border-bottom: ${({ bordersbottom }) => (bordersbottom)} !important;\n  border-left: ${({ bordersleft }) => (bordersleft)} !important;\n  border-right: ${({ bordersright }) => (bordersright)} !important;\n  border-top: ${({ borderstop }) => (borderstop)} !important;\n  @media only screen and (max-width: 1029px) and (min-width: 400px){\n    width: ${({ mediawidths }) => (mediawidths)}!important;\n    justify-content:${({ mediajustify }) => (mediajustify)}!important;\n    align-items:${({ mediaalign }) => (mediaalign)}!important;\n    border-right:${({ mediabordersright }) => (mediabordersright)}!important;\n    border-bottom:${({ mediabordersbottom }) => (mediabordersbottom)}!important;\n  }\n`;\n\nexport const StyledAvator = styled(Avatar)`\n  background-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\n  height: ${({ heights }) => (heights)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  box-shadow: ${({ boxshadow }) => (boxshadow)}!important;\n  color: ${({ colors }) => (colors)}!important;\n  border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n  font-size: ${({ fontssize }) => (fontssize)}!important;\n  margin: ${({ margins }) => (margins)}!important;\n  border: ${({ borders }) => (borders)} !important;\n`;\n\nexport const RandomAvatorColor = () => {\n    let x = Math.floor(Math.random() * 256);\n    let y = Math.floor(Math.random() * 256);\n    let z = Math.floor(Math.random() * 256);\n    return \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PatientCardRow, PatientAppointmentStatusWrapper, PatientHeaderWrapper } from '../../../styled-components/PatientCard/patient-card-styled';\nimport { StyledAvator, RandomAvatorColor, ProfileCardWrapper } from '../../../styled-components/Profile/profile-card-styled';\nimport { StyledButton } from '../../../styled-components/Buttons/buttons-styled';\nimport { StyledDivider } from '../../../styled-components/Divider/divider-styled';\n\n\nexport const PatientHeader = ({ }) => (\n<PatientHeaderWrapper>\n  <h2 style={{margin: '0 15px 0 20px', fontWeight: 'normal', fontSize: '19px'}}>Company</h2>\n  <h1 style={{marginTop: '15px', fontWeight: '100'}} >|</h1>\n  <h2 style={{marginLeft: '15px', fontWeight: 'normal', fontSize: '19px'}}>{'Dashboard'}</h2>\n</PatientHeaderWrapper>\n);\n\nPatientHeader.propTypes = {\n  };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { PatientCardWrapper } from '../../styled-components/PatientCard/patient-card-styled';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\n\nimport { StyledButton } from \"../../styled-components/Buttons/buttons-styled\";\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderColor: '#000000',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit * 3,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n});\n\nconst flexContainer = {\n  display: 'flex',\n  flexFlow: 'row',\n  padding:'10px 0 0 0 ',\n  maxHeight: '75px',\n}\n\n\nconst appointmentTime = {\n  backgroundColor: '#d9d9d9',\n  maxWidth: '75px',\n  fontWeight: 'bold',\n  fontSize: '12px',\n  padding: '3px',\n  textAlign: 'center'\n}\nconst PatientAppointments = ({ props, patientAppointments, emailAddress, service, clinician  }) => (\n  < React.Fragment >\n    <PatientCardWrapper>\n\n      <div>\n        <InputBase\n          placeholder=\"Search for Customers, Employees, Services...\"\n        />\n      </div>\n\n      <Grid container >\n        <Grid item xs={12} >\n          <div>\n            <List style={flexContainer}>\n              <ListItem>\n                <ListItemText primary=\"\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                  primary=\"PATIENT:\" />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                  primary=\"ASSIGNED TO:\" />\n              </ListItem>\n\n              <ListItem>\n                <ListItemText\n                  primary=\"SERVICE:\" />\n              </ListItem>\n\n              <ListItem>\n                <ListItemText\n                  primary=\"DURATION:\" />\n              </ListItem>\n\n              <ListItem>\n                <ListItemText\n                  primary=\"STATUS:\" />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                  primary=\"\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                  primary=\"\"\n                />\n              </ListItem>\n\n            </List>\n          </div>\n        </Grid>\n      </Grid>\n    </PatientCardWrapper>\n    <br />\n    {\n      patientAppointments.map((appointment, index) => (\n        <React.Fragment key={Math.random()}>\n          <p>{appointment.appointment_date}</p>\n          <PatientCardWrapper liheight={'50px'} justify={'center'} paddings={'10px 20px'}>\n              <List style={flexContainer} key={index}>\n                <ListItem>\n                  <ListItemText style={appointmentTime}\n                    primary={appointment.appointment_time} />\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary={appointment.patient_Name}\n                    secondary={appointment.patient_Email} />\n                </ListItem>\n                <ListItem>\n                  <Avatar src= {appointment.assigned_To.photo} />\n                  <ListItemText\n                    primary={appointment.assigned_To.clinicians_Name} />\n                </ListItem>\n\n                <ListItem>\n                  <ListItemText\n                    primary={appointment.service} />\n                </ListItem>\n\n                <ListItem>\n                  <ListItemText\n                    primary={appointment.duration} />\n                </ListItem>\n                <ListItem>       \n                    {appointment.status === 'Approved' && <p style={{color: 'var(--color-green'}}>{appointment.status}</p>}\n                    {appointment.status === 'Pending' && <p style={{color: 'var(--color-pending'}}>{appointment.status}</p>}\n                    {appointment.status === 'Cancelled' && <p style={{color: 'var(--color-error'}}>{appointment.status}</p>}\n                  </ListItem>\n                  <ListItem>\n                    <StyledButton\n                      backgroundscolor={\"var(--color-error)\"}\n                      widths={\"80%\"}\n                      colors={\"var(--color-white)\"}\n                    >\n                      Cancel\n            </StyledButton>\n                  </ListItem>\n                  <ListItem>\n                    <StyledButton\n                      backgroundscolor={\"var(--color-green)\"}\n                      widths={\"80%\"}\n                      colors={\"var(--color-white)\"}\n                    >\n                      Start\n            </StyledButton>\n                  </ListItem>\n\n              </List>\n                &nbsp;\n          </PatientCardWrapper>\n        </React.Fragment>\n          ))\n        }\n    \n    \n  </React.Fragment >\n      )\n\nPatientAppointments.propTypes = {\n        };\n\n    // export default PatientAppointments;\n    export default withStyles(styles)(PatientAppointments);\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    PatientCardWrapper,\n  } from '../../styled-components/PatientCard/patient-card-styled';\n\nconst PatientDashboard = ({ }) => (\n    <React.Fragment>\n        <PatientCardWrapper>\n            {/* YUSEF PUT DATA HERE */}\n        </PatientCardWrapper>\n    </React.Fragment>\n)\nPatientDashboard.propTypes = {\n  };\n  \n  export default PatientDashboard;","import styled from 'styled-components';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport InputTextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\n\nexport const FormHeader = styled.div`\n  display: flex;\n  height: 65px !important;\n  width: 100% !important;\n  flex-flow: column nowrap!important;\n  align-items: flex-start;\n  padding-left: 20px;\n  border-bottom: 1px solid var(--color-grey-text-light);\n\n  h1{\n    margin: 0px;\n    font-size: 18px;\n  }\n  p{\n    margin: 10px 0;\n    color: var(--color-grey-text);\n    font-size: 12px;\n    padding-right: 10px;\n    @media only screen and (max-width: 1029px) and (min-width: 400px){\n     font-size: 10px; \n    }\n`;\nexport const FormBody = styled.div`\n  display: flex;\n  padding: 20px !important;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const FormRow = styled.div`\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    width: 100%;\n    @media only screen and (max-width: 1029px) and (min-width: 400px){\n        flex-flow: row wrap;\n       }\n`;\nexport const FormColumn = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n    justify: center;\n    width: 100%;\n    margin: ${({margins}) => (margins ? margins : '')};\n    h3 {\n        white-space: nowrap;\n    }\n    @media only screen and (max-width: 1029px) and (min-width: 400px){\n        margin: 0px; \n       }\n`;\n\nexport const StyledInputTextField = styled(InputTextField)`\n  height: ${({heights}) => (heights ? heights : '40px')} !important;\n  width: ${({widths}) => (widths ? widths : '100%')} !important;\n  max-width: '100%;\n  min-width: '100%;\n  label {\n      margin-top: -5px;  \n      display: flex;\n      align-items: center;\n  }\n  input{\n    color: var(--color-grey-text)!important;\n  }\n`;\n\nexport const StyledDropdownField = styled(Select)`\n  border: 1px solid rgba(0, 0, 0, 0.25) !important;\n  height: 40px !important;\n  border-radius: 4px !important;\n  width:${({widths}) => (widths ? widths : '100%')} !important;\n  div {\n      div{\n        padding-left: 10px;\n      }\n  }\n:before {\n    border-color: transparent !important;\n}\n:after {\n    border-color: var(--color-primary) !important;\n}\n`;\nexport const InvisibleDiv = styled.div`\n\ndiv:first-child {\n    margin: 0;\n    width: 100%;\n    color: var(--color-grey-text);\n    height: 40px;\n}\n\n`\nexport const theme = createMuiTheme({\n    palette: {\n      primary:{\n          main: '#1665d8'\n      },\n    },\n    typography: { useNextVariants: true },\n  });\n\nexport const dateOptions = {\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric',\n}","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field} from 'formik';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, InlineDatePicker } from 'material-ui-pickers';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport StyledDivider from '../../styled-components/Divider/divider-styled';\nimport {\n  PatientCardWrapper,\n  PatientProfileCard,\n  ProfileSettingsWrapper,\n  PatientCardButton,\n  ImageCard,\n  PatientFormHeader,\n  PatientCardRow,\n  PatientCardInformationWrapper,\n} from '../../styled-components/PatientCard/patient-card-styled';\nimport { StyledInputTextField, StyledDropdownField, FormHeader, FormBody, FormRow, FormColumn, theme, dateOptions, InvisibleDiv }from '../../styled-components/Forms/forms-styled';\n\nimport CardContent from '@material-ui/core/CardContent';\n// import { PatientList1, PatientList2, PatientList3 } from './patients-card-items/patient-list';\nimport PatientPicture from '../../images/Avator-Headshots/Regular-Headshots/Headshot-4.jpg';\nimport { StyledButton } from '../../styled-components/Buttons/buttons-styled';\n\n\nconst FormikDatePicker = ({\n  _name,\n  name,\n  defaultValue,\n  form: { setFieldValue },\n  field: { value },\n}) => {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} >\n    <InlineDatePicker\n      name={name}\n      keyboard\n      format='MMMM dd, yyyy'\n      clearable\n      variant=\"outlined\"\n      type='input'\n      margin=\"normal\"\n      onChange={value => {\n        setFieldValue(_name, value.toLocaleString('en-us', dateOptions));\n      }}\n      value={(value && value.toLocaleString('en-us', dateOptions)) || defaultValue.toLocaleString('en-us', dateOptions)}\n    />\n    </MuiPickersUtilsProvider>\n  );\n};\n\n\n\nclass PatientProfile extends PureComponent {\n\n  state={\n    gender: '',\n  }\n\n  handleChange = (e, name, fn)=> {\n    this.setState({ [name]: e.target.value }, ()=> fn(e));\n  };\n\n  formSubmission = (data) => {\n    console.log(data);\n  }\n\n  render(){\n    const { patientList } = this.props;\n    const { gender, selectedDate } = this.state;\n    return (\n    <div style={{display: 'flex', flexFlow: 'row wrap', marginRight: '65px', justifyContent: 'space-between', width: '100%' }}>\n      <PatientProfileCard mediamargins={'40px 0'}> \n        <ImageCard src={patientList.picture} />\n        <ProfileSettingsWrapper>\n          <ProfileSettingsWrapper.Name>\n             {patientList.firstName} {patientList.lastName}\n          </ProfileSettingsWrapper.Name>\n          <ProfileSettingsWrapper.Details>\n            <h4>YOUR DETAILS</h4>\n            <PatientCardButton backgroundscolor={\"true\"} colors={\"true\"}>\n             Account Settings\n            </PatientCardButton>\n            <PatientCardButton backgroundscolor={''} colors={''}>\n              Password\n            </PatientCardButton>\n            <PatientCardButton backgroundscolor={''} colors={''}>\n              Privacy\n            </PatientCardButton>\n          </ProfileSettingsWrapper.Details>\n        </ProfileSettingsWrapper>\n      </PatientProfileCard>\n      <PatientCardWrapper boxshadows={'shadow'} bordersradius={'4px'} margins={'40px 65px 0 0'} mediawidths='300px' mediamargins='40px 20px 0 0' paddings={'20px 10px 20px 0'}>\n      <FormHeader>\n        <h1>Patient Profile</h1>\n        <p>Some of the profile information can be edited from your profile page.</p>\n      </FormHeader>\n      <FormBody>\n      <Formik\n        initialValues={{ \n          id: patientList.id,\n           gender: patientList.gender, \n           firstName: patientList.firstName,\n           middleInitial: patientList.middleInitial,\n           lastName: patientList.lastName,\n           emailAddress: patientList.emailAddress,\n           cellPhone: patientList.cellPhone,\n           address: patientList.address,\n           city: patientList.city,\n           state: patientList.state,\n           insurance: patientList.insurance,\n           groupInsuranceNumber: patientList.groupInsuranceNumber,\n           }}\n     // validationSchema={validationSchema}\n      onSubmit={this.formSubmission}\n              >\n        {({ values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting, }) => (\n            <Form>\n              <MuiThemeProvider theme={theme}>\n              <FormRow>\n               <FormColumn margins={'0 20px 0 0'}>\n              <h3>Patient Id #</h3>\n              <StyledInputTextField \n                disabled={true} \n                variant=\"outlined\" \n                type=\"input\" \n                name=\"id\"\n                value={patientList.id} \n                />\n              </FormColumn> \n              <FormColumn>\n              <h3>Gender</h3>\n              <StyledDropdownField\n              value={gender ? gender : patientList.gender}\n              variant=\"outlined\" \n              type='input'\n              onChange={(e)=> this.handleChange(e,'gender', handleChange)} onBlur={handleBlur}\n              input={<Input name={'gender'} />}\n              >\n                <MenuItem value=\"N/A\">N/A</MenuItem>\n                <MenuItem value={'Male'}>Male</MenuItem>\n                <MenuItem value={'Female'}>Female</MenuItem>\n              </StyledDropdownField>\n              </FormColumn>\n              </FormRow>\n\n              <FormRow>\n                <FormColumn margins='0 20px 0 0'>\n                  <h3>First Name</h3>\n                 <StyledInputTextField \n                  variant=\"outlined\" \n                  type=\"input\"\n                  name=\"firstName\"\n                  defaultValue={patientList.firstName} \n                  />\n              </FormColumn> \n              <FormColumn margins='0 20px 0 0'>\n                  <h3>Middle Initial</h3>\n                 <StyledInputTextField  defaultValue={patientList.middleInitial} inputProps={{ maxLength: 1 }} variant=\"outlined\" type=\"input\" fullWidth name=\"middleInitial\" />\n              </FormColumn> \n              <FormColumn>\n                  <h3>Last Name</h3>\n                 <StyledInputTextField defaultValue={patientList.lastName} variant=\"outlined\" type=\"input\" name=\"lastName\" />\n              </FormColumn> \n              </FormRow>\n\n              <FormRow>\n                  <FormColumn>\n                  <h3>Date of Birth</h3>\n                  <InvisibleDiv>\n                  <Field component={FormikDatePicker} name={\"dataOfBirth\"} _name={\"dataOfBirth\"} defaultValue={patientList.dateOfBirth}/>\n                  </InvisibleDiv>\n              </FormColumn> \n              </FormRow>\n              <FormRow>\n                <FormColumn margins='0 20px 0 0'>\n                <h3>Email Address</h3>\n                <StyledInputTextField defaultValue={patientList.emailAddress} variant=\"outlined\" type=\"email\" name=\"emailAddress\" />\n                </FormColumn>\n                <FormColumn>\n                <h3>Phone Number</h3>\n                <StyledInputTextField defaultValue={patientList.cellPhone || patientList.homePhone}\n                variant=\"outlined\" type=\"input\" name=\"cellPhone\" />\n                </FormColumn>\n              </FormRow>\n              <FormRow>\n                <FormColumn>\n                <h3>Street Address</h3>\n                <StyledInputTextField defaultValue={patientList.address} variant=\"outlined\" type=\"input\" name=\"address\" />\n                </FormColumn>\n              </FormRow>\n              <FormRow>\n                <FormColumn margins='0 20px 0 0'>\n                <h3>City</h3>\n                <StyledInputTextField defaultValue={patientList.city} variant=\"outlined\" type=\"input\" name=\"city\" />\n                </FormColumn>\n                <FormColumn>\n                <h3>State</h3>\n                <StyledInputTextField defaultValue={patientList.state} inputProps={{ maxLength: 2 }} variant=\"outlined\" type=\"input\" name=\"state\" />\n                </FormColumn>\n              </FormRow>\n              <FormRow>\n                <FormColumn margins='0 20px 0 0'>\n                <h3>Insurance Provider</h3>\n                <StyledInputTextField defaultValue={patientList.insurance} variant=\"outlined\" type=\"input\" name=\"insurance\" />\n                </FormColumn>\n                <FormColumn>\n                <h3>Group/Insurance #</h3>\n                <StyledInputTextField defaultValue={patientList.groupInsuranceNumber} variant=\"outlined\" type=\"input\" name=\"groupInsuranceNumber\" />\n                </FormColumn>\n              </FormRow>\n              <StyledButton\n                margins={'20px 0'}\n                backgroundscolor={'var(--color-green)'}\n                colors={'var(--color-white)'}\n                heights={'40px'}\n                linesheight={'20px'}\n                onClick={handleSubmit}\n              >\n              Save Settings\n              </StyledButton>\n              </MuiThemeProvider>\n            </Form>\n            )}\n      </Formik>\n      </FormBody>\n      </PatientCardWrapper>\n    </div>\n    ) \n  }\n}\nPatientProfile.propTypes = {\n  patientEditMode: PropTypes.bool,\n  patientList: PropTypes.object,\n};\n\nexport default PatientProfile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BigCalendar from 'react-big-calendar';\nimport styles from 'react-big-calendar/lib/css/react-big-calendar.css'\nimport moment from 'moment';\n\nimport { CalendarEvents, CalendarDates } from '../../../mock-data/';\nimport { PatientCardWrapper } from '../../../styled-components/PatientCard/patient-card-styled';\n\nlet allViews = Object.keys(BigCalendar.Views).map(k => BigCalendar.Views[k]);\n// Setup the localizer by providing the moment (or globalize) Object\n// to the correct localizer.\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst CardCalendar = ({ }) => (\n  <React.Fragment>\n    <PatientCardWrapper heights={'700px'}>\n      <BigCalendar\n        events={CalendarEvents}\n        views={allViews}\n        step={60}\n        showMultiDayTimes\n        max={CalendarDates.add(CalendarDates.endOf(new Date(2019, 17, 1), 'day'), -1, 'hours')}\n        defaultDate={new Date(2019, 3, 1)}\n        localizer={localizer}\n      />\n    </PatientCardWrapper>\n  </React.Fragment>\n)\nCardCalendar.propTypes = {\n\n};\n\nexport default CardCalendar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CardMessaging = ({ }) => (\n    <React.Fragment>\n\n    </React.Fragment>\n)\nCardMessaging.propTypes = {\n\n  };\n  \n  export default CardMessaging;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Current } from '../../utils/constants';\n//Components\nimport { PatientHeader } from './patients-card-items/patient-header';\nimport PatientAppointments from '../Patients/patient-appointments';\nimport PatientDashboard from '../Patients/patient-dashboard';\nimport PatientProfile from '../Patients/patient-profile';\nimport CardCalendar from '../../components/ReusableComponents/CardItems/CardCalendar';\nimport CardMessaging from '../../components/ReusableComponents/CardItems/CardMessaging';\n//Styled\nimport { PatientCardWrapper } from '../../styled-components/PatientCard/patient-card-styled';\n\nconst PatientCard = ({ patientList, currentPage, patientAppointments }) => (\n  <React.Fragment>\n    <PatientHeader />\n    {currentPage === Current.Dashboard && <PatientDashboard />}\n\n    {currentPage === Current.Appointments && (\n      <PatientAppointments\n        emailAddress={patientList.emailAddress}\n        service={'Service Type'}\n        clinician={patientList.provider}\n        appointments={patientList.appointments}\n        patientAppointments={patientAppointments} />\n    )}\n    {currentPage === Current.Calendar && <CardCalendar />}\n    {currentPage === Current.Messaging && <CardMessaging />}\n    {currentPage === Current.PatientProfile && <PatientProfile patientList={patientList} />}\n  </React.Fragment >\n);\n\nPatientCard.propTypes = {\n  patientList: PropTypes.object,\n};\n\nexport default PatientCard;\n","/*\n * PatientPage\n * This is the first thing users see of our App, at the '/' route\n */\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n// Components\nimport Header from '../../components/Header/Header';\nimport SideMenu from '../../components/SideMenu/SideMenu';\nimport PatientCard from '../../components/Patients/PatientCard';\nimport { Patient4MockData, patientAppointments,  } from '../../mock-data';\nimport { Current } from '../../utils/constants';\n\nexport default class PatientPage extends Component { // eslint-disable-line react/prefer-stateless-function\ncomponentDidMount(){\n  const { getPatientData } = this.props;\n    getPatientData('ai834yfhads97987y6');\n}\n  render() {\n    const { changePage, currentPage, userData, userDataLoading, userDataError } = this.props;\n    return (\n      <Fragment>\n        <Helmet>\n          <title>Patient Page</title>\n          <meta name=\"description\" content=\"Global Mentality Patient Page\" />\n        </Helmet>\n\n        <div id={'main-container'}>\n          <Header changePage={changePage} currentProfile={Current.PatientProfile} currentPage={currentPage} />\n          <SideMenu changePage={changePage} currentPage={currentPage} />\n          <PatientCard currentPage={currentPage} patientList={userData} patientAppointments={patientAppointments} />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nPatientPage.propTypes = {\n  patientMockData: PropTypes.object,\n};\n\n\n","\n\n//Functional Programming Fantasy\nconst Right = x => ({\n  map:fn => Right(fn(x)),\n  inspect:() => `Right(${x})`,\n  fold:(l,r) => r(x)\n});\n\nconst Left = x => ({\n  map:fn => Left(fn(x)),\n  inspect:() => `Left(${x})`,\n  fold:(l,r) => l(x) // eslint-disable-line no-unused-vars\n})\n\nconst Sum = x => ({\n  x,\n  concat:({x,y}) => Sum(x + y),\n  inspect:() => `Sum(${x})`\n})\n\nSum.empty = () => Sum(0)\n//example\n// const res  = Sum.empty().concat(Sum(1).concat(Sum(3)))\n\n\nconst All = x => ({\n  x,\n  concat:({x,y}) => All(x && y),\n  inspect:() => `All(${x})`\n})\n\nAll.empty = () => All(true)\n\nconst Any = x => ({\n  x,\n  concat:({x,y}) => Any(x || y),\n  inspect:() => `Any(${x})`\n})\n\nAny.empty = () => Any(false)\n\nconst Box = x => ({\n  fold:f => f(x),\n  map: f => Box(f(x)),\n  inspect: () => `Box(${x})`\n})\n\nconst LazyBox = g => ({\n    map:f => LazyBox(() => f(g())),\n    fold:f => f(g())\n})\n\n\n\n//Ramda style\nexport const pipe = (...fns) => x => fns.reduce((acc,fn) => fn(acc),x)\n\nexport const compose = (...fns) => x => fns.reduceRight((acc,fn) => fn(acc),x)\n\nexport const Nullable = fn => x => fn(x) ? Right(x) : Left(x);\n\nexport const maybe = fn => x => fn(x)? [x] : [];\n\n\nexport const mapReducer = fn => array =>\narray.reduce((acc,val) => {\n  acc.push(fn(val))\n  return acc;\n},[])\n\nexport const filterReducer = predicate => array =>\narray.reduce((acc,val) => {\n  if(predicate(val)){\n    acc.push(val)\n    return acc;\n  }\n  else{\n    return acc;\n  }\n},[])\n","/**\n * Patient Page selectors\n */\nimport { pipe } from '../../../utils/functional';\nimport { createSelector } from 'reselect';\n\nexport const getUser = (state) => state.patient.username;\nexport const getUserData = (state) => state.patient.userData;\nexport const getUserLoading = (state) => state.patient.getPatientLoading;\nexport const getUserDataError = (state) => state.patient.userDataError;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { getCurrentPage } from '../App/redux/selectors';\nimport { changePage } from '../App/redux/actions';\nimport { changeUsername, getPatientData } from './redux/actions';\nimport PatientPage from './PatientPage';\nimport { getUser, getUserData, getUserLoading, getUserDataError } from './redux/selectors';\n\n\n const mapDispatchToProps = {\n  changeUsername,\n  changePage,\n  getPatientData,\n};\n\nconst mapStateToProps = state => ({\n  currentPage: getCurrentPage(state),\n  userData: getUserData(state),\n  userDataLoading: getUserLoading(state),\n  userDataError: getUserDataError(state),\n});\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(PatientPage);\n","/*\n * App Actions\n * These actions are dispatch for the App to load it's initial state\n * Shouldn't be too many actions in this file.\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your constant\n * 2) Add a function like this:\n *    export yourAction = (var || var, var) => ({\n *        type: YOUR_ACTION_TYPE,\n *        payload: var || payload: { var, var}\n *    });\n */\n\nimport { AppActionTypes } from './types';\n\n/**\n * Load the app and it's contents, this action starts the request epic\n * @return {object} An action object with a type of LOAD_APP\n */\nexport const loadApp = () => ({\n  type: AppActionTypes.LOAD_APP,\n});\n\n/**\n * Dispatched when loading the app succeeds\n * @return {object} An action object with a type ofAPP_LOADED_SUCCESS\n */\nexport const appLoadedSuccess = () => ({\n  type: AppActionTypes.APP_LOADED_SUCCESS,\n});\n\n/**\n * Dispatched when loading the app fails\n * @param  {object} error The error\n * @return {object} An action object with a type of APP_LOADED_ERROR passing the error\n */\nexport const appLoadedError = (error) => ({\n  type: AppActionTypes.APP_LOADED_ERROR,\n  payload: error\n});\n\n/**\n * Changes the input field of the form\n * @param  {string} next_page The new page to navigate to\n * @return {object}    An action object with a type of CHANGE_CURRENT_PAGE\n */\nexport const changePage = (next_page) => ({\n  type: AppActionTypes.CHANGE_CURRENT_PAGE,\n  payload: next_page\n});","/**\n * NotFoundPage\n *\n * This is the page we show when the user visits a url that doesn't have a route\n */\n\nimport React, { Fragment } from 'react';\n\nconst NotFound = () => (\n  <Fragment>\n    <h1>Page not found.</h1>\n  </Fragment>\n);\n\nexport default NotFound;\n","import styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\n\nexport const SignInWrapper = styled(Card)`\n    box-shadow: ${({ boxshadows }) => (boxshadows)}!important;\n    border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n    margin: ${({ margins }) => (margins)}!important;\n    height: ${({ heights }) => (heights ? heights : '100%' )}!important;\n    width: ${({ widths }) => (widths ? widths : '100%')}!important; \n    max-width: 800px;\n    background-color: ${({ backgroundcolors }) => (backgroundcolors)}!important\n    display:flex;\n    @media only screen and (width: 1024px){\n        margin-left: -25%;\n    }\n    @media only screen and (width: 768px){\n        margin-left: -50%;\n    }\n    @media only screen and (max-width: 700px)  {\n        width: 100% !important;\n        margin: 0 auto !important;\n    }\n    `;\n\nexport const SignInSection = styled.section`\n    background-color: var(--color-white) !important;\n    width: 50%;\n    max-width: 100%;\n    flex-wrap: wrap;\n    text-align: center;\n    padding: 0 5%;\n    @media only screen and (max-width: 700px)  {\n        width: 100% !important;\n        padding: 5%;\n    }\n`;\n\nexport const SignInImage = styled.section`\n    width: 50%;\n    max-width: 100%;\n    height: auto;\n`;\n\nexport const SignInTick = styled.div`\n    border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n    margin: ${({ margins }) => (margins)}!important;\n    height: ${({ heights }) => (heights)}!important;\n    width: ${({ widths }) => (widths)}!important; \n    z-index: ${({ zIndex }) => (zIndex)} !important;\n    background-color:var(--color-blue) !important;\n    max-height: 45px;\n    max-width: 45px;\n    position: absolute;\n    top:  ${({ tops }) => (tops)} !important;\n    left:  ${({ lefts }) => (lefts)} !important;\n    @media only screen and (width: 1024px){\n        left: -20% !important;\n        top: -2% !important;\n    }\n    @media only screen and (width: 768px){\n        left: -42% !important;\n    }\n    @media only screen and (max-width: 600px) {\n        max-width: 30px !important;\n        max-height: 30px !important;\n        top: -2.5% !important;    \n    }\n`;\n\nexport const NewPasswordText = styled.p`\n    margin-left: 23%;\n    font-size: .9rem;\n    @media only screen and (width: 768px){\n        margin-left: -10%\n    }\n    @media only screen and (max-width: 700px){\n        margin-left: 3%;\n    }\n\n`;\n\n","/*\n * LoginPage\n * This is the login page users see of our App, at the '/login' route\n */\nimport React, { Fragment, Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport EventListener from \"react-event-listener\";\nimport InputTextField from \"@material-ui/core/TextField\";\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { StyledButton } from \"../../styled-components/Buttons/buttons-styled\";\nimport { SignInWrapper, SignInSection, SignInImage, SignInTick, NewPasswordText } from '../../styled-components/SignIn/signIn-styled';\n\n\nexport default class LoginPage extends Component {\n  // eslint-disable-line react/prefer-stateless-function\n  state = {\n    isDesktop: true,\n  }\n\n\n\n  handleResize = () => {\n    if (window.innerWidth <= 700) {\n      this.setState({ isDesktop: false });\n    }\n    else {\n      this.setState({ isDesktop: true })\n    }\n  }\n\n  render() {\n    const {isDesktop} = this.state\n    const { formSubmission } = this.props;\n\n    const validationSchema = Yup.object().shape({\n      email: Yup.string('Enter your email')\n        .email('E-mail is not valid!')\n        .required('E-mail is required!'),\n      password: Yup.string(\"\")\n        .required('Password is required!')\n    })\n\n    return (\n      <Fragment>\n        <Helmet>\n          <title>Login Page</title>\n          <meta name=\"description\" content=\"Global Mentality Login Page\" />\n        </Helmet>\n        <div id={'main-container--login'}>\n          <SignInTick widths={\"100%\"} heights={\"100%\"} bordersradius={\"2px\"} zIndex={\"999\"} tops={\"-4%\"} lefts={\"3%\"}></SignInTick>\n          <SignInWrapper bordersradius={\"4px\"}>\n            <SignInSection>\n              <h1>Sign In</h1>\n\n              <Formik\n                initialValues={{ email: '', password: '' }}\n                validationSchema={validationSchema}\n                onSubmit={formSubmission}\n              >\n                {({ values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting, }) => (\n                    <Form>\n                      <div>\n                        <InputTextField label=\"Email Address\" variant=\"outlined\" type=\"email\" fullWidth name=\"email\" onChange={handleChange} onBlur={handleBlur} />\n                        {errors.email && touched.email && errors.email}\n                      </div>\n                      &nbsp;\n                      <div>\n                        <InputTextField label=\"Password\" variant=\"outlined\" type=\"password\" fullWidth name=\"password\" onChange={handleChange} onBlur={handleBlur} />\n                        {errors.password && touched.password && errors.password}\n                      </div>\n                      &nbsp;\n                      <StyledButton\n                        backgroundscolor={\"var(--color-primary)\"}\n                        widths={\"100%\"}\n                        heights={\"10%\"}\n                        colors={\"#ffffff\"}\n                        type=\"submit\"\n                      >\n                        Sign In\n                  </StyledButton>\n                    </Form>\n                  )}\n              </Formik>\n              &nbsp;\n              <hr />\n              &nbsp;\n            <StyledButton\n                backgroundscolor={\"#ffffff\"}\n                borders={\"1px solid #c9c9c9\"}\n                widths={\"100%\"}\n                heights={\"10%\"}\n                colors={\"#000000\"}\n\n              >\n                Create Account\n            </StyledButton>\n            </SignInSection>\n\n            <EventListener target={'window'} onResize={this.handleResize} />\n\n            {isDesktop && (<SignInImage >\n\n              <img src=\"https://placeimg.com/420/400/any\" alt=\"Global Mentality\" />\n            </SignInImage>)}\n\n          </ SignInWrapper>\n          <NewPasswordText>Forget your password buddy? <a href=\"#\">Get a new password</a></NewPasswordText>\n          <br />\n        </div>\n      </Fragment >\n    );\n  }\n}\n\nLoginPage.propTypes = {}\n","/**\n * Login Page selectors\n */\nimport { pipe } from '../../../utils/functional';\nimport { createSelector } from 'reselect';\n\n// export const getSize = (state) => state.login.isDesktop\nexport const getEmail = (state) => state.login.getEmail\nexport const getPassword = (state) => state.login.getPassword\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport LoginPage from './LoginPage';\nimport { handleResize, formSubmission } from './redux/actions';\n\n//*** Here for example purposes of selectors\nimport { getSize, getEmail, getPassword } from './redux/selectors';\n\n//*** Here for example purposes of dispatch\n//import { changeUsername } from './redux/actions';\n\nconst mapStateToProps = state => ({\n  // isDesktop: getSize(state),\n  user: {\n    email: getEmail(state),\n    password: getPassword(state)\n  }\n});\n\nconst mapDispatchToProps = {\n  // handleResize,\n  formSubmission\n};\n\nexport default compose(\n  withRouter, //provides history to \"container component\" aka \"smart component\"\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )\n)(LoginPage);","/*\n * Login Actions\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your types\n * 2) Add a function like this:\n *    export yourAction = (var || var, var) => ({\n *        type: YOUR_ACTION_TYPE,\n *        payload: var || payload: { var, var }\n *    });\n */\nimport { LoginPageActionTypes } from './types';\n\n/**\n * Changes the input field of the form\n * @param  {string} username The new text of the input field\n * @return {object}    An action object with a type of CHANGE_USERNAME\n */\n\n// export const handleResize = () => ({ type: LoginPageActionTypes.HANDLE_RESIZE })\n\nexport const formSubmission = (loginInfo) => ({ type: LoginPageActionTypes.FORM_SUBMISSION, payload: loginInfo })\n","/**\n *\n * App\n *\n * This component is the skeleton around the actual pages, and should only\n * contain code that should be seen on all pages.\n */\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { Role } from '../../utils/constants';\n\nimport PatientPage from \"../PatientPage/\";\nimport ClinicianPage from \"../PatientPage/\";\nimport OfficePage from \"../PatientPage/\";\nimport AdminPage from \"../PatientPage/\";\nimport NotFoundPage from \"../NotFoundPage/\";\nimport Footer from \"../../components/Footer\";\nimport LoginPage from \"../LoginPage/\";\nimport \"./style.scss\";\n\n\nconst pathname = window.location.pathname;\nconst idName = pathname === '/login' ? 'main-container--login' : 'main-container';\n\nconst navigateTo = (role) => {\n  if(role === Role.Patient){\n    return PatientPage;\n  } else if(role === Role.Clinician){\n    return ClinicianPage;\n  } else if(role === Role.OfficeAdmin) {\n    return OfficePage;\n  } else if(role === Role.SuperAdmin) {\n    return AdminPage;\n  } else {\n    return NotFoundPage;\n  }\n\n}\n\nconst App = ({role}) => (\n  <div className=\"app-wrapper\">\n    <Helmet titleTemplate=\"Global Mentality App\" defaultTitle=\"Global Mentality\">\n      <meta name=\"description\" content=\"Global Mentality\" />\n    </Helmet>\n      <Switch>\n        {/* TODO Conditionals for permissions of pages */}\n        {role === Role.Patient && <Route path=\"/patient\" component={PatientPage} />} \n        {role === Role.Clinician && <Route path=\"/clinician\" component={ClinicianPage} />}\n        {role === Role.OfficeAdmin && <Route path=\"/office\" component={OfficePage} />}\n        {role === Role.SuperAdmin && <Route path=\"/admin\" component={AdminPage} />}\n        <Route path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/\" component={navigateTo(role)} />\n        <Route path=\"/not-found\" component={NotFoundPage} />\n      </Switch>\n  </div>\n);\n\nexport default App;\n","/**\n * app.js\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n// Import all the third party stuff\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'react-router-redux';\nimport FontFaceObserver from 'fontfaceobserver';\nimport createHistory from 'history/createBrowserHistory';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createLogger } from 'redux-logger';\nimport { rootReducer } from './reducers';\nimport { rootEpic } from './epics';\nimport 'sanitize.css/sanitize.css';\n\n// Import root app\nimport App from './containers/App';\n\n// Load the favicon\n/* eslint-disable import/no-webpack-loader-syntax */\nimport '!file-loader?name=[name].[ext]!./images/global-mentality-icon.svg';\n/* eslint-enable import/no-webpack-loader-syntax */\n\n// Import CSS reset and Global Styles\nimport './styles/theme.scss';\n\n// Observe loading of Open Sans (to remove open sans, remove the <link> tag in\n// the index.html file and this observer)\nconst openSansObserver = new FontFaceObserver('Open Sans', {});\n\n// When Open Sans is loaded, add a font-family using Open Sans to the body\nopenSansObserver.load().then(() => {\n  document.body.classList.add('fontLoaded');\n}, () => {\n  document.body.classList.remove('fontLoaded');\n});\n\n// Create redux store with history\nconst logger = createLogger({\n  collapsed: true,\n  duration: true,\n  timestamp: true,\n  level: 'log',\n  diff: true,\n});\n\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(); \nconst epicMiddleware = createEpicMiddleware();\nconst history = createHistory();\nconst store = createStore(rootReducer, reduxDevTools, applyMiddleware(epicMiddleware, logger));\nepicMiddleware.run(rootEpic);\n\n\n// store.subscribe(() => {\n//  //Checks user role and passes down to the app routes\n//  console.log(store.getState().config.userRole)\n// });\n  ReactDOM.render(\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App role={store.getState().config.userRole}/>\n      </ConnectedRouter>\n    </Provider>,\n    document.getElementById('app')\n  );\n\n"],"sourceRoot":""}