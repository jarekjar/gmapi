{"version":3,"sources":["webpack:///./src/images/global-mentality-icon.svg?8a5c","images/Avator-Headshots/Regular-Headshots/Headshot-4.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-1.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-3.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-5.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-6.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-7.jpg","images/Avator-Headshots/Regular-Headshots/Headshot-8.jpg","images/Avator-Headshots/Doctor-Headshots/Doctor-1.jpg","images/Avator-Headshots/Doctor-Headshots/Doctor-2.jpg","images/Avator-Headshots/Doctor-Headshots/Doctor-3.jpg","images/Avator-Headshots/Doctor-Headshots/Doctor-5.jpg","images/Avator-Headshots/Doctor-Headshots/Doctor-6.jpg","images/Avator-Headshots/Doctor-Headshots/Doctor-7.jpg","images/Avator-Headshots/Doctor-Headshots/Doctor-8.jpg","images/Avator-Headshots/Doctor-Headshots/Doctor-4.jpg","images/global-mentality-icon.svg","containers/App/redux/types.js","utils/constants.js","containers/App/redux/reducer.js","containers/PatientPage/redux/types.js","containers/PatientPage/redux/reducer.js","containers/ClinicianPage/redux/types.js","containers/ClinicianPage/redux/reducer.js","containers/LoginPage/redux/types.js","containers/LoginPage/redux/reducer.js","reducers.js","mock-data/mock-data.js","containers/PatientPage/redux/actions.js","utils/validators.js","utils/request.js","styled-components/PatientCard/patient-card-styled.js","styled-components/Forms/forms-styled.js","styled-components/Buttons/buttons-styled.js","components/Patients/patient-appointments.js","containers/App/redux/actions.js","containers/PatientPage/redux/epic.js","containers/ClinicianPage/redux/actions.js","containers/ClinicianPage/redux/epic.js","epics.js","containers/App/redux/selectors.js","styled-components/Header/header-styled.js","styled-components/Icons/icons-styled.js","styled-components/SideMenu/side-menu-styled.js","styled-components/Divider/divider-styled.js","components/Clinicians/ClinicianSideMenu/ClinicianSideMenu.js","components/Clinicians/ClinicianSideMenu/style.js","components/Patients/PatientSideMenu/PatientSideMenu.js","components/Patients/PatientSideMenu/style.js","containers/Header/Header.js","containers/Header/style.js","containers/SideMenu/SideMenu.js","styled-components/Profile/profile-card-styled.js","components/Patients/patients-card-items/patient-header.js","components/Patients/patient-appointment-mobile.js","components/Patients/patient-dashboard.js","components/Patients/patient-profile.js","components/ReusableComponents/CardItems/CardCalendar.js","components/ReusableComponents/CardItems/CardMessaging.js","components/Patients/PatientCard.js","containers/PatientPage/PatientPage.js","utils/functional.js","containers/PatientPage/redux/selectors.js","containers/PatientPage/index.js","styled-components/ClinicianCard/clinician-card-styled.js","components/Clinicians/clinicians-card-items/clinician-header.js","components/Clinicians/clinician-appointments.js","components/Clinicians/clinician-appointment-mobile.js","components/Clinicians/clinician-dashboard.js","components/Clinicians/clinician-profile.js","styled-components/RoleList/role-list-styled.js","components/ReusableComponents/RoleLists/PatientList/PatientList.jsx","components/Clinicians/ClinicianCard.js","containers/ClinicianPage/ClinicianPage.js","containers/ClinicianPage/redux/selectors.js","containers/ClinicianPage/index.js","containers/NotFoundPage/NotFoundPage.js","styled-components/SignIn/signIn-styled.js","containers/LoginPage/LoginPage.js","containers/LoginPage/redux/selectors.js","containers/LoginPage/index.js","containers/LoginPage/redux/actions.js","containers/App/App.js","index.js","images/Avator-Headshots/Regular-Headshots/Headshot-2.jpg"],"names":["module","exports","__webpack_require__","p","AppActionTypes","LOAD_APP","APP_LOADED_SUCCESS","APP_LOADED_ERROR","DEFAULT_LOCALE","CHANGE_CURRENT_PAGE","Role","Current","initialState","loading","error","isError","theError","currentUser","current_page","combineReducers","state","arguments","length","undefined","type","action","LOAD_REPOS_ERROR","payload","current","PatientPageActionTypes","GET_PATIENT_DATA_FOR_EPIC","GET_PATIENT_DATA_SUCCESS","GET_PATIENT_DATA_ERROR","UPDATE_PATIENT_FOR_EPIC","UPDATE_PATIENT_ERROR","CREATE_PATIENT_FOR_EPIC","CREATE_PATIENT_DATA_ERROR","getPatientLoading","userData","userDataError","patientReducer","ClinicianPageActionTypes","GET_CLINICIAN_DATA_FOR_EPIC","GET_CLINICIAN_APPOINTMENTS_FOR_EPIC","GET_CLINICIAN_APPOINTMENTS_SUCCESS","GET_CLINICIAN_APPOINTMENTS_ERROR","GET_CLINICIAN_DATA_SUCCESS","GET_CLINICIAN_DATA_ERROR","UPDATE_CLINICIAN_FOR_EPIC","UPDATE_CLINICIAN_ERROR","CREATE_CLINICIAN_FOR_EPIC","CREATE_CLINICIAN_APPOINTMENT_FOR_EPIC","CREATE_CLINICIAN_DATA_ERROR","GET_PATIENT_LIST_FOR_EPIC","GET_PATIENT_LIST_SUCCESS","GET_PATIENT_LIST_ERROR","getClinicianLoading","patientList","appointmentList","clinicianReducer","LoginPageActionTypes","user","email","password","loginReducer","formSubmit","newState","Object","objectSpread","console","log","routeInitialState","location","configInitialState","userRole","userID","baseUrl","rootReducer","route","LOCATION_CHANGE","global","globalReducer","patient","clinician","login","config","Patient1MockData","id","firstName","lastName","cellPhone","homePhone","emailAddress","picture","Headshot1","address","gender","dateOfBirth","insurance","groupInsuranceNumber","provider","providerID","Doctor4","city","practice","phoneNum","faxNum","title","emergency","relationship","Patient2MockData","Headshot2","Patient3MockData","Headshot3","Patient4MockData","Headshot4","Patient5MockData","Headshot5","CalendarEvents","allDay","start","Date","end","desc","setHours","getHours","MILLI","seconds","minutes","hours","day","MONTHS","dates","dateMath","monthsInYear","year","date","map","i","month","firstVisibleDay","localizer","firstOfMonth","startOf","startOfWeek","lastVisibleDay","endOfMonth","endOf","visibleDays","last","days","lte","push","add","ceil","unit","floor","eq","range","merge","time","milliseconds","eqTime","dateA","dateB","isJustDate","duration","firstOfWeek","Math","abs","diff","round","total","ms","getTime","div","week","d","setDate","getDate","getDay","getFullYear","today","yesterday","tomorrow","CalendarDates","patientAppointments","appointment_time","appointment_date","patient_Name","patient_Email","assigned_To","photo","clinicians_Name","service","status","randomHeadShot","headShots","Headshot6","Headshot7","Headshot8","random","randomDoctor","Doctor1","Doctor2","Doctor3","Doctor5","Doctor6","Doctor7","Doctor8","getPatientData","patientDataSuccess","response","patientDataError","updatePatientData","validateObject","y","request","url","options","this","setDefaultOptions","method","validateRequestInputs","addParams","params","fetch","text","bodyText","data","JSON","parse","onSuccess","onRequestError","_context","t0","keys","k","concat","join","split","createParamString","validators","headers","setDefaultHeaders","Promise","reject","resolve","PatientCardWrapper","styled","Card","_templateObject","_ref","heights","_ref2","maxwidths","_ref3","minwidths","_ref4","widths","_ref5","margins","_ref6","paddings","_ref7","bordersradius","_ref8","boxshadows","_ref9","justify","_ref10","liheight","_ref11","mediawidths","_ref12","mediamargins","PatientHeaderWrapper","_templateObject2","_templateObject3","_templateObject4","PatientProfileCard","_templateObject5","_ref13","_ref14","align","_ref15","flexsflow","_ref16","backgroundscolor","_ref17","_ref18","_ref19","boxshadow","_ref20","colors","_ref21","_ref22","fontssize","_ref23","_ref24","borders","_ref25","marginsTop","_ref26","fontsweight","_ref27","_ref28","mediajustify","_ref29","mediaflexsflow","_ref30","mediaalign","_ref31","_templateObject6","_ref32","_ref33","_ref34","_ref35","_ref36","ImageCard","_templateObject7","_templateObject8","_ref37","_ref38","_ref39","_ref40","_ref41","_ref42","_ref43","_ref44","_ref45","_ref46","_ref47","_templateObject9","_ref48","src","_ref49","_ref50","_ref51","_ref52","_ref53","ProfileSettingsWrapper","_templateObject10","Name","_templateObject11","Details","_templateObject12","PatientCardButton","Button","_templateObject13","_ref54","_ref55","FormHeader","forms_styled_templateObject","FormBody","forms_styled_templateObject2","FormRow","forms_styled_templateObject3","FormColumn","forms_styled_templateObject4","StyledInputTextField","InputTextField","forms_styled_templateObject5","StyledInputTextArea","forms_styled_templateObject6","StyledDropdownField","Select","forms_styled_templateObject7","InvisibleDiv","forms_styled_templateObject8","theme","createMuiTheme","palette","primary","main","typography","useNextVariants","dateOptions","StyledButton","buttons_styled_templateObject","linesheight","flexsbasis","justifyContent","mediaminwidths","flexContainer","display","flexFlow","padding","maxHeight","appointmentTime","backgroundColor","maxWidth","fontWeight","fontSize","withStyles","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","defineProperty","breakpoints","up","search","position","borderColor","borderRadius","shape","fade","common","white","&:hover","spacing","searchIcon","height","pointerEvents","alignItems","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","props","classes","react_default","a","createElement","Fragment","placeholder","variant","name","Grid_default","item","xs","List_default","style","ListItem_default","ListItemText_default","appointment","index","key","Avatar_default","onClick","window","open","changePage","next_page","PatientEpic","combineEpics","action$","state$","pipe","ofType","switchMap","defer","value","Observable","asyncToGenerator","regenerator_default","mark","_callee","observer","patients","randomPatientPicture","wrap","prev","next","get","Accept","Content-Type","sent","complete","finish","stop","_x","apply","GET_PATIENT_APPOINTMENTS_FOR_EPIC","_callee2","_context2","_x2","_callee3","_context3","put","body","stringify","_x3","UPDATE_PATIENT_APPOINTMENTS_FOR_EPIC","_callee4","_context4","_x4","updatePatientAppointments","_callee5","_context5","post","_x5","createPatientData","CREATE_PATIENT_APPOINTMENTS_FOR_EPIC","_callee6","_context6","_x6","createPatientAppointments","getClinicianData","clinicianDataSuccess","clinicianDataError","getPatientList","getClinicianAppointments","ClinicianEpic","updateClinicianData","UPDATE_CLINICIAN_APPOINTMENTS_FOR_EPIC","updateClinicianAppointments","createClinicianData","parseInt","createClinicianAppointments","_callee7","_context7","_x7","rootEpic","getCurrentPage","getUserRole","HeaderWrapper","AppBar","header_styled_templateObject","EditIcon","icons_styled_templateObject","AccountCircle","icons_styled_templateObject2","StyledMoreVertIcon","Menu","icons_styled_templateObject3","SideMenuWrapper","side_menu_styled_templateObject","side_menu_styled_templateObject2","StyledDivider","Divider","divider_styled_templateObject","displays","mediadisplays","ClinicianSideMenu","_this$props","currentPage","react","Logo","className","img","react_inlinesvg_es","MenuList_default","menuList","heading","MenuItem_default","selected","menuItem","ref","dashboardRef","ListItemIcon_default","icon","icons_index_es","inset","Component","&:focus","& $primary, & $icon","margin","marginBottom","PatientSideMenu","&:blur","Header","anchorEl","mobileMoreAnchorEl","mobileOpen","handleMenuClose","_this","setState","handleMobileMenuClose","innerWidth","handleDrawerToggle","addEventListener","removeEventListener","_this$state","currentProfile","isMenuOpen","Boolean","renderMenu","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","sideMenu","Clinicians_ClinicianSideMenu_ClinicianSideMenu","Patients_PatientSideMenu_PatientSideMenu","Toolbar_default","AccountCircle_default","aria-haspopup","drawer","Hidden_default","smUp","implementation","Drawer_default","container","anchor","paper","drawerPaper","SideMenu","handleDrawerOpen","profile_card_styled_templateObject","bordersbottom","bordersleft","bordersright","borderstop","mediabordersright","mediabordersbottom","Avatar","profile_card_styled_templateObject2","PatientHeader","handleClose","handleChange","e","fn","target","formSubmission","values","handleOpen","React","cloneElement","_this2","assigned","marginTop","charAt","toUpperCase","slice","Modal_default","aria-labelledby","aria-describedby","top","left","transform","formik_esm","initialValues","description","onSubmit","errors","touched","handleBlur","handleSubmit","isSubmitting","core_styles","onChange","onBlur","fullWidth","ModalWrapped","background","boxShadow","shadows","outline","card","minWidth","bullet","pos","Card_default","CardContent_default","PatientDashboard","objectDestructuringEmpty","FormikDatePicker","_name","defaultValue","setFieldValue","form","field","material_ui_pickers_esm","utils","DateFnsUtils","keyboard","format","clearable","toLocaleString","PatientProfile","selectedDate","middleInitial","disabled","input","Input_default","inputProps","maxLength","component","PureComponent","allViews","BigCalendar","Views","momentLocalizer","moment","CardCalendar","lib_default","events","views","step","showMultiDayTimes","max","defaultDate","CardMessaging","PatientCard","isDesktop","handleResize","patient_header","patient_dashboard","react_event_listener_cjs_default","onResize","patient_appointments","appointments","patient_appointment_mobile","CardItems_CardCalendar","CardItems_CardMessaging","patient_profile","PatientPage","Helmet","content","containers_Header_Header","SideMenu_SideMenu","Patients_PatientCard","Sum","x","inspect","empty","All","Any","getUserData","getUserLoading","getUserDataError","mapDispatchToProps","compose","withRouter","connect","userDataLoading","ClinicianCardWrapper","clinician_card_styled_templateObject","ClinicianHeaderWrapper","clinician_card_styled_templateObject2","clinician_card_styled_templateObject3","clinician_card_styled_templateObject4","ClinicianProfileCard","clinician_card_styled_templateObject5","clinician_card_styled_templateObject6","clinician_card_styled_templateObject7","clinician_card_styled_templateObject8","clinician_card_styled_templateObject9","clinician_card_styled_templateObject10","clinician_card_styled_templateObject11","clinician_card_styled_templateObject12","ClinicianCardButton","clinician_card_styled_templateObject13","ClinicianHeader","createClinicianAppointment","clinicianList","patientID","clinicianID","flexDirection","textAlign","clinicianAppointments","patientName","clinicianName","ClinicianDashboard","ClinicianProfile","pronoun","handleDateChange","clinician_card_styled_ImageCard","clinician_card_styled_ProfileSettingsWrapper","aboutYou","multiline","rows","rowsMax","RoleListWrapper","role_list_styled_templateObject","RoleListHeader","role_list_styled_templateObject2","RoleListRow","role_list_styled_templateObject3","RoleListAvator","role_list_styled_templateObject4","RoleListViewButton","role_list_styled_templateObject5","RoleListRemoveButton","role_list_styled_templateObject6","ButtonsWrapper","role_list_styled_templateObject7","PatientList","handleView","listOfPatients","Array","isArray","ClinicianCard","patientUserData","clinician_header","clinician_dashboard","clinician_appointments","clinician_appointment_mobile","PatientList_PatientList","clinician_profile","ClinicianPage","Clinicians_ClinicianCard","createClinician","getPatientUserData","getAppointmentList","NotFound","SignInWrapper","signIn_styled_templateObject","backgroundcolors","SignInSection","section","signIn_styled_templateObject2","SignInImage","signIn_styled_templateObject3","SignInTick","signIn_styled_templateObject4","zIndex","tops","lefts","NewPasswordText","signIn_styled_templateObject5","LoginPage","validationSchema","Yup","required","TextField_default","label","alt","href","getEmail","getPassword","loginInfo","App","pathname","titleTemplate","defaultTitle","Switch","Route","exact","path","NotFoundPage","FontFaceObserver","load","then","document","classList","remove","logger","createLogger","collapsed","timestamp","level","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","epicMiddleware","createEpicMiddleware","history","createHistory","store","createStore","applyMiddleware","run","ReactDOM","render","es","react_router_redux_es","containers_App_App","getElementById"],"mappings":"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","file":"static/js/main.b64f9a34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/global-mentality-icon.6548a4ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-4.551b9b21.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-1.5031d20e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-3.624eb147.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-5.57e42ab4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-6.86d8660a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-7.c1b2f038.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Headshot-8.9ca91e38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Doctor-1.27752586.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Doctor-2.4515a0f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Doctor-3.06152b24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Doctor-5.06ade6ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Doctor-6.0afc905e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Doctor-7.239351e6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Doctor-8.39bdb667.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Doctor-4.d38cf282.jpg\";","module.exports = __webpack_public_path__ + \"global-mentality-icon.svg\";","/*\n * AppTypes\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * types here. We prefix them with '[App] Whatever the action is doing' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_TYPE = '[APP] Whatever the action is doing';\n */\n\nexport const AppActionTypes = {\n  LOAD_APP: '[APP] Loading App........',\n  APP_LOADED_SUCCESS: '[APP] Load Success',\n  APP_LOADED_ERROR: '[APP] Load Error',\n  DEFAULT_LOCALE: 'en',\n  CHANGE_CURRENT_PAGE: '[APP] Go to next page'\n};\n","export const Role = {\n\tPatient: 'patient',\n\tClinician: 'clinician',\n\tOfficeAdmin: 'office',\n\tSuperAdmin: 'super_admin'\n};\n\nexport const Current = {\n\tDashboard: 'dashboard',\n\tAppointments: 'appointments',\n\tCalendar: 'calendar',\n\tMessaging: 'messaging',\n\tServices: 'services',\n\tPatients: 'patients',\n\tClinicians: 'clinicians',\n\tPersonnel: 'personnel',\n\tSettings: 'settings',\n\tClinicianProfile: 'clinician Profile',\n\tPatientProfile: 'patient Profile',\n\tOfficeProfile: 'office Profile'\n};\n","/*\n * AppReducer\n *\n * The reducer takes care of our data. Using actions, we can change our\n * application state.\n * To add a new action, add it to the switch statement in the reducer function\n *\n * Example:\n * case YOUR_ACTION_CONSTANT:\n *   return state.set('yourStateVariable', true);\n */\nimport { combineReducers } from 'redux';\n// Action Types\nimport { AppActionTypes } from './types';\nimport { Current } from '../../../utils/constants';\n\n// The initial state of the App\nconst initialState = {\n  loading: false,\n  error: {\n    isError: false,\n    theError: {}\n  },\n  currentUser: {\n    // Currently nothing, but will use this instead of in config reducer\n  },\n  current_page: Current.Dashboard,\n};\n\nconst loading = (state = initialState.loading, action) => {\n  switch (action.type) {\n    case AppActionTypes.LOAD_APP:\n      return true;\n\n    case AppActionTypes.APP_LOADED_SUCCESS:\n    case AppActionTypes.APP_LOADED_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst error = (state = initialState.error, action) => {\n  switch (action.type) {\n    case AppActionTypes.LOAD_REPOS_ERROR:\n      return { isError: true, theError: action.payload };\n\n    case AppActionTypes.APP_LOADED_SUCCESS:\n    case AppActionTypes.LOAD_APP:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nconst current = (state = initialState.current_page, action) => {\n  switch (action.type) {\n    case AppActionTypes.CHANGE_CURRENT_PAGE:\n      return action.payload;  \n\n    default:\n      return state;\n  }\n};\n\n\nexport default combineReducers({\n  loading,\n  error,\n  current,\n});\n","/*\n * PatientTypes\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * types here. We prefix them with '[ Patient ]' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_TYPE: '[Patient] whatever your action is doing';\n */\nexport const PatientPageActionTypes = {\n  // -- Get\n  GET_PATIENT_DATA_FOR_EPIC: '[ Patient ] Getting Patient Data from EPIC',\n  GET_PATIENT_DATA_SUCCESS: '[ Patient ] Getting Patient Data Success',\n  GET_PATIENT_DATA_ERROR: '[ Patient ] Getting Patient Data ERROR',\n  // -- Update\n  UPDATE_PATIENT_FOR_EPIC: '[ Patient ] Update Patient Data for EPIC',\n  UPDATE_PATIENT_ERROR: '[ Patient ] Update Patient Data ERROR',\n  // -- Create\n  CREATE_PATIENT_FOR_EPIC: '[ Patient ] Create Patient Data from EPIC',\n  CREATE_PATIENT_DATA_ERROR: '[ Patient ] Create Patient Data ERROR',\n};\n","/*\n * PatientReducer\n *\n * The reducer takes care of our data. Using actions, we can change our\n * application state.\n * To add a new action, add it to the switch statement in the reducer function\n *\n * Example:\n * case YOUR_ACTION_TYPE:\n *   return action.payload || [..action.payload] || {...action.payload} || state <= to clear;\n */\n\nimport { combineReducers } from 'redux';\nimport { PatientPageActionTypes } from './types';\n\n// The initial state of the App\nconst initialState = {\n  getPatientLoading: false,\n  userData: {},\n  userDataError: {},\n  \n};\n\nconst getPatientLoading = (state = initialState.getPatientLoading, action) => {\n  switch(action.type){\n    case PatientPageActionTypes.GET_PATIENT_DATA_FOR_EPIC:\n     return true;\n\n     case PatientPageActionTypes.GET_PATIENT_DATA_SUCCESS:\n     case PatientPageActionTypes.GET_PATIENT_DATA_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n}\n\nconst userData = (state = initialState.userData, action) => {\n    switch(action.type){\n      case PatientPageActionTypes.GET_PATIENT_DATA_SUCCESS:\n        return action.payload;\n\n      default:\n        return state;\n    }\n}\n\nconst userDataError = (state = initialState.userDataError, action) => {\n  switch(action.type){\n    case PatientPageActionTypes.GET_PATIENT_DATA_ERROR:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\nexport const patientReducer = combineReducers({\n  userData,\n  getPatientLoading,\n  userDataError,\n});","/*\n * ClinicianTypes\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * types here. We prefix them with '[ Clinician ]' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_TYPE: '[Clinician] whatever your action is doing';\n */\nexport const ClinicianPageActionTypes = {\n   // -- Get\n   GET_CLINICIAN_DATA_FOR_EPIC: '[ Clinician ] Getting Clinician Data from EPIC',\n   GET_CLINICIAN_APPOINTMENTS_FOR_EPIC: '[ Clinician ] Getting Clinician Appointments from EPIC',\n   GET_CLINICIAN_APPOINTMENTS_SUCCESS: '[ Clinician ] Getting Clinician Appointments Success',\n   GET_CLINICIAN_APPOINTMENTS_ERROR: '[ Clinician ] Getting Clinician Appointments ERROR',\n   GET_CLINICIAN_DATA_SUCCESS: '[ Clinician ] Getting Clinician Data Success',\n   GET_CLINICIAN_DATA_ERROR: '[ Clinician ] Getting Clinician Data ERROR',\n   // -- Update\n   UPDATE_CLINICIAN_FOR_EPIC: '[ Clinician ] Update Clinician Data for EPIC',\n   UPDATE_CLINICIAN_ERROR: '[ Clinician ] Update Clinician Data ERROR',\n   // -- Create\n   CREATE_CLINICIAN_FOR_EPIC: '[ Clinician ] Create Clinician Data from EPIC',\n   CREATE_CLINICIAN_APPOINTMENT_FOR_EPIC: '[ Clinician ] Create Clinician Appointment',\n   CREATE_CLINICIAN_DATA_ERROR: '[ Clinician ] Create Clinician Data ERROR',\n  // -- Patient List\n   GET_PATIENT_LIST_FOR_EPIC: \"[ Clinician ] Getting Clinician's Patient List Data from EPIC\",\n   GET_PATIENT_LIST_SUCCESS: \"[ Clinician ] Get Clinician's Patient List Data Success\",\n   GET_PATIENT_LIST_ERROR: \"[ Clinician ] Get Clinician's Patient List Data ERROR\",\n};\n","/*\n * ClinicianReducer\n *\n * The reducer takes care of our data. Using actions, we can change our\n * application state.\n * To add a new action, add it to the switch statement in the reducer function\n *\n * Example:\n * case YOUR_ACTION_TYPE:\n *   return action.payload || [..action.payload] || {...action.payload} || state <= to clear;\n */\n\nimport { combineReducers } from 'redux';\nimport { ClinicianPageActionTypes } from './types';\n\n// The initial state of the App\nconst initialState = {\n  getClinicianLoading: false,\n  userData: {},\n  userDataError: {},\n  patientList: [],\n  appointmentList: [],\n};\n\nconst getClinicianLoading = (state = initialState.getClinicianLoading, action) => {\n  switch(action.type){\n    case ClinicianPageActionTypes.GET_CLINICIAN_DATA_FOR_EPIC:\n     return true;\n\n     case ClinicianPageActionTypes.GET_CLINICIAN_DATA_SUCCESS:\n     case ClinicianPageActionTypes.GET_CLINICIAN_DATA_ERROR:\n      return false;\n\n    default:\n      return state;\n  }\n}\n\nconst userData = (state = initialState.userData, action) => {\n    switch(action.type){\n      case ClinicianPageActionTypes.GET_CLINICIAN_DATA_SUCCESS:\n        return action.payload;\n\n      default:\n        return state;\n    }\n}\n\nconst userDataError = (state = initialState.userDataError, action) => {\n  switch(action.type){\n    case ClinicianPageActionTypes.GET_CLINICIAN_DATA_ERROR:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\nconst patientList = (state = initialState.patientList, action)=> {\n  switch(action.type){\n    case ClinicianPageActionTypes.GET_PATIENT_LIST_SUCCESS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\nconst appointmentList = (state = initialState.appointmentList, action)=> {\n  switch(action.type){\n    case ClinicianPageActionTypes.GET_CLINICIAN_APPOINTMENTS_SUCCESS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\n\nexport const clinicianReducer = combineReducers({\n  getClinicianLoading,\n  userData,\n  userDataError,\n  patientList,\n  appointmentList,\n});","/*\n * LoginTypes\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * types here. We prefix them with '[ Login ]' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_TYPE: '[Login] whatever your action is doing';\n */\nexport const LoginPageActionTypes = {\n  // HANDLE_RESIZE: '[ Login ] Handle Resize',\n  FORM_SUBMISSION: '[ Login ] Form Submission',\n};\n","/*\n * LoginReducer\n *\n * The reducer takes care of our data. Using actions, we can change our\n * application state.\n * To add a new action, add it to the switch statement in the reducer function\n *\n * Example:\n * case YOUR_ACTION_TYPE:\n *   return action.payload || [..action.payload] || {...action.payload} || state <= to clear;\n */\nimport { combineReducers } from 'redux';\nimport { LoginPageActionTypes } from './types';\n\n// The initial state of the App\nconst initialState = {\n  // isDesktop: true,\n  user: {\n    email: \"\",\n    password: \"\"\n  }\n};\n\n\n// const isDesktop = (state = initialState.isDesktop, action) => {\n//   const newState = { ...state }\n//   switch (action.type) {\n//     case LoginPageActionTypes.HANDLE_RESIZE:\n//       if (window.innerWidth <= 700) {\n//         return newState.isDesktop = false\n//       }\n//       else {\n//         return newState.isDesktop = true\n//       }\n//       break;\n\n//     default:\n//       return newState;\n//   }\n// };\n\nconst formSubmit = (state = initialState.user, action) => {\n  const newState = { ...state }\n  switch (action.type) {\n    case LoginPageActionTypes.FORM_SUBMISSION:\n\n      newState.email = action.payload.email\n      newState.password = action.payload.password\n      console.log(newState)\n      return newState\n      break;\n    default:\n      return state;\n  }\n}\n\nexport const loginReducer = combineReducers({\n  // isDesktop,\n  formSubmit\n});","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport { LOCATION_CHANGE } from 'react-router-redux';\n\nimport globalReducer from './containers/App/redux/reducer';\nimport { patientReducer } from './containers/PatientPage/redux/reducer';\nimport { clinicianReducer } from './containers/ClinicianPage/redux/reducer';\nimport { loginReducer } from './containers/LoginPage/redux/reducer';\n\n// Initial routing state\nconst routeInitialState = {\n\tlocation: null\n};\n\nconst configInitialState = {\n\tuserRole: 'clinician',\n\tuserID: null,\n\tbaseUrl: 'http://www.globalmentality.net/api'\n};\n/**\n * Merge route into the global application state\n */\nfunction routeReducer(state = routeInitialState, action) {\n\tswitch (action) {\n\t\tcase LOCATION_CHANGE:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n/**\n * Setting the config file for the app and user\n */\nfunction configReducer(state = configInitialState, action) {\n\tswitch (action.type) {\n\t\tcase LOCATION_CHANGE:\n\t\t\treturn state;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n/**\n * Creates the main reducer;\n */\nexport const rootReducer = combineReducers({\n\troute: routeReducer,\n\tglobal: globalReducer,\n\tpatient: patientReducer,\n\tclinician: clinicianReducer,\n\tlogin: loginReducer,\n\tconfig: configReducer\n});\n","import dateMath from 'date-arithmetic';\nimport Headshot1 from '../images/Avator-Headshots/Regular-Headshots/Headshot-1.jpg';\nimport Headshot2 from '../images/Avator-Headshots/Regular-Headshots/Headshot-2.jpg';\nimport Headshot3 from '../images/Avator-Headshots/Regular-Headshots/Headshot-3.jpg';\nimport Headshot4 from '../images/Avator-Headshots/Regular-Headshots/Headshot-4.jpg';\nimport Headshot5 from '../images/Avator-Headshots/Regular-Headshots/Headshot-5.jpg';\nimport Headshot6 from '../images/Avator-Headshots/Regular-Headshots/Headshot-6.jpg';\nimport Headshot7 from '../images/Avator-Headshots/Regular-Headshots/Headshot-7.jpg';\nimport Headshot8 from '../images/Avator-Headshots/Regular-Headshots/Headshot-8.jpg';\nimport Doctor1 from '../images/Avator-Headshots/Doctor-Headshots/Doctor-1.jpg';\nimport Doctor2 from '../images/Avator-Headshots/Doctor-Headshots/Doctor-2.jpg';\nimport Doctor3 from '../images/Avator-Headshots/Doctor-Headshots/Doctor-3.jpg';\nimport Doctor4 from '../images/Avator-Headshots/Doctor-Headshots/Doctor-4.jpg';\nimport Doctor5 from '../images/Avator-Headshots/Doctor-Headshots/Doctor-5.jpg';\nimport Doctor6 from '../images/Avator-Headshots/Doctor-Headshots/Doctor-6.jpg';\nimport Doctor7 from '../images/Avator-Headshots/Doctor-Headshots/Doctor-7.jpg';\nimport Doctor8 from '../images/Avator-Headshots/Doctor-Headshots/Doctor-8.jpg';\n\n\nexport const Patient1MockData = {\n  id: 'PA#4837289HDSKJFLHDA',\n  userID: 3,\n  firstName: \"Carson\",\n  lastName: \"Alexander\",\n  cellPhone: \"323-565-4534\",\n  homePhone: null,\n  emailAddress: \"cAlexander@gmail.com\",\n  picture: Headshot1,\n  address: \"8567 Sun Street Los Angeles CA 90293\",\n  gender: \"Male\",\n  dateOfBirth: \"2019-03-01T12:51:56.1586433\",\n  insurance: \"Aetna\",\n  groupInsuranceNumber: 1238548,\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane\",\n    city: \"Los Angeles\",\n    state: \"CA\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\nexport const Patient2MockData = {\n  id: 'PA#134278732134018HG92344',\n  userID: 3,\n  firstName: \"Ivan\",\n  lastName: \"Baldy\",\n  cellPhone: \"323-565-4534\",\n  homePhone: null,\n  emailAddress: \"ibaldy@gmail.com\",\n  picture: Headshot2,\n  address: \"85 23rd Street\",\n  city: \"Los Angeles\",\n  state: \"CA\",\n  gender: \"Male\",\n  dateOfBirth: \"2019-03-01T12:51:56.1586433\",\n  insurance: \"Aetna\",\n  groupInsuranceNumber: 1238548,\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane Los Angeles, CA 90345\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\nexport const Patient3MockData = {\n  id: \"PA#34921902834UHSIDFUH\",\n  userID: 3,\n  firstName: \"Robert\",\n  lastName: \"Cruise\",\n  cellPhone: \"323-565-4534\",\n  homePhone: null,\n  emailAddress: \"rcruise@gmail.com\",\n  picture: Headshot3,\n  address: \"4536 5th Street\",\n  city: \"Los Angeles\",\n  state: \"CA\",\n  gender: \"Male\",\n  dateOfBirth: \"2019-03-01T12:51:56.1586433\",\n  insurance: \"Aetna\",\n  groupInsuranceNumber: 1238548,\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane Los Angeles, CA 90345\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\nexport const Patient4MockData = {\n  id: \"PA#UHKSDHJ7893274243\",\n  userID: 3,\n  firstName: \"Ashely\",\n  lastName: \"Hendricks\",\n  cellPhone: \"323-565-4534\",\n  homePhone: null,\n  emailAddress: \"ahendricks@gmail.com\",\n  picture: Headshot4,\n  address: \"238 Circle Drive\",\n  city: \"Los Angeles\",\n  state: \"CA\",\n  gender: \"Female\",\n  dateOfBirth: \"2019-03-01T12:51:56.1586433\",\n  insurance: \"Aetna\",\n  groupInsuranceNumber: 1238548,\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane Los Angeles, CA 90345\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\n\nexport const Patient5MockData = {\n  id: \"PA#123984HADSKHFA932AX\",\n  userID: 3,\n  firstName: \"Chrissy\",\n  lastName: \"Ellis\",\n  cellPhone: \"323-565-3421\",\n  homePhone: null,\n  emailAddress: \"cEllis@gmail.com\",\n  picture: Headshot5,\n  address: \"1 Marvin Street\",\n  city: \"Los Angeles\",\n  state: \"CA\",\n  gender: \"Female\",\n  dateOfBirth: \"1995-03-01T12:51:56.1586433\",\n  insurance: \"Aetna\",\n  groupInsuranceNumber: 1238548,\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane Los Angeles, CA 90345\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n};\n\nexport const Clinician1MockData = {\n  id: 'PA#4837289HDSKJFLH23',\n  userID: 3,\n  firstName: \"Terry\",\n  lastName: \"Cruz\",\n  cellPhone: \"323-565-5333\",\n  homePhone: null,\n  emailAddress: \"terrycruz@gmail.com\",\n  aboutYou: \"This is my page\",\n  picture: Headshot1,\n  pronoun: \"Dr\",\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane\",\n    city: \"Los Angeles\",\n    state: \"CA\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\nexport const Clinician2MockData = {\n  id: 'PA#4837289HDSKJFLH23',\n  userID: 3,\n  firstName: \"James\",\n  lastName: \"Jones\",\n  cellPhone: \"323-565-5333\",\n  homePhone: null,\n  emailAddress: \"jjones@gmail.com\",\n  aboutYou: \"This is my page\",\n  picture: Headshot2,\n  pronoun: \"Dr\",\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane\",\n    city: \"Los Angeles\",\n    state: \"CA\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\nexport const Clinician3MockData = {\n  id: 'PA#4837289HDSKJFLH23',\n  userID: 3,\n  firstName: \"Jessica\",\n  lastName: \"Jones\",\n  cellPhone: \"323-565-5333\",\n  homePhone: null,\n  emailAddress: \"jonesjessica@gmail.com\",\n  aboutYou: \"This is my page\",\n  picture: Headshot1,\n  pronoun: \"Dr\",\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane\",\n    city: \"Los Angeles\",\n    state: \"CA\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\nexport const Clinician4MockData = {\n  id: 'PA#4837289HDSKJFLH23',\n  userID: 3,\n  firstName: \"Erica\",\n  lastName: \"Smith\",\n  cellPhone: \"323-565-5333\",\n  homePhone: null,\n  emailAddress: \"esmith@gmail.com\",\n  aboutYou: \"This is my page\",\n  picture: Headshot2,\n  pronoun: \"Dr\",\n  provider: {\n    providerID: 2,\n    userID: 2,\n    firstName: \"Alonso\",\n    lastName: \"Meredith\",\n    picture: Doctor4,\n    address: \"123 Cherry Lane\",\n    city: \"Los Angeles\",\n    state: \"CA\",\n    practice: \"Happy Psychiatry\",\n    phoneNum: \"323-987-9871\",\n    faxNum: \"323-123-2939\",\n    emailAddress: \"alonso123@gmail.com\",\n    title: \"MFT\"\n  },\n  emergency: {\n    id: 1,\n    userID: 3,\n    relationship: \"Father\",\n    firstName: \"John\",\n    lastName: \"Smith\",\n    homePhone: null,\n    cellPhone: \"323-123-4567\"\n  }\n}\n\nexport const CalendarEvents = [\n  {\n    id: 0,\n    title: 'All Day Event very long title',\n    allDay: true,\n    start: new Date(2019, 3, 0),\n    end: new Date(2019, 3, 1),\n  },\n  {\n    id: 1,\n    title: 'Long Event',\n    start: new Date(2019, 3, 7),\n    end: new Date(2019, 3, 10),\n  },\n\n  {\n    id: 2,\n    title: 'DTS STARTS',\n    start: new Date(2016, 2, 13, 0, 0, 0),\n    end: new Date(2016, 2, 20, 0, 0, 0),\n  },\n\n  {\n    id: 3,\n    title: 'DTS ENDS',\n    start: new Date(2016, 10, 6, 0, 0, 0),\n    end: new Date(2016, 10, 13, 0, 0, 0),\n  },\n\n  {\n    id: 4,\n    title: 'Some Event',\n    start: new Date(2019, 3, 9, 0, 0, 0),\n    end: new Date(2019, 3, 10, 0, 0, 0),\n  },\n  {\n    id: 5,\n    title: 'Conference',\n    start: new Date(2019, 3, 11),\n    end: new Date(2019, 3, 13),\n    desc: 'Big conference for important people',\n  },\n  {\n    id: 6,\n    title: 'Meeting',\n    start: new Date(2019, 3, 12, 10, 30, 0, 0),\n    end: new Date(2019, 3, 12, 12, 30, 0, 0),\n    desc: 'Pre-meeting meeting, to prepare for the meeting',\n  },\n  {\n    id: 7,\n    title: 'Lunch',\n    start: new Date(2019, 3, 12, 12, 0, 0, 0),\n    end: new Date(2019, 3, 12, 13, 0, 0, 0),\n    desc: 'Power lunch',\n  },\n  {\n    id: 8,\n    title: 'Meeting',\n    start: new Date(2019, 3, 12, 14, 0, 0, 0),\n    end: new Date(2019, 3, 12, 15, 0, 0, 0),\n  },\n  {\n    id: 9,\n    title: 'Meeting',\n    start: new Date(2019, 3, 12, 17, 0, 0, 0),\n    end: new Date(2019, 3, 12, 17, 30, 0, 0),\n    desc: 'With a client.',\n  },\n  {\n    id: 10,\n    title: 'Dinner',\n    start: new Date(2019, 3, 12, 20, 0, 0, 0),\n    end: new Date(2019, 3, 12, 21, 0, 0, 0),\n  },\n  {\n    id: 11,\n    title: 'Birthday Party',\n    start: new Date(2019, 3, 13, 7, 0, 0),\n    end: new Date(2019, 3, 13, 10, 30, 0),\n  },\n  {\n    id: 12,\n    title: 'Late Night Event',\n    start: new Date(2019, 3, 17, 19, 30, 0),\n    end: new Date(2019, 3, 18, 2, 0, 0),\n  },\n  {\n    id: 12.5,\n    title: 'Late Same Night Event',\n    start: new Date(2019, 3, 17, 19, 30, 0),\n    end: new Date(2019, 3, 17, 23, 30, 0),\n  },\n  {\n    id: 13,\n    title: 'Multi-day Event',\n    start: new Date(2019, 3, 20, 19, 30, 0),\n    end: new Date(2019, 3, 22, 2, 0, 0),\n  },\n  {\n    id: 14,\n    title: 'Today',\n    start: new Date(new Date().setHours(new Date().getHours() - 3)),\n    end: new Date(new Date().setHours(new Date().getHours() + 3)),\n  },\n];\n\nconst MILLI = {\n  seconds: 1000,\n  minutes: 1000 * 60,\n  hours: 1000 * 60 * 60,\n  day: 1000 * 60 * 60 * 24,\n}\n\nconst MONTHS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n\n\nlet dates = {\n  ...dateMath,\n\n  monthsInYear(year) {\n    let date = new Date(year, 0, 1)\n\n    return MONTHS.map(i => dates.month(date, i))\n  },\n\n  firstVisibleDay(date, localizer) {\n    let firstOfMonth = dates.startOf(date, 'month')\n\n    return dates.startOf(firstOfMonth, 'week', localizer.startOfWeek())\n  },\n\n  lastVisibleDay(date, localizer) {\n    let endOfMonth = dates.endOf(date, 'month')\n\n    return dates.endOf(endOfMonth, 'week', localizer.startOfWeek())\n  },\n\n  visibleDays(date, localizer) {\n    let current = dates.firstVisibleDay(date, localizer),\n      last = dates.lastVisibleDay(date, localizer),\n      days = []\n\n    while (dates.lte(current, last, 'day')) {\n      days.push(current)\n      current = dates.add(current, 1, 'day')\n    }\n\n    return days\n  },\n\n  ceil(date, unit) {\n    let floor = dates.startOf(date, unit)\n\n    return dates.eq(floor, date) ? floor : dates.add(floor, 1, unit)\n  },\n\n  range(start, end, unit = 'day') {\n    let current = start,\n      days = []\n\n    while (dates.lte(current, end, unit)) {\n      days.push(current)\n      current = dates.add(current, 1, unit)\n    }\n\n    return days\n  },\n\n  merge(date, time) {\n    if (time == null && date == null) return null\n\n    if (time == null) time = new Date()\n    if (date == null) date = new Date()\n\n    date = dates.startOf(date, 'day')\n    date = dates.hours(date, dates.hours(time))\n    date = dates.minutes(date, dates.minutes(time))\n    date = dates.seconds(date, dates.seconds(time))\n    return dates.milliseconds(date, dates.milliseconds(time))\n  },\n\n  eqTime(dateA, dateB) {\n    return (\n      dates.hours(dateA) === dates.hours(dateB) &&\n      dates.minutes(dateA) === dates.minutes(dateB) &&\n      dates.seconds(dateA) === dates.seconds(dateB)\n    )\n  },\n\n  isJustDate(date) {\n    return (\n      dates.hours(date) === 0 &&\n      dates.minutes(date) === 0 &&\n      dates.seconds(date) === 0 &&\n      dates.milliseconds(date) === 0\n    )\n  },\n\n  duration(start, end, unit, firstOfWeek) {\n    if (unit === 'day') unit = 'date'\n    return Math.abs(\n      dates[unit](start, undefined, firstOfWeek) -\n      dates[unit](end, undefined, firstOfWeek)\n    )\n  },\n\n  diff(dateA, dateB, unit) {\n    if (!unit || unit === 'milliseconds') return Math.abs(+dateA - +dateB)\n\n    // the .round() handles an edge case\n    // with DST where the total won't be exact\n    // since one day in the range may be shorter/longer by an hour\n    return Math.round(\n      Math.abs(\n        +dates.startOf(dateA, unit) / MILLI[unit] -\n        +dates.startOf(dateB, unit) / MILLI[unit]\n      )\n    )\n  },\n\n  total(date, unit) {\n    let ms = date.getTime(),\n      div = 1\n\n    switch (unit) {\n      case 'week':\n        div *= 7\n        break;\n      case 'day':\n        div *= 24\n        break;\n      case 'hours':\n        div *= 60\n        break;\n      case 'minutes':\n        div *= 60\n        break;\n      case 'seconds':\n        div *= 1000\n        break;\n    }\n\n    return ms / div\n  },\n\n  week(date) {\n    var d = new Date(date)\n    d.setHours(0, 0, 0)\n    d.setDate(d.getDate() + 4 - (d.getDay() || 7))\n    return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7)\n  },\n\n  today() {\n    return dates.startOf(new Date(), 'day')\n  },\n\n  yesterday() {\n    return dates.add(dates.startOf(new Date(), 'day'), -1, 'day')\n  },\n\n  tomorrow() {\n    return dates.add(dates.startOf(new Date(), 'day'), 1, 'day')\n  },\n}\nexport let CalendarDates = dates;\n\nexport const patientAppointments = [{\n  appointment_time: '12:00 PM',\n  appointment_date: '03/03/2019',\n  patient_Name: 'Yusef Trowell',\n  patient_Email: 'ytrowell@gmail.com',\n  assigned_To: {\n    photo: Doctor4,\n    clinicians_Name: 'Debbie Allen'\n  },\n  service: 'Speech Therapy',\n  duration: '30min',\n  status: 'Approved'\n},\n{\n  appointment_time: '3:00 PM',\n  appointment_date: '01/03/2019',\n  patient_Name: 'Yusef Trowell',\n  patient_Email: 'ytrowell@gmail.com',\n  assigned_To: {\n    photo: Doctor4,\n    clinicians_Name: 'Max Payne'\n  },\n  service: 'Medical',\n  duration: '90min',\n  status: 'Pending'\n}, {\n  appointment_time: '09:00 AM',\n  appointment_date: '12/12/2017',\n  patient_Name: 'Yusef Trowell',\n  patient_Email: 'ytrowell@gmail.com',\n  assigned_To: {\n    photo: Doctor4,\n    clinicians_Name: 'Keith Adams'\n  },\n  service: 'Medidtation',\n  duration: '60min',\n  status: 'Approved'\n}];\n\nexport const listOfPatients = [\n  Patient1MockData,\n  Patient2MockData,\n  Patient3MockData,\n  Patient4MockData,\n  Patient5MockData,\n];\n\nexport const clinicianAppointments = [{\n  appointment_time: '12:00 PM',\n  appointment_date: '03/03/2019',\n  patient_Name: 'Yusef Trowell',\n  patient_Email: 'ytrowell@gmail.com',\n  assigned_To: {\n    photo: Headshot2,\n    clinicians_Name: 'Max Payne'\n  },\n  service: 'Speech Therapy',\n  duration: '30min',\n  status: 'Approved'\n},\n{\n  appointment_time: '3:00 PM',\n  appointment_date: '01/03/2019',\n  patient_Name: 'Destiny Vargas',\n  patient_Email: 'dvargas@gmail.com',\n  assigned_To: {\n    photo: Headshot2,\n    clinicians_Name: 'Max Payne'\n  },\n  service: 'Medical',\n  duration: '90min',\n  status: 'Pending'\n}, {\n  appointment_time: '09:00 AM',\n  appointment_date: '12/12/2017',\n  patient_Name: 'Keith Edwards',\n  patient_Email: 'KeithEdwards@gmail.com',\n  assigned_To: {\n    photo: Headshot2,\n    clinicians_Name: 'Max Payne'\n  },\n  service: 'Medidtation',\n  duration: '60min',\n  status: 'Approved'\n}]\n\n\nexport const randomHeadShot = () => {\n  const headShots = [Headshot1, Headshot2, Headshot3, Headshot4, Headshot5, Headshot6, Headshot7, Headshot8]\n  return headShots[Math.floor(Math.random()*headShots.length)];\n}\nexport const randomDoctor = () => {\n  const headShots = [Doctor1, Doctor2, Doctor3, Doctor4, Doctor5, Doctor6, Doctor7, Doctor8]\n  return headShots[Math.floor(Math.random()*headShots.length)];\n}","/*\n * Patient Actions\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your types\n * 2) Add a function like this:\n *    export yourAction = (var || var, var) => ({\n *        type: YOUR_ACTION_TYPE,\n *        payload: var || payload: { var, var}\n *    });\n */\nimport { PatientPageActionTypes } from './types';\n/**\n * Changes the input field of the form\n * @return {string}    An action object with a type of CHANGE_USERNAME\n */\nexport const getPatientData = (id) => ({\n  type: PatientPageActionTypes.GET_PATIENT_DATA_FOR_EPIC,\n  payload: id,\n});\n\n\nexport const patientDataSuccess = (response) => ({\n  type: PatientPageActionTypes.GET_PATIENT_DATA_SUCCESS,\n  payload: response,\n});\n\nexport const patientDataError = (error) => ({\n  type: PatientPageActionTypes.GET_PATIENT_DATA_ERROR,\n  payload: error,\n});\n\n\n\n/**\n * Changes the input field of the form\n * @return {string}    An action object with a type of CHANGE_USERNAME\n */\nexport const updatePatientData = (payload) => ({\n  type: PatientPageActionTypes.UPDATE_PATIENT_FOR_EPIC,\n  payload: payload,\n});\n\nexport const updatePatientDataError = (error) => ({\n  type: PatientPageActionTypes.UPDATE_PATIENT_ERROR,\n  payload: error,\n});\n\n/**\n * Changes the input field of the form\n * @return {string}    An action object with a type of CHANGE_USERNAME\n */\nexport const createPatient = (payload) => ({\n  type: PatientPageActionTypes.CREATE_PATIENT_FOR_EPIC,\n  payload: payload,\n});\n\nexport const createPatientError = (error) => ({\n  type: PatientPageActionTypes.CREATE_PATIENT_ERROR,\n  payload: error,\n});\n","/**\n * returns true if the input is a string, flase if its not..\n * @param {*} s \n * @returns {boolean}\n */\nexport const isString = (s) => {\n\tif (!nullOrUndefined(s) && typeof s === 'string') {\n\t\treturn true;\n\t} else {\n\t\treturn true;\n\t}\n};\n\n/**\n * returns a true if the input is an array, else returns false.\n * @param {*} x \n * @returns {boolean}\n */\nexport const isArray = (x) => {\n\treturn !nullOrUndefined(x) && Array.isArray(x);\n};\n\n/**\n * returns ture if the input is a function, false if not.\n * @param {*} y \n * @returns {boolean}\n */\nexport const isFunction = (y) => {\n\treturn !nullOrUndefined(y) && {}.toString.call(y) === '[object Function]';\n};\n\n/**\n * returns true if the input is a string, throws an error if its not.\n * @param {*} s \n */\nexport const validateString = (s) => {\n\treturn true;\n};\n\n/**\n * turns true if the input is an array, throws an error if it is not.\n * @param {*} x \n * @returns {boolean}\n */\nexport const validateArray = (x) => {\n\tif (isArray(x)) {\n\t\treturn true;\n\t} else {\n\t\tthrow ' this input is not an array.';\n\t}\n};\n\n/**\n * returns true if the input is an object, throws an error if it is not.\n * @param {*} y \n * @returns {boolean}\n */\nexport const validateObject = (y) => {\n\treturn typeof y === 'object';\n};\n\nexport const nullOrUndefined = (s) => {\n\treturn s === null || s === undefined;\n};\n","import * as validators from './validators';\n\n/**\n * Request service that can be reused / injected in each component, that will implement http requests.\n *\n * @example implement request service (see request.mock.js for how to add mocking)\n * // This should only be called from within epics in the store (dispatch fetch / query actions)\n * import { Request } from './utils/request/request.js';\n * const request = new Request();\n * request.get('https://fakeendpoint/API/v2/search').then( data => {\n//  *   console.log(data);\n *  });\n */\nclass Request {\n\t/**\n   * method for making GET requests\n   * @param {string}} url\n   * @param {FetchOptions} options\n   * @return Promise\n   */\n\tget(url, options) {\n\t\toptions = this.setDefaultOptions(options);\n\t\toptions.method = 'GET';\n\t\treturn this.request(url, options);\n\t}\n\n\t/**\n   * method for making POST requests\n   * @param {string} url\n   * @param {FetchOptions} options\n   */\n\tpost(url, options) {\n\t\toptions = this.setDefaultOptions(options);\n\t\toptions.method = 'POST';\n\t\treturn this.request(url, options);\n\t}\n\n\t/**\n   * method for making PUT requests\n   * @param {string} url\n   * @param {FetchOptions} options\n   */\n\tput(url, options) {\n\t\toptions = this.setDefaultOptions(options);\n\t\toptions.method = 'PUT';\n\t\treturn this.request(url, options);\n\t}\n\n\t/**\n   * method for making DELETE requests\n   * @param {string} url\n   * @param {FetchOptions} options\n   */\n\tdelete(url, options) {\n\t\toptions = this.setDefaultOptions(options);\n\t\toptions.method = 'DELETE';\n\t\treturn this.request(url, options);\n\t}\n\n\t/**\n   * method for making any type of http request\n   * @param {string} url\n   * @param {FetchOptions} options\n   */\n\trequest(url, options) {\n\t\tthis.validateRequestInputs(url, options);\n\t\toptions = this.setDefaultOptions(options);\n\t\turl = this.addParams(url, options.params);\n\t\t/*\n\t\ttry {\n\t\t\tconst data = await axios({\n\t\t\t\t...options,\n\t\t\t\tparams: undefined,\n\t\t\t\turl: url\n\t\t\t})\n\t\t\treturn data.data;\n\t\t} catch(err) {\n\t\t\treturn err;\n\t\t}\n    */\n\t\treturn this.fetch(url, options);\n\t}\n\n\tasync fetch(url, options) {\n\t\ttry {\n\t\t\tconst response = await fetch(url, options);\n\t\t\tconst bodyText = await response.text();\n\t\t\tconst data =\n\n\t\t\t\t\tbodyText && bodyText != '' ? JSON.parse(bodyText) :\n\t\t\t\t\t{};\n\t\t\treturn this.onSuccess(data);\n\t\t} catch (err) {\n\t\t\treturn this.onRequestError(err);\n\t\t}\n\t}\n\n\t/**\n   * createParmString acceps object of params into string\n   * @param { {[s: string]: string} } params\n   * @returns { string }\n   */\n\tcreateParamString(params) {\n\t\tconst paramArray = Object.keys(params).map((k) => {\n\t\t\treturn `${k}=${params[k]}`;\n\t\t});\n\t\treturn '?' + paramArray.join('&');\n\t}\n\n\t/**\n   * Adds object of parameters to the proviced url string\n   * @param {string} url\n   * @param { {[s: string]: string} } params\n   */\n\taddParams(url, params) {\n\t\tif (params) {\n\t\t\t// strip any params already in url\n\t\t\turl = url.split('?')[0];\n\t\t\t// add params\n\t\t\treturn `${url}${this.createParamString(params)}`;\n\t\t} else {\n\t\t\treturn url;\n\t\t}\n\t}\n\n\t/**\n   * sets the default options send with ALL http requests.\n   * @param {Object} options\n   */\n\tsetDefaultOptions(options) {\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tvalidators.validateObject(options);\n\t\toptions.headers = this.setDefaultHeaders(options.headers);\n\t\treturn options;\n\t}\n\n\tsetDefaultHeaders(headers) {\n\t\tif (!headers) {\n\t\t\theaders = {};\n\t\t}\n\t\theaders['Content-Type'] = 'application/json; charset=utf-8';\n\t\theaders['Accept'] = 'application/json';\n\t\theaders['Accept-Language'] = 'en-US,en;q=0.9';\n\t\treturn headers;\n\t}\n\n\t/**\n   * Validates all input data before making a request.\n   * @param {*} url\n   * @param {*} options\n   */\n\tvalidateRequestInputs(url, options) {\n\t\tif (options) {\n\t\t\tvalidators.validateObject(options);\n\t\t}\n\t\tvalidators.validateString(url);\n\t}\n\n\t/**\n   * handle error from http request\n   * @param {*} error\n   */\n\tonRequestError(error) {\n\t\treturn Promise.reject(error);\n\t}\n\n\t/**\n   * Successful Response handler\n   * @param {*} data\n   */\n\tonSuccess(data) {\n\t\treturn Promise.resolve(data);\n\t}\n}\n\nexport const request = new Request();\n","import styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport { Button } from '@material-ui/core';\n\nexport const PatientCardWrapper = styled(Card)`\n  min-height: auto;\n  height: ${({ heights }) => heights ? heights :\n\t\t'100%'}!important;\n  max-width: ${({ maxwidths }) => maxwidths}!important;\n  min-width: ${({ minwidths }) => minwidths}!important;\n  width: ${({ widths }) => widths}!important;\n  background-color: var(--color-white)!important;\n  display: flex;\n  flex-flow: column wrap;\n  margin: ${({ margins }) => margins}!important;\n  padding: ${({ paddings }) =>\n\t\tpaddings ? paddings :\n\t\t\t'20px'}};\n  margin-right: 65px;\n  border-radius: ${({ bordersradius }) =>\n\n\t\tbordersradius ? bordersradius :\n\t\t\t'0px'}!important;\n  box-shadow: ${({ boxshadows }) =>\n\n\t\t!boxshadows ? 'none' :\n\t\t\t''}!important;\n  justify-content: ${({ justify }) => justify}!important;\n}\n  li {\n    height: ${({ liheight }) => liheight}!important;\n\t}\n\t\n  .MuiListItem-root-127{\n   text-align:center;\n  }\n  .MuiListItem-gutters-135{\n    padding: 0 !important\n  }\n\n  .MuiList-root-120 li:first-child{\n    margin-right: 18px\n  }\n\n  section{\n    margin-bottom: -8%\n  }\n  \n  .MuiInputBase-root-198{\n    background-color: #F2F3F5;\n    margin-bottom: 30px;\n    border-radius: 5px;\n    width:90%;\n    padding: .8% .5%;\n  }\n\n  .MuiTypography-subheading-153{\n    font-weight: bold;\n  }\n\n.MuiInputBase-root-205{\n  border: black 1px solid;\n  border-radius: 5px;\n  padding: 5px;\n width:100%; \n margin-bottom: 2%;\n}\n\n\n  @media only screen and (max-width: 600px) and (min-width: 400px){\n    padding: 10px;\n    width: ${({ mediawidths }) => mediawidths}!important;\n    margin: ${({ mediamargins }) => mediamargins}!important;\n  }\n`;\nexport const PatientSubHeader = styled(Card)`\n  min-height: 50px;\n  height: 100%;\n  background-color: var(--color-white) !important;\n  display: flex;\n  flex-flow: column wrap;\n  padding: 20px;\n  margin-right: 65px;\n  border-radius: 0px !important;\n  box-shadow: none !important;\n  @media only screen and (max-width: 600px) and (min-width: 400px){\n    padding: 10px;\n  }\n`;\nexport const PatientCardInformationWrapper = styled.div`\n\tdisplay: flex;\n\tflex-flow: row wrap;\n\tjustify-content: space-between;\n`;\nexport const PatientHeaderWrapper = styled.div`\n  height: auto;\n  background-color: var(--color-white) !important;\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  margin-right: 65px;\n  border-radius: 0px !important;\n  box-shadow: none !important;\n  margin-bottom: 3px;\n  @media only screen and (max-width: 600px) and (min-width: 400px){\n    margin-right: 50px!important;\n   }\n`;\nexport const PatientAppointmentStatusWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: ${({ justify }) =>\n\n\t\tjustify ? justify :\n\t\t\t'center'}!important;\n\talign-items: ${({ align }) =>\n\n\t\talign ? align :\n\t\t\t''}!important;\n\tflex-flow: ${({ flexsflow }) =>\n\n\t\tflexsflow ? flexsflow :\n\t\t\t'column wrap'}!important;\n\tbackground-color: ${({ backgroundscolor }) => backgroundscolor}!important;\n\theight: ${({ heights }) => heights}!important;\n\twidth: ${({ widths }) => widths}!important;\n\tbox-shadow: ${({ boxshadow }) => boxshadow}!important;\n\tcolor: ${({ colors }) =>\n\n\t\tcolors ? colors :\n\t\t\t'var(--color-grey-text)'}!important;\n\tborder-radius: ${({ bordersradius }) => bordersradius}!important;\n\tfont-size: ${({ fontssize }) =>\n\n\t\tfontssize ? fontssize :\n\t\t\t'11px'}!important;\n\tmargin: ${({ margins }) => margins}!important;\n\tborder: ${({ borders }) => borders} !important;\n\tmargin-top: ${({ marginsTop }) =>\n\n\t\tmarginsTop ? marginsTop :\n\t\t\t' -10px 0'}!important;\n\tfont-weight: ${({ fontsweight }) => fontsweight}!important;\n\t@media only screen and (max-width: 1029px) and (min-width: 400px) {\n\t\twidth: ${({ mediawidths }) => mediawidths}!important;\n\t\tjustify-content: ${({ mediajustify }) => mediajustify}!important;\n\t\tflex-flow: ${({ mediaflexsflow }) => mediaflexsflow}!important;\n\t\talign-items: ${({ mediaalign }) => mediaalign}!important;\n\t\tmargin: ${({ mediamargins }) => mediamargins}!important;\n\t}\n`;\nexport const PatientProfileCard = styled(Card)`\n  display: flex;\n  justify-content: flex-start !important;\n  align-items: center !important;\n  flex-flow: column wrap !important;\n  height: 600px !important;\n  width: 300px !important;\n  box-shadow: none !important;\n  color: var(--color-grey-text) !important;\n  font-size: 11px !important;\n  margin: 40px 20px 40px 0 !important;\n  margin-top: -10px 0 !important;\n  @media only screen and (max-width: 1029px) and (min-width: 400px){\n    width: ${({ mediawidths }) => mediawidths}!important;\n    justify-content:${({ mediajustify }) => mediajustify}!important;\n    flex-flow: ${({ mediaflexsflow }) => mediaflexsflow}!important;\n    align-items:${({ mediaalign }) => mediaalign}!important;\n    margin: ${({ mediamargins }) => mediamargins}!important;\n  }\n`;\nexport const PatientCardButtonWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-end;\n\tpadding: 28px 10px 0 10px;\n`;\n\nexport const PatientCardRow = styled.div`\n\tmargin-top: 30px;\n\tbackground-color: ${({ backgroundscolor }) => backgroundscolor}!important;\n\theight: ${({ heights }) => heights}!important;\n\twidth: ${({ widths }) => widths}!important;\n\tbox-shadow: ${({ boxshadow }) => boxshadow}!important;\n\tcolor: ${({ colors }) =>\n\n\t\tcolors ? colors :\n\t\t\t'var(--color-black-text)'}!important;\n\tborder-radius: ${({ bordersradius }) => bordersradius}!important;\n\tfont-size: ${({ fontssize }) =>\n\n\t\tfontssize ? fontssize :\n\t\t\t'11px'}!important;\n\tmargin: ${({ margins }) => margins}!important;\n\tborder: ${({ borders }) => borders} !important;\n\tmargin-top: ${({ marginsTop }) =>\n\n\t\tmarginsTop ? marginsTop :\n\t\t\t'30px'}!important;\n\tfont-weight: ${({ fontsweight }) => fontsweight}!important;\n`;\nexport const ImageCard = styled.div`\n\tdisplay: flex;\n\tjustify-content: center !important;\n\tflex-flow: column wrap !important;\n\tbackground-color: grey !important;\n\theight: 275px !important;\n\twidth: 300px !important;\n\tcolor: var(--color-grey-text) !important;\n\tfont-size: 11px !important;\n\tbackground-image: ${({ src }) => `url(${src})`}!important;\n\tbackground-size: cover !important;\n\t@media only screen and (max-width: 1029px) and (min-width: 400px) {\n\t\twidth: ${({ mediawidths }) => mediawidths}!important;\n\t\tjustify-content: ${({ mediajustify }) => mediajustify}!important;\n\t\tflex-flow: ${({ mediaflexsflow }) => mediaflexsflow}!important;\n\t\talign-items: ${({ mediaalign }) => mediaalign}!important;\n\t\tmargin: ${({ mediamargins }) => mediamargins}!important;\n\t}\n`;\n\nexport const ProfileSettingsWrapper = styled.div`\n\tdisplay: flex;\n\tflex-flow: column nowrap;\n\twidth: 100%;\n\tpadding-right: 5px;\n`;\n\nProfileSettingsWrapper.Name = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\theight: 60px;\n\twidth: 100%;\n\tfont-size: 20px;\n\tborder-bottom: 1px solid var(--color-grey-text-light);\n\tpadding-left: 40px;\n\tcolor: black;\n\tfont-weight: bold;\n`;\n\nProfileSettingsWrapper.Details = styled.div`\n\tdisplay: flex;\n\tflex-flow: column nowrap;\n\tpadding-left: 40px;\n\th4 {\n\t\tcolor: rgba(128, 128, 128, .5);\n\t\tfont-size: 13px;\n\t\tmargin-bottom: 10px;\n\t}\n`;\n\nexport const PatientCardButton = styled(Button)`\n  display: flex;\n  width: 100%;\n  height: 40px;\n  justify-content: flex-start !important;\n  margin-left: -10px !important;\n  padding-left: 10px !important;\n  margin-bottom: 10px !important;\n  background-color: ${({ backgroundscolor }) =>\n\n\t\tbackgroundscolor ? 'var(--color-primary)' :\n\t\t\t''}!important;\n  color: ${({ colors }) =>\n\n\t\tcolors ? 'var(--color-secondary)' :\n\t\t\t''} !important;\n`;\n","import styled from 'styled-components';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport InputTextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\n\nexport const FormHeader = styled.div`\n  display: flex;\n  height: 65px !important;\n  width: 100% !important;\n  flex-flow: column nowrap!important;\n  align-items: flex-start;\n  padding-left: 20px;\n  border-bottom: 1px solid var(--color-grey-text-light);\n\n  h1{\n    margin: 0px;\n    font-size: 18px;\n  }\n  p{\n    margin: 10px 0;\n    color: var(--color-grey-text);\n    font-size: 12px;\n    padding-right: 10px;\n    @media only screen and (max-width: 1029px) and (min-width: 400px){\n     font-size: 10px; \n    }\n`;\nexport const FormBody = styled.div`\n  display: flex;\n  padding: 20px !important;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const FormRow = styled.div`\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    width: 100%;\n    @media only screen and (max-width: 1029px) and (min-width: 400px){\n        flex-flow: row wrap;\n       }\n`;\nexport const FormColumn = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n    justify: center;\n    width: 100%;\n    margin: ${({ margins }) => (margins ? margins : '')};\n    h3 {\n        white-space: nowrap;\n    }\n    @media only screen and (max-width: 1029px) and (min-width: 400px){\n        margin: 0px; \n       }\n`;\n\nexport const StyledInputTextField = styled(InputTextField)`\n  height: 40px;\n  width: ${({ widths }) => (widths ? widths : '100%')} !important;\n  max-width: '100%;\n  min-width: '100%;\n  label {\n      margin-top: -5px;  \n      display: flex;\n      align-items: center;\n  }\n  div {\n    height: ${({ heights }) => (heights ? heights : '40px')} !important;\n  }\n  input{\n    \n    color: var(--color-grey-text)!important;\n  }\n`;\nexport const StyledInputTextArea = styled(InputTextField)`\n  width: ${({ widths }) => (widths ? widths : '100%')} !important;\n  max-width: '100%;\n  min-width: '100%;\n  height: 35%;\n  label {\n      margin-top: -5px;  \n      display: flex;\n      align-items: center;\n  }\n  input{\n    color: var(--color-grey-text)!important;\n  }\n`;\n\nexport const StyledDropdownField = styled(Select)`\n  border: 1px solid rgba(0, 0, 0, 0.25) !important;\n  height: 40px !important;\n  border-radius: 4px !important;\n  width:${({ widths }) => (widths ? widths : '100%')} !important;\n  div {\n      div{\n        padding-left: 10px;\n      }\n  }\n:before {\n    border-color: transparent !important;\n}\n:after {\n    border-color: var(--color-primary) !important;\n}\n`;\nexport const InvisibleDiv = styled.div`\n\ndiv:first-child {\n    margin: 0;\n    width: 100%;\n    color: var(--color-grey-text);\n    height: 40px;\n}\n\n`\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1665d8'\n    },\n  },\n  typography: { useNextVariants: true },\n});\n\nexport const dateOptions = {\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n}","import styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\n\nexport const StyledButton = styled(Button)`\nbackground-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\nheight: ${({ heights }) => (heights)}!important;\nwidth: ${({ widths }) => (widths)}!important;\nbox-shadow: ${({ boxshadow }) => (boxshadow)}!important;\ncolor: ${({ colors }) => (colors)}!important;\nborder-radius: ${({ bordersradius }) => (bordersradius)}!important;\nfont-size: ${({ fontssize }) => (fontssize)}!important;\nmargin: ${({ margins }) => (margins)}!important;\nborder: ${({ borders }) => (borders)} !important;\nline-height: ${({ linesheight }) => (linesheight)} !important;\npadding:  ${({ paddings }) => (paddings)} !important;\nflex-basis: ${({ flexsbasis }) => (flexsbasis)} !important;\njustify-content: ${({ justifyContent }) => (justifyContent)} !important;\n\n\n}\n@media only screen and (max-width: 1029px) and (min-width: 400px){\n    min-width: ${({ mediaminwidths }) => (mediaminwidths)}!important;\n   }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputBase from '@material-ui/core/InputBase';\nimport { PatientCardWrapper, PatientCardButton } from '../../styled-components/PatientCard/patient-card-styled';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\n\nimport { StyledInputTextField, FormRow, FormColumn } from '../../styled-components/Forms/forms-styled';\nimport { StyledButton } from \"../../styled-components/Buttons/buttons-styled\";\nimport { randomHeadShot } from \"../../mock-data/\";\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderColor: '#000000',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit * 3,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n\n});\n\nconst flexContainer = {\n  display: 'flex',\n  flexFlow: 'row',\n  padding: '10px 0 0 0 ',\n  maxHeight: '75px',\n}\n\n\nconst appointmentTime = {\n  backgroundColor: '#d9d9d9',\n  maxWidth: '75px',\n  fontWeight: 'bold',\n  fontSize: '12px',\n  padding: '3px',\n  // textAlign: 'center'\n}\n\n\nconst PatientAppointments = ({ props, patientAppointments, emailAddress, service, clinician, classes }) => (\n  < React.Fragment>\n    <PatientCardWrapper>\n\n      <FormRow>\n        <FormColumn>\n          <StyledInputTextField placeholder=\"Search for Customers, Employees, Services...\" variant=\"outlined\" type=\"input\" name=\"Search\" />\n        </FormColumn>\n      </FormRow>\n\n      {/* <Grid container> */}\n      <Grid item xs={12} >\n        <div>\n          <List style={flexContainer}>\n            <ListItem>\n              <ListItemText primary=\"\"\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemText\n                primary=\"PATIENT:\" />\n            </ListItem>\n            <ListItem>\n              <ListItemText\n                primary=\"ASSIGNED TO:\" />\n            </ListItem>\n\n            <ListItem>\n              <ListItemText\n                primary=\"SERVICE:\" />\n            </ListItem>\n\n            <ListItem>\n              <ListItemText\n                primary=\"DURATION:\" />\n            </ListItem>\n\n            <ListItem>\n              <ListItemText\n                primary=\"STATUS:\" />\n            </ListItem>\n            <ListItem>\n              <ListItemText\n                primary=\"\"\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemText\n                primary=\"\"\n              />\n            </ListItem>\n\n          </List>\n        </div>\n      </Grid>\n    </PatientCardWrapper>\n    <br />\n    {\n      patientAppointments.map((appointment, index) => (\n        <React.Fragment key={index}>\n          <p>{'3/21/19'}</p>\n          <PatientCardWrapper liheight={'50px'} justify={'center'} paddings={'10px 20px'}>\n            <List style={flexContainer} key={index}>\n              <ListItem>\n                <ListItemText style={appointmentTime}\n                  primary={'12:00'} />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                  primary={appointment.patient_Name} />\n              </ListItem>\n              <ListItem>\n                <Avatar src={randomHeadShot()} />\n                <ListItemText\n                  primary={appointment.assigned_To.clinicians_Name} />\n              </ListItem>\n\n              <ListItem>\n                <ListItemText\n                  primary={appointment.service} />\n              </ListItem>\n\n              <ListItem>\n                <ListItemText\n                  primary={appointment.duration} />\n              </ListItem>\n              <ListItem>\n                {appointment.status === 'Approved' && <p style={{ color: 'var(--color-green' }}>{appointment.status}</p>}\n                {appointment.status === 'Waiting' && <p style={{ color: 'var(--color-pending' }}>{\"Pending\"}</p>}\n                {appointment.status === 'Cancelled' && <p style={{ color: 'var(--color-error' }}>{appointment.status}</p>}\n              </ListItem>\n              <ListItem>\n                <StyledButton\n                  backgroundscolor={\"var(--color-error)\"}\n                  widths={\"80%\"}\n                  colors={\"var(--color-white)\"}\n                >\n                  Cancel\n            </StyledButton>\n              </ListItem>\n              <ListItem>\n                <StyledButton\n                  backgroundscolor={\"var(--color-green)\"}\n                  widths={\"80%\"}\n                  colors={\"var(--color-white)\"}\n                  onClick={() => window.open('https://zoom.us/j/3395255861')}\n                >\n                  Start\n            </StyledButton>\n              </ListItem>\n\n            </List>\n            &nbsp;\n          </PatientCardWrapper>\n        </React.Fragment>\n      ))}\n  </React.Fragment >\n)\n\nPatientAppointments.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n// export default PatientAppointments;\nexport default withStyles(styles)(PatientAppointments);\n\n\n\n","/*\n * App Actions\n * These actions are dispatch for the App to load it's initial state\n * Shouldn't be too many actions in this file.\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your constant\n * 2) Add a function like this:\n *    export yourAction = (var || var, var) => ({\n *        type: YOUR_ACTION_TYPE,\n *        payload: var || payload: { var, var}\n *    });\n */\n\nimport { AppActionTypes } from './types';\n\n/**\n * Load the app and it's contents, this action starts the request epic\n * @return {object} An action object with a type of LOAD_APP\n */\nexport const loadApp = () => ({\n  type: AppActionTypes.LOAD_APP,\n});\n\n/**\n * Dispatched when loading the app succeeds\n * @return {object} An action object with a type ofAPP_LOADED_SUCCESS\n */\nexport const appLoadedSuccess = () => ({\n  type: AppActionTypes.APP_LOADED_SUCCESS,\n});\n\n/**\n * Dispatched when loading the app fails\n * @param  {object} error The error\n * @return {object} An action object with a type of APP_LOADED_ERROR passing the error\n */\nexport const appLoadedError = (error) => ({\n  type: AppActionTypes.APP_LOADED_ERROR,\n  payload: error\n});\n\n/**\n * Changes the input field of the form\n * @param  {string} next_page The new page to navigate to\n * @return {object}    An action object with a type of CHANGE_CURRENT_PAGE\n */\nexport const changePage = (next_page) => ({\n  type: AppActionTypes.CHANGE_CURRENT_PAGE,\n  payload: next_page\n});","import {\n\tPatient1MockData,\n\tPatient2MockData,\n\tPatient3MockData,\n\tPatient4MockData,\n\tPatient5MockData\n} from '../../../mock-data';\nimport { PatientPageActionTypes } from './types';\nimport { patientDataSuccess, patientDataError, getPatientData } from './actions';\nimport { combineEpics, ofType } from 'redux-observable';\nimport { switchMap, catchError, startWith } from 'rxjs/operators';\nimport { defer, Observable } from 'rxjs';\nimport { request } from '../../../utils/request';\nimport patientAppointments from '../../../components/Patients/patient-appointments';\nimport { changePage } from '../../App/redux/actions';\nimport { Current, Role } from '../../../utils/constants';\n\nconst getPatientDatas = (state, id) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\t//TODO: Put real request when API is ready\n\t\t\tlet data = await request.get(`http://www.globalmentality.net/api/Patients/${id}`, {\n\t\t\t\t// body: JSON.stringify(update),\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\n\t\t\tconsole.log(data);\n\t\t\tconst patients = [\n\t\t\t\tPatient1MockData.picture,\n\t\t\t\tPatient2MockData.picture,\n\t\t\t\tPatient3MockData.picture,\n\t\t\t\tPatient4MockData.picture,\n\t\t\t\tPatient5MockData.picture\n\t\t\t];\n\t\t\tconst randomPatientPicture = patients[Math.floor(Math.random() * patients.length)];\n\n\t\t\tdata.picture = randomPatientPicture;\n\n\t\t\tobserver.next(patientDataSuccess(data));\n\t\t\tif (state.config.userRole === Role.Clinician) {\n\t\t\t\tobserver.next(changePage(Current.PatientProfile));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tobserver.next(patientDataError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\nconst getPatientAppointments = (state, id) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\tlet data = await request.get(`http://www.globalmentality.net/api/Patients/${id}/appointments`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\t\t\tconsole.log(data);\n\n\t\t\t// observer.next(patientAppointmentsSuccess(data));\n\t\t} catch (err) {\n\t\t\t// observer.next(patientAppointmentsError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\n// -- UPDATE\nconst updatePatientData = (state, payload) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\tconsole.log('In Update: ', payload);\n\t\t\t//TODO: Put real request when API is ready\n\t\t\tlet data = await request.put(`http://www.globalmentality.net/api/Patients/${payload.id}`, {\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\t\t\tconsole.log(data);\n\n\t\t\tobserver.next(getPatientData(payload.id));\n\t\t} catch (err) {\n\t\t\tobserver.next(patientDataError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\nconst updatePatientAppointments = (state, payload) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\tlet data = await request.put(`http://www.globalmentality.net/api/Appointments/${payload.id}`, {\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\t\t\tconsole.log(data);\n\n\t\t\t// observer.next(patientAppointmentsSuccess(data));\n\t\t} catch (err) {\n\t\t\t// observer.next(patientAppointmentsError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\n// -- CREATE\nconst createPatientData = (state, payload) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\t//TODO: Put real request when API is ready\n\t\t\tlet data = await request.post(`http://www.globalmentality.net/api/Patients`, {\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\t\t\tconsole.log(data);\n\t\t\tconst patients = [\n\t\t\t\tPatient1MockData.picture,\n\t\t\t\tPatient2MockData.picture,\n\t\t\t\tPatient3MockData.picture,\n\t\t\t\tPatient4MockData.picture,\n\t\t\t\tPatient5MockData.picture\n\t\t\t];\n\t\t\tconst randomPatientPicture = patients[Math.floor(Math.random() * patients.length)];\n\n\t\t\tdata.picture = randomPatientPicture;\n\t\t\tdata.dateOfBirth = 'Januaray 12, 1990';\n\n\t\t\tobserver.next(patientDataSuccess(data));\n\t\t} catch (err) {\n\t\t\tobserver.next(patientDataError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\nconst createPatientAppointments = (state, payload) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\tlet data = await request.post(`http://www.globalmentality.net/api/Appointments`, {\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\t\t\tconsole.log(data);\n\n\t\t\t// observer.next(patientAppointmentsSuccess(data));\n\t\t} catch (err) {\n\t\t\t// observer.next(patientAppointmentsError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\n// GET\nconst patientDataGetEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(PatientPageActionTypes.GET_PATIENT_DATA_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => getPatientDatas(state$.value, payload)))\n\t);\n\nconst patientAppointmentsGetEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(PatientPageActionTypes.GET_PATIENT_APPOINTMENTS_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => getPatientAppointments(state$.value, payload)))\n\t);\n\n//PUT\nconst patientDataPutEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(PatientPageActionTypes.UPDATE_PATIENT_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => updatePatientData(state$.value, payload)))\n\t);\n\nconst patientAppointmentsPutEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(PatientPageActionTypes.UPDATE_PATIENT_APPOINTMENTS_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => updatePatientAppointments(state$.value, payload)))\n\t);\n\n//POST\nconst patientDataPostEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(PatientPageActionTypes.CREATE_PATIENT_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => createPatientData(state$.value, payload)))\n\t);\n\nconst patientAppointmentsPostEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(PatientPageActionTypes.CREATE_PATIENT_APPOINTMENTS_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => createPatientAppointments(state$.value, payload)))\n\t);\n\nexport const PatientEpic = combineEpics(\n\tpatientDataGetEpic,\n\tpatientAppointmentsGetEpic,\n\tpatientDataPutEpic,\n\tpatientAppointmentsPutEpic,\n\tpatientDataPostEpic,\n\tpatientAppointmentsPostEpic\n);\n","/*\n * Clinician Actions\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your types\n * 2) Add a function like this:\n *    export yourAction = (var || var, var) => ({\n *        type: YOUR_ACTION_TYPE,\n *        payload: var || payload: { var, var}\n *    });\n */\nimport { ClinicianPageActionTypes } from './types';\n\n/**\n * Changes the input field of the form\n * @return {string}    An action object with a type of \n */\nexport const getClinicianData = (id) => ({\n  type: ClinicianPageActionTypes.GET_CLINICIAN_DATA_FOR_EPIC,\n  payload: id,\n});\n\n\nexport const clinicianDataSuccess = (response) => ({\n  type: ClinicianPageActionTypes.GET_CLINICIAN_DATA_SUCCESS,\n  payload: response,\n});\n\nexport const clinicianDataError = (error) => ({\n  type: ClinicianPageActionTypes.GET_CLINICIAN_DATA_ERROR,\n  payload: error,\n});\n\n\n\n/**\n * Changes the input field of the form\n * @return {string}    An action object with a type of\n */\nexport const updateClinicianData = (payload) => ({\n  type: ClinicianPageActionTypes.UPDATE_CLINICIAN_FOR_EPIC,\n  payload: payload,\n});\n\nexport const updateClinicianDataError = (error) => ({\n  type: ClinicianPageActionTypes.UPDATE_CLINICIAN_ERROR,\n  payload: error,\n});\n\n/**\n * Changes the input field of the form\n * @return {string}    An action object with a type of \n */\nexport const createClinician = (payload) => ({\n  type: ClinicianPageActionTypes.CREATE_CLINICIAN_FOR_EPIC,\n  payload: payload,\n});\n\nexport const createClinicianError = (error) => ({\n  type: ClinicianPageActionTypes.CREATE_CLINICIAN_ERROR,\n  payload: error,\n});\n\n\nexport const getPatientList = (id) => ({\n  type: ClinicianPageActionTypes.GET_PATIENT_LIST_FOR_EPIC,\n  payload: id\n})\n\nexport const getPatientListSuccess = (listArray) => ({\n  type: ClinicianPageActionTypes.GET_PATIENT_LIST_SUCCESS,\n  payload: listArray\n})\nexport const getPatientListError = (error) => ({\n  type: ClinicianPageActionTypes.GET_PATIENT_LIST_ERROR,\n  payload: error\n});\n\nexport const getClinicianAppointments = (id) => ({\n  type: ClinicianPageActionTypes.GET_CLINICIAN_APPOINTMENTS_FOR_EPIC,\n  payload: id\n});\n\n\nexport const clinicianAppointmentsSuccess = (response) => ({\n  type: ClinicianPageActionTypes.GET_CLINICIAN_APPOINTMENTS_SUCCESS,\n  payload: response,\n});\n\nexport const clinicianAppointmentsError = (error) => ({\n  type: ClinicianPageActionTypes.GET_CLINICIAN_APPOINTMENTS_ERROR,\n  payload: error,\n});\n\n\nexport const createClinicianAppointment = (payload) => ({\n  type: ClinicianPageActionTypes.CREATE_CLINICIAN_APPOINTMENT_FOR_EPIC,\n  payload: payload\n})\n","import { Clinician1MockData, Clinician2MockData, Clinician3MockData, Clinician4MockData } from '../../../mock-data';\n\nimport { ClinicianPageActionTypes } from './types';\nimport {\n\tclinicianDataSuccess,\n\tclinicianDataError,\n\tgetClinicianData,\n\tgetPatientList,\n\tgetPatientListSuccess,\n\tgetPatientListError,\n\tgetClinicianAppointments,\n\tclinicianAppointmentsSuccess,\n\tclinicianAppointmentsError\n} from './actions';\nimport { combineEpics, ofType } from 'redux-observable';\nimport { switchMap, catchError, startWith } from 'rxjs/operators';\nimport { defer, Observable } from 'rxjs';\nimport { request } from '../../../utils/request';\n\nconst getClinicianDatas = (state, id) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\t//TODO: Put real request when API is ready\n\t\t\tlet data = await request.get(`http://www.globalmentality.net/api/Clinicians/${id}`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\t\t\tobserver.next(clinicianDataSuccess(data));\n\t\t\tobserver.next(getClinicianAppointments(id));\n\t\t\tobserver.next(getPatientList(id));\n\t\t} catch (err) {\n\t\t\tobserver.next(clinicianDataError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\nconst getClinicianAppointment = (state, id) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\tlet data = await request.get(`http://www.globalmentality.net/api/Clinicians/${id}/appointments`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\t\t\tconsole.log(data);\n\n\t\t\tobserver.next(clinicianAppointmentsSuccess(data));\n\t\t} catch (err) {\n\t\t\tobserver.next(clinicianAppointmentsError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\n// -- UPDATE\nconst updateClinicianData = (state, payload) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\tconsole.log('In Update: ', payload);\n\t\t\t//TODO: Put real request when API is ready\n\t\t\tlet data = await request.put(`http://www.globalmentality.net/api/Clinicians`, {\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\n\t\t\tobserver.next(getClinicianData(payload.id));\n\t\t} catch (err) {\n\t\t\tobserver.next(clinicianDataError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\nconst updateClinicianAppointments = (state, payload) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\tlet data = await request.put(`http://www.globalmentality.net/api/Appointments/${payload.id}`, {\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\t\t\tconsole.log(data);\n\n\t\t\t// observer.next(clinicianAppointmentsSuccess(data));\n\t\t} catch (err) {\n\t\t\t// observer.next(clinicianAppointmentsError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\n// -- CREATE\nconst createClinicianData = (state, payload) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\t//TODO: Put real request when API is ready\n\t\t\tlet data = await request.post(`http://www.globalmentality.net/api/Clinicians`, {\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\t\t\tconsole.log(data);\n\t\t\t// const patients = [Patient1MockData.picture, Patient2MockData.picture, Patient3MockData.picture, Patient4MockData.picture, Patient5MockData.picture]\n\t\t\t// const randomPatientPicture = patients[Math.floor(Math.random()*patients.length)];\n\n\t\t\t// data.picture = randomPatientPicture;\n\t\t\t// data.dateOfBirth = 'Januaray 12, 1990';\n\n\t\t\tobserver.next(clinicianDataSuccess(data));\n\t\t} catch (err) {\n\t\t\tobserver.next(clinicianDataError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\nconst createClinicianAppointments = (state, payload) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\tpayload.duration = parseInt(payload.duration);\n\n\t\t\tconsole.log(payload);\n\t\t\tlet data = await request.post(`http://www.globalmentality.net/api/Appointments`, {\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\t\t\tconsole.log(data);\n\n\t\t\t// observer.next(clinicianAppointmentsSuccess(data));\n\t\t} catch (err) {\n\t\t\t// observer.next(clinicianAppointmentsError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\nconst getClinicianPatientList = (state, id) =>\n\tObservable.create(async (observer) => {\n\t\ttry {\n\t\t\tlet data = await request.get(`http://www.globalmentality.net/api/Clinicians/${id}/patients`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t//TODO: Auth Here\n\t\t\t\t}\n\t\t\t\t//params: params,\n\t\t\t});\n\t\t\tconsole.log(data);\n\n\t\t\tobserver.next(getPatientListSuccess(data));\n\t\t} catch (err) {\n\t\t\tobserver.next(getPatientListError(err));\n\t\t} finally {\n\t\t\tobserver.complete();\n\t\t}\n\t});\n\n// GET\nconst clinicianDataGetEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(ClinicianPageActionTypes.GET_CLINICIAN_DATA_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => getClinicianDatas(state$.value, payload)))\n\t);\n\nconst clinicianAppointmentsGetEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(ClinicianPageActionTypes.GET_CLINICIAN_APPOINTMENTS_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => getClinicianAppointment(state$.value, payload)))\n\t);\n\n//PUT\nconst clinicianDataPutEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(ClinicianPageActionTypes.UPDATE_CLINICIAN_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => updateClinicianData(state$.value, payload)))\n\t);\n\nconst clinicianAppointmentsPutEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(ClinicianPageActionTypes.UPDATE_CLINICIAN_APPOINTMENTS_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => updateClinicianAppointments(state$.value, payload)))\n\t);\n\n//POST\nconst clinicianDataPostEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(ClinicianPageActionTypes.CREATE_CLINICIAN_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => createClinicianData(state$.value, payload)))\n\t);\n\nconst clinicianAppointmentsPostEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(ClinicianPageActionTypes.CREATE_CLINICIAN_APPOINTMENT_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => createClinicianAppointments(state$.value, payload)))\n\t);\n\n// Patient List\nconst getPatientListEpic = (action$, state$) =>\n\taction$.pipe(\n\t\tofType(ClinicianPageActionTypes.GET_PATIENT_LIST_FOR_EPIC),\n\t\tswitchMap(({ payload }) => defer(() => getClinicianPatientList(state$.value, payload)))\n\t);\n\nexport const ClinicianEpic = combineEpics(\n\tclinicianDataGetEpic,\n\tclinicianAppointmentsGetEpic,\n\tclinicianDataPutEpic,\n\tclinicianAppointmentsPutEpic,\n\tclinicianDataPostEpic,\n\tclinicianAppointmentsPostEpic,\n\tgetPatientListEpic\n);\n","import { combineEpics } from 'redux-observable';\nimport { PatientEpic } from './containers/PatientPage/redux/epic';\nimport { ClinicianEpic } from './containers/ClinicianPage/redux/epic';\n\n// Epics\nexport const rootEpic = combineEpics(\n    PatientEpic,\n    ClinicianEpic,\n);\n","/**\n * The global state selectors\n */\n\nimport { createSelector } from 'reselect';\n//Regular Selectors\nexport const getCurrentPage = (state) => state.global.current;\nexport const getUserRole = (state) => state.config.userRole;\n\nconst selectGlobal = (state) => state.get('global');\n\nconst selectRoute = (state) => state.get('route');\n\nconst makeSelectCurrentUser = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.get('currentUser')\n);\n\nconst makeSelectLoading = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.get('loading')\n);\n\nconst makeSelectError = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.get('error')\n);\n\nconst makeSelectLocation = () => createSelector(\n  selectRoute,\n  (routeState) => routeState.get('location').toJS()\n);\n\nexport {\n  selectGlobal,\n  makeSelectCurrentUser,\n  makeSelectLoading,\n  makeSelectError,\n  makeSelectLocation,\n};\n","import styled from 'styled-components';\nimport AppBar from '@material-ui/core/AppBar';\n\nexport const HeaderWrapper = styled(AppBar)`\n  height: 50px;\n  width: calc(100vw - 200px);\n  background-color: var(--color-secondary) !important;\n  position: relative !important;\n  box-shadow: none !important;\n  padding: 0px !important;\n  margin: 0;\n  div:first-child {\n    padding: 0px !important;\n    box-shadow: none !important;\n    height: 50px;\n    min-height: 50px !important;\n  }\n`;\n","import styled from 'styled-components';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Menu from '@material-ui/icons/Menu';\n\nexport const StyledEditIcon = styled(EditIcon)`\nbackground-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\nheight: ${({ heights }) => (heights)}!important;\nwidth: ${({ widths }) => (widths)}!important;\nbox-shadow: ${({ boxshadow }) => (boxshadow)}!important;\ncolor: ${({ colors }) => (colors)}!important;\nborder-radius: ${({ bordersradius }) => (bordersradius)}!important;\nfont-size: ${({ fontssize }) => (fontssize)}!important;\nmargin: ${({ margins }) => (margins)}!important;\nborder: ${({ borders }) => (borders)} !important;\n`;\n\nexport const StyledAccountCircleIcon = styled(AccountCircle)`\nbackground-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\nheight: ${({ heights }) => (heights)}!important;\nwidth: ${({ widths }) => (widths)}!important;\nbox-shadow: ${({ boxshadow }) => (boxshadow)}!important;\ncolor: ${({ colors }) => (colors)}!important;\nborder-radius: ${({ bordersradius }) => (bordersradius)}!important;\nfont-size: ${({ fontssize }) => (fontssize)}!important;\nmargin: ${({ margins }) => (margins)}!important;\nborder: ${({ borders }) => (borders)} !important;\n`;\n\nexport const StyledMoreVertIcon = styled(Menu)`\nbackground-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\nheight: ${({ heights }) => (heights)}!important;\nwidth: ${({ widths }) => (widths)}!important;\nbox-shadow: ${({ boxshadow }) => (boxshadow)}!important;\ncolor: ${({ colors }) => (colors)}!important;\nborder-radius: ${({ bordersradius }) => (bordersradius)}!important;\nfont-size: ${({ fontssize }) => (fontssize)}!important;\nmargin: ${({ margins }) => (margins)}!important;\nborder: ${({ borders }) => (borders)} !important;\n`;\n","import styled from 'styled-components';\n\nexport const SideMenuWrapper = styled.div`\n  height: 100vh;\n  width: 250px;\n  position: fixed;\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 0;\n  top: 0;\n  left: 0;\n  background-color: var(--color-white) !important;\n  box-shadow: none !important;\n  div:first-child {\n    padding: 0px !important;\n    box-shadow: none !important;\n  }\n  p{\n    padding-left: 20px;\n  }\n  a{\n    color:black;\n  }\n\n  li {\n    display: flex;\n    justify-content: center;\n  }\n\n\n  @media only screen and (max-width: 600px) and (min-width: 400px){\n    display: none;\n    padding: 20px;\n    align-items: center;\n  }\n`;\n\nexport const SideMenuSettings = styled.div`\n  justify-content: flex-end;\n  text-align:center;\n  position: fixed;\n  bottom: 2%;\n  left:100px;\n`;\n","import styled from 'styled-components';\nimport Divider from '@material-ui/core/Divider';\n\n\nexport const StyledDivider = styled(Divider)`\n  background-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\n  height: ${({ heights }) => (heights)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  box-shadow: ${({ boxshadow }) => (boxshadow)}!important;\n  color: ${({ colors }) => (colors)}!important;\n  border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n  font-size: ${({ fontssize }) => (fontssize)}!important;\n  margin: ${({ margins }) => (margins)}!important;\n  padding: ${({ paddings }) => (paddings)}!important;\n  display: ${({ displays }) => (displays)}!important;\n  @media only screen and (max-width: 1029px) and (min-width: 400px){\n    display: ${({ mediadisplays }) => (mediadisplays)}!important;\n  }\n`;","/*\n * ClinicianSideMenu\n * Condiditonal based on usertype doctor\n */\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { styles } from './style';\n\n//Material UI\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {\n\tAssignmentTurnedIn,\n\tDateRange,\n\tChat,\n\tHome,\n\tPerson,\n\tSettings,\n\tAssessment,\n\tVideoCam,\n\tBallot,\n\tPeople\n} from '@material-ui/icons';\n//Styled\nimport Logo from '../../../images/global-mentality-icon.svg';\nimport { SideMenuWrapper } from '../../../styled-components/SideMenu/side-menu-styled';\nimport { StyledDivider } from '../../../styled-components/Divider/divider-styled';\nimport SVG from 'react-inlinesvg';\n\nimport { Current } from '../../../utils/constants';\n\nclass ClinicianSideMenu extends Component { // eslint-disable-line react/prefer-stateless-function\n\n\trender() {\n\t\tconst { changePage, currentPage, classes } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div>\n\t\t\t\t\t<img src={Logo} className={classes.img} />\n\t\t\t\t\t{/* Only problem that I have with  */}\n\t\t\t\t\t{/* <SVG src={Logo} className={classes.img} /> */}\n\t\t\t\t</div>\n\n\t\t\t\t<SideMenuWrapper>\n\t\t\t\t\t<SVG src={Logo} />\n\t\t\t\t</SideMenuWrapper>\n\n\t\t\t\t<MenuList className={classes.menuList}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h3 className={classes.heading}>Menu</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<MenuItem selected={currentPage === Current.Dashboard} className={classes.menuItem} ref={this.dashboardRef} onClick={() => changePage(Current.Dashboard)}>\n\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\n\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText classes={{ primary: classes.primary }} inset primary=\"Dashboard\" />\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<MenuItem selected={currentPage === Current.Appointments} className={classes.menuItem} onClick={() => changePage(Current.Appointments)}>\n\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\n\t\t\t\t\t\t\t<AssignmentTurnedIn />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText classes={{ primary: classes.primary }} inset primary=\"Appointments\" />\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<MenuItem selected={currentPage === Current.Calendar} className={classes.menuItem} onClick={() => changePage(Current.Calendar)}>\n\t\t\t\t\t\t<ListItemIcon className={classes.icon} >\n\t\t\t\t\t\t\t<DateRange />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText classes={{ primary: classes.primary }} inset primary=\"Calendar\" />\n\t\t\t\t\t</MenuItem >\n\t\t\t\t\t<MenuItem selected={currentPage === Current.Services} className={classes.menuItem} onClick={() => changePage(Current.Services)}>\n\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\n\t\t\t\t\t\t\t<Chat />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText classes={{ primary: classes.primary }} inset primary=\"Services\" />\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<MenuItem selected={currentPage === Current.Patients} className={classes.menuItem} onClick={() => changePage(Current.Patients)}>\n\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\n\t\t\t\t\t\t\t<Ballot />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText classes={{ primary: classes.primary }} inset primary=\"Patients\" />\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t{/* <MenuItem className={classes.menuItem} onClick={() => changePage(Current.Personnel)}>\n\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\n\t\t\t\t\t\t\t<People />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText classes={{ primary: classes.primary }} inset primary='Personnel' />\n\t\t\t\t\t</MenuItem> */}\n\t\t\t\t\t<MenuItem className={classes.menuItem} onClick={() => changePage(Current.Settings)}>\n\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\n\t\t\t\t\t\t\t<Settings />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText classes={{ primary: classes.primary }} inset primary=\"Settings\" />\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<StyledDivider heights={'1px'} backgroundscolor={'var(--color-secondary)'} variant={'middle'} />\n\t\t\t\t\t<MenuItem selected={currentPage === Current.ClinicianProfile} className={classes.menuItem} onClick={() => changePage(Current.ClinicianProfile)}>\n\t\t\t\t\t\t<ListItemIcon className={classes.icon}>\n\t\t\t\t\t\t\t<Person />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText classes={{ primary: classes.primary }} primary=\"Profile\" />\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<StyledDivider heights={'1px'} backgroundscolor={'var(--color-secondary)'} variant={'middle'} />\n\t\t\t\t\t<MenuItem style={{ paddingLeft: '20px' }}>\n\t\t\t\t\t\t<ListItemText primary=\"Invite friends\" />\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<MenuItem style={{ paddingLeft: '20px' }}>\n\t\t\t\t\t\t<ListItemText primary=\"Help & Support\" />\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<MenuItem style={{ paddingLeft: '20px' }}>\n\t\t\t\t\t\t<ListItemText primary=\"Feedback\" />\n\t\t\t\t\t</MenuItem>\n\t\t\t\t</MenuList>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nClinicianSideMenu.propTypes = {\n\tclasses: PropTypes.any\n};\n\nexport default withStyles(styles)(ClinicianSideMenu)\n","import { Autorenew } from \"@material-ui/icons\";\n\nexport const styles = theme => ({\n    menuItem: {\n        '&:focus': {\n            backgroundColor: 'var(--color-primary)',\n            '& $primary, & $icon': {\n                color: 'var(--color-white)',\n            },\n        },\n    },\n    primary: {},\n    icon: {},\n    img: {\n        // padding: '20px',\n        margin: '10% 40%',\n        marginBottom: '-15%'\n    },\n    heading: {\n        marginLeft: '8%',\n\n    },\n});","/*\n * PatientSideMenu\n *  Condiditonal based on usertype doctor\n */\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport { StyledDivider } from '../../../styled-components/Divider/divider-styled';\nimport { AssignmentTurnedIn, DateRange, Chat, Home, Person } from '@material-ui/icons';\nimport { SideMenuWrapper } from '../../../styled-components/SideMenu/side-menu-styled';\nimport Logo from '../../../images/global-mentality-icon.svg';\nimport { styles } from './style';\nimport SVG from 'react-inlinesvg';\n\nimport { Current } from '../../../utils/constants';\nclass PatientSideMenu extends Component { // eslint-disable-line react/prefer-stateless-function\n\n\n    render() {\n        const { classes, changePage, currentPage } = this.props;\n        return (\n            <Fragment>\n                <div>\n                    <img src={Logo} className={classes.img} />\n                    {/* Only problem that I have with  */}\n                    {/* <SVG src={Logo} className={classes.img} /> */}\n                </div>\n\n                <SideMenuWrapper>\n                    <SVG src={Logo} />\n                </SideMenuWrapper>\n\n                <MenuList className={classes.menuList}>\n                    <div>\n                        <h3 className={classes.heading}>Menu</h3>\n                    </div>\n                    <MenuItem selected={currentPage === Current.Dashboard} className={classes.menuItem} onClick={() => changePage(Current.Dashboard)}>\n                        <ListItemIcon className={classes.icon}>\n                            <Home />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Dashboard\" />\n                    </MenuItem>\n                    <MenuItem selected={currentPage === Current.Appointments} className={classes.menuItem} onClick={() => changePage(Current.Appointments)}>\n                        <ListItemIcon className={classes.icon}>\n                            <AssignmentTurnedIn />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Appointments\" />\n                    </MenuItem>\n                    <MenuItem selected={currentPage === Current.Calendar} className={classes.menuItem} onClick={() => changePage(Current.Calendar)}>\n                        <ListItemIcon className={classes.icon}>\n                            <DateRange />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Calendar\" />\n                    </MenuItem>\n                    <MenuItem selected={currentPage === Current.Messaging} className={classes.menuItem} onClick={() => changePage(Current.Messaging)}>\n                        <ListItemIcon className={classes.icon}>\n                            <Chat />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} inset primary=\"Messaging\" />\n                    </MenuItem>\n\n                    <StyledDivider heights={'1px'} backgroundscolor={'var(--color-secondary)'} variant={'middle'} />\n\n                    <MenuItem selected={currentPage === Current.PatientProfile} className={classes.menuItem} onClick={() => changePage(Current.PatientProfile)}>\n                        <ListItemIcon className={classes.icon}>\n                            <Person />\n                        </ListItemIcon>\n                        <ListItemText classes={{ primary: classes.primary }} primary=\"Profile\" />\n                    </MenuItem>\n\n                    <StyledDivider heights={'1px'} backgroundscolor={'var(--color-secondary)'} variant={'middle'} />\n                    <MenuItem style={{ paddingLeft: '20px' }}>\n                        <ListItemText primary=\"Invite friends\" />\n                    </MenuItem>\n                    <MenuItem style={{ paddingLeft: '20px' }}>\n                        <ListItemText primary=\"Help & Support\" />\n                    </MenuItem>\n                    <MenuItem style={{ paddingLeft: '20px' }}>\n                        <ListItemText primary=\"Feedback\" />\n                    </MenuItem>\n                </MenuList>\n\n            </Fragment >\n        );\n    }\n}\n\nPatientSideMenu.propTypes = {\n    classes: PropTypes.any\n};\n\nexport default withStyles(styles)(PatientSideMenu)\n","import { Autorenew } from '@material-ui/icons';\n\nexport const styles = (theme) => ({\n\tmenuItem: {\n\t\t'&:focus': {\n\t\t\tbackgroundColor: 'var(--color-blue)',\n\t\t\tcolor: 'var(--color-white)',\n\t\t\t'& $primary, & $icon': {\n\t\t\t\tcolor: 'var(--color-white)'\n\t\t\t}\n\t\t},\n\t\t'&:blur': {\n\t\t\tcolor: 'var(--color-white)'\n\t\t},\n\t\tselected: {\n\t\t\tcolor: 'white'\n\t\t}\n\t},\n\n\tprimary: {},\n\ticon: {},\n\timg: {\n\t\t// padding: '20px',\n\t\tmargin: '10% 40%',\n\t\tmarginBottom: '-15%'\n\t},\n\theading: {\n\t\tmarginLeft: '8%'\n\t}\n});\n","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { styles } from './style';\nimport { Role } from '../../utils/constants';\n//Material UI Items\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\n//Styled Components\nimport { HeaderWrapper } from '../../styled-components/Header/header-styled';\nimport { StyledButton } from '../../styled-components/Buttons/buttons-styled';\nimport { StyledMoreVertIcon } from '../../styled-components/Icons/icons-styled';\n//Components\nimport ClinicianSideMenu from '../../components/Clinicians/ClinicianSideMenu';\nimport PatientSideMenu from '../../components/Patients/PatientSideMenu/PatientSideMenu';\n\nclass Header extends Component {\n\t// eslint-disable-line react/prefer-stateless-function\n\tstate = {\n\t\tanchorEl: null,\n\t\tmobileMoreAnchorEl: null,\n\t\tmobileOpen: false\n\t};\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('resize', this.handleMobileMenuClose);\n\t}\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('resize', this.handleMobileMenuClose);\n\t}\n\thandleMenuClose = () => {\n\t\tthis.setState({ anchorEl: null });\n\t\tthis.handleMobileMenuClose();\n\t};\n\n\thandleMobileMenuClose = () => {\n\t\tif (window.innerWidth >= 600 && this.state.mobileOpen) {\n\t\t\tthis.setState({ mobileOpen: false });\n\t\t}\n\t};\n\n\thandleDrawerToggle = () => {\n\t\tthis.setState((state) => ({ mobileOpen: !state.mobileOpen }));\n\t};\n\n\trender() {\n\t\tconst { anchorEl, mobileMoreAnchorEl } = this.state;\n\t\tconst { classes, changePage, currentProfile, currentPage, userRole } = this.props;\n\t\tconst isMenuOpen = Boolean(anchorEl);\n\n\t\tconst isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n\t\tconst renderMenu = (\n\t\t\t<Menu\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\t\ttransformOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\t\topen={isMenuOpen}\n\t\t\t\tonClose={this.handleMenuClose}\n\t\t\t>\n\t\t\t\t<MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\n\t\t\t\t<MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n\t\t\t</Menu>\n\t\t);\n\t\tconst sideMenu = (\n\t\t\t<div>\n\t\t\t\t{userRole == Role.Clinician && (\n\t\t\t\t\t<ClinicianSideMenu changePage={changePage} currentPage={currentPage} userRole={userRole} />\n\t\t\t\t)}\n\t\t\t\t{userRole == Role.Patient && (\n\t\t\t\t\t<PatientSideMenu changePage={changePage} currentPage={currentPage} userRole={userRole} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<HeaderWrapper>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<div className={classes.grow} />\n\t\t\t\t\t\t<div className={classes.sectionDesktop}>\n\t\t\t\t\t\t\t<StyledButton\n\t\t\t\t\t\t\t\tbackgroundscolor={\n\t\t\t\t\t\t\t\t\tuserRole == Role.Patient ? 'var(--color-primary)' :\n\t\t\t\t\t\t\t\t\t\t'var(--color-green)'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcolors={'var(--color-secondary)'}\n\t\t\t\t\t\t\t\twidths={'50px'}\n\t\t\t\t\t\t\t\theights={'50px'}\n\t\t\t\t\t\t\t\tbordersradius={'0px'}\n\t\t\t\t\t\t\t\tfontssize={'10px'}\n\t\t\t\t\t\t\t\tmargins={'0'}\n\t\t\t\t\t\t\t\tonClick={() => changePage(currentProfile)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AccountCircle />\n\t\t\t\t\t\t\t</StyledButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={classes.sectionMobile}>\n\t\t\t\t\t\t\t<StyledButton\n\t\t\t\t\t\t\t\tbackgroundscolor={\n\t\t\t\t\t\t\t\t\tuserRole == Role.Patient ? 'var(--color-primary)' :\n\t\t\t\t\t\t\t\t\t\t'var(--color-green)'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcolors={'var(--color-secondary)'}\n\t\t\t\t\t\t\t\twidths={'50px'}\n\t\t\t\t\t\t\t\theights={'50px'}\n\t\t\t\t\t\t\t\tbordersradius={'0px'}\n\t\t\t\t\t\t\t\tfontssize={'10px'}\n\t\t\t\t\t\t\t\tmargins={'0'}\n\t\t\t\t\t\t\t\tmediaminwidths={'50px'}\n\t\t\t\t\t\t\t\t// onClick={this.handleMobileMenuOpen}\n\t\t\t\t\t\t\t\tonClick={this.handleDrawerToggle}\n\t\t\t\t\t\t\t\taria-haspopup='true'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<StyledMoreVertIcon colors={'var(--color-secondary)'} />\n\t\t\t\t\t\t\t</StyledButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</HeaderWrapper>\n\n\t\t\t\t<nav className={classes.drawer}>\n\t\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n\t\t\t\t\t<Hidden smUp implementation='css'>\n\t\t\t\t\t\t<Drawer\n\t\t\t\t\t\t\tcontainer={this.props.container}\n\t\t\t\t\t\t\tvariant='temporary'\n\t\t\t\t\t\t\tanchor='right'\n\t\t\t\t\t\t\topen={this.state.mobileOpen}\n\t\t\t\t\t\t\tonClose={this.handleDrawerToggle}\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{sideMenu}\n\t\t\t\t\t\t</Drawer>\n\t\t\t\t\t</Hidden>\n\t\t\t\t</nav>\n\t\t\t\t{renderMenu}\n\t\t\t\t{/* {renderMobileMenu} */}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\nHeader.propTypes = {\n\tclasses: PropTypes.any\n};\nexport default withStyles(styles)(Header);\n","export const styles = (theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  title: {\n    display: 'block',\n    marginLeft: '20px',\n    fontSize: '12px',\n    color: 'var(--color-secondary)',\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n});\n","/*\n * PatientPage\n * This is the first thing users see of our App, at the '/' route\n */\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\n// import Drawer from '@material-ui/core/Drawer';\nimport PatientSideMenu from '../../components/Patients/PatientSideMenu/PatientSideMenu';\nimport ClinicianSideMenu from '../../components/Clinicians/ClinicianSideMenu/ClinicianSideMenu';\nimport { SideMenuWrapper } from '../../styled-components/SideMenu/side-menu-styled';\nimport { Role } from '../../utils/constants';\n\nexport default class SideMenu extends Component {\n\t// eslint-disable-line react/prefer-stateless-function\n\n\tstate = {\n\t\topen: true\n\t};\n\tcomponentDidMount() {\n\t\twindow.addEventListener('screenSize', this.handleDrawerOpen);\n\t\tif (window.innerWidth >= 600) {\n\t\t\tthis.setState({ open: true });\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('screenSize', this.handleDrawerOpen);\n\t}\n\thandleDrawerOpen = () => {\n\t\tif (window.innerWidth >= 600) {\n\t\t\tthis.setState({ open: true });\n\t\t} else {\n\t\t\tthis.setState({ open: false });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { open } = this.state;\n\t\tconst { changePage, currentPage, userRole } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<SideMenuWrapper>\n\t\t\t\t\t{/* <ClinicianSideMenu currentPage={currentPage} changePage={changePage} /> */}\n\n\t\t\t\t\t{userRole === Role.Patient && <PatientSideMenu currentPage={currentPage} changePage={changePage} />}\n\t\t\t\t\t{userRole === Role.Clinician && (\n\t\t\t\t\t\t<ClinicianSideMenu currentPage={currentPage} changePage={changePage} />\n\t\t\t\t\t)}\n\t\t\t\t\t{/* UPDATE USER ROLES for OfficeAdmin and SuperAdmin below */}\n\t\t\t\t\t{userRole === Role.OfficeAdmin && (\n\t\t\t\t\t\t<ClinicianSideMenu currentPage={currentPage} changePage={changePage} />\n\t\t\t\t\t)}\n\t\t\t\t\t{userRole === Role.SuperAdmin && (\n\t\t\t\t\t\t<ClinicianSideMenu currentPage={currentPage} changePage={changePage} />\n\t\t\t\t\t)}\n\t\t\t\t</SideMenuWrapper>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nSideMenu.propTypes = {};\n","import styled from 'styled-components';\nimport Avatar from '@material-ui/core/Avatar';\n\nexport const ProfileCardWrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  background-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\n  height: ${({ heights }) => (heights)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  box-shadow: ${({ boxshadow }) => (boxshadow)}!important;\n  color: ${({ colors }) => (colors)}!important;\n  border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n  font-size: ${({ fontssize }) => (fontssize)}!important;\n  margin: ${({ margins }) => (margins)}!important;\n  border: ${({ borders }) => (borders)} !important;\n  border-bottom: ${({ bordersbottom }) => (bordersbottom)} !important;\n  border-left: ${({ bordersleft }) => (bordersleft)} !important;\n  border-right: ${({ bordersright }) => (bordersright)} !important;\n  border-top: ${({ borderstop }) => (borderstop)} !important;\n  @media only screen and (max-width: 1029px) and (min-width: 400px){\n    width: ${({ mediawidths }) => (mediawidths)}!important;\n    justify-content:${({ mediajustify }) => (mediajustify)}!important;\n    align-items:${({ mediaalign }) => (mediaalign)}!important;\n    border-right:${({ mediabordersright }) => (mediabordersright)}!important;\n    border-bottom:${({ mediabordersbottom }) => (mediabordersbottom)}!important;\n  }\n`;\n\nexport const StyledAvator = styled(Avatar)`\n  background-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\n  height: ${({ heights }) => (heights)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  box-shadow: ${({ boxshadow }) => (boxshadow)}!important;\n  color: ${({ colors }) => (colors)}!important;\n  border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n  font-size: ${({ fontssize }) => (fontssize)}!important;\n  margin: ${({ margins }) => (margins)}!important;\n  border: ${({ borders }) => (borders)} !important;\n`;\n\nexport const RandomAvatorColor = () => {\n    let x = Math.floor(Math.random() * 256);\n    let y = Math.floor(Math.random() * 256);\n    let z = Math.floor(Math.random() * 256);\n    return \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PatientCardRow,\n  PatientAppointmentStatusWrapper,\n  PatientHeaderWrapper\n} from '../../../styled-components/PatientCard/patient-card-styled';\nimport {\n  StyledAvator,\n  RandomAvatorColor,\n  ProfileCardWrapper\n} from '../../../styled-components/Profile/profile-card-styled';\nimport { StyledButton } from '../../../styled-components/Buttons/buttons-styled';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Add } from '@material-ui/icons';\nimport { Current } from '../../../utils/constants';\n\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport { Formik, Form, Field } from 'formik';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport { StyledInputTextField, StyledDropdownField, FormHeader, FormBody, FormRow, FormColumn, theme, StyledInputTextArea } from '../../../styled-components/Forms/forms-styled';\nimport { StyledDivider } from '../../../styled-components/Divider/divider-styled';\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n});\n\nclass PatientHeader extends React.Component {\n  state = {\n    open: false,\n\n  };\n\n  handleClose = () => {\n    console.log('close header')\n    this.setState({ open: false });\n\n  };\n  handleChange = (e, name, fn) => {\n    this.setState({ [name]: e.target.value }, () => fn(e));\n  };\n\n  formSubmission = (values) => {\n    console.log(values);\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    console.log('close')\n    this.setState({ open: false });\n    React.cloneElement.open = false\n  };\n\n  render() {\n    const { duration, service, assigned } = this.state;\n    const { classes, currentPage, patientList, open } = this.props;\n    return (\n\n      <PatientHeaderWrapper>\n        <h2 style={{ margin: '0 15px 0 20px', fontWeight: 'normal', fontSize: '1.1875rem' }}>Company</h2>\n        <h1 style={{ marginTop: '15px', fontWeight: '100' }} >|</h1>\n        <h2 style={{ marginLeft: '15px', fontWeight: 'normal', fontSize: '1.1875rem' }}>\t{currentPage.charAt(0).toUpperCase() + currentPage.slice(1)}</h2>\n\n        {currentPage === Current.Appointments && (\n\n          <StyledButton\n            backgroundscolor={\"var(--color-blue)\"}\n            widths={\"150px\"}\n            fontssize={'.9em'}\n            colors={\"var(--color-white)\"}\n            // flexsbasis={'calc(100% / 2)'}\n            // justifyContent={'flex-end'}\n            style={{ margin: '0 20px 10px auto', }}\n            onClick={() => this.setState({ open: true })}\n          >\n            New Appointment\n            {/* <Add /> */}\n          </StyledButton>\n        )\n        }\n        {/* {this.state.open && <AppointmentModal open patientList={patientList}></AppointmentModal>} */}\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div style={getModalStyle()} className={classes.paper}>\n            <FormHeader>\n              <h1>Schedule Appointment</h1>\n              <StyledDivider />\n            </FormHeader>\n            <FormBody>\n              <Formik\n                initialValues={{\n                  assigned: '',\n                  service: '',\n                  duration: '',\n                  description: ''\n                }}\n                // validationSchema={validationSchema}\n                onSubmit={this.formSubmission}\n              >\n                {({ values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting, }) => (\n                    <Form>\n                      <MuiThemeProvider theme={theme}>\n                        <FormRow>\n                          <FormColumn>\n                            <h3>ASSIGNED TO:</h3>\n                            <StyledDropdownField\n                              value={values.assigned}\n                              variant=\"outlined\"\n                              type='input'\n                              onChange={(e) => this.handleChange(e, 'assigned', handleChange)} onBlur={handleBlur}\n                              name=\"assigned\"\n                            >\n                              <MenuItem value={\"Max Payne\"}>Max Payne</MenuItem>\n                              <MenuItem value={'Kelly Price'}>Kelly Price</MenuItem>\n                              <MenuItem value={'Beyonce Knowles'}>Beyonce Knowles</MenuItem>\n                            </StyledDropdownField>\n                          </FormColumn>\n                        </FormRow>\n                        <FormRow>\n                          <FormColumn>\n                            <h3>SERVICE TYPE:</h3>\n                            <StyledDropdownField\n                              value={values.service}\n                              variant=\"outlined\"\n                              type='input'\n                              onChange={(e) => this.handleChange(e, 'service', handleChange)} onBlur={handleBlur}\n                              name=\"service\"\n                            >\n                              <MenuItem value={'Consultation Service'}>Consultation Service</MenuItem>\n                              <MenuItem value={'Therapy Service'}>Therapy Service</MenuItem>\n                              <MenuItem value={'Medical Service'}>Medical Service</MenuItem>\n                            </StyledDropdownField>\n                          </FormColumn>\n                        </FormRow>\n\n                        <FormRow>\n                          <FormColumn margins='0 20px 0 0'>\n                            <h3>REQUESTED SERVICE DURATION:</h3>\n                            <StyledInputTextField\n                              variant=\"outlined\"\n                              type=\"input\"\n                              name=\"duration\"\n                              placeholder=\"15, 30, 60 minutes\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.duration}\n                              width={\"100%\"}\n                            />\n                          </FormColumn>\n                        </FormRow>\n                        <FormRow>\n                          <FormColumn margins='0 20px 0 0'>\n                            <h3>DESCRIPTION</h3>\n                            <StyledInputTextArea placeholder=\"Use this space to describe the reason for this appointment\" onChange={handleChange} onBlur={handleBlur} value={values.description} variant=\"outlined\" type=\"input\" fullWidth name=\"description\" />\n                          </FormColumn>\n                        </FormRow>\n                        &nbsp;\n                                     <StyledDivider />\n                        <StyledButton\n                          margins={'20px 0'}\n                          backgroundscolor={'var(--color-white)'}\n                          borders={\"1px solid black\"}\n                          colors={'var(--color-black-text)'}\n                          heights={'40px'}\n                          linesheight={'20px'}\n                          onClick={this.handleClose}\n                        >\n                          CANCEL\n                                            </StyledButton>\n                        <StyledButton\n                          margins={'20px 60px'}\n                          backgroundscolor={'var(--color-green)'}\n                          colors={'var(--color-white)'}\n                          heights={'40px'}\n                          linesheight={'20px'}\n                          //  style={{ marginLeft: '60%' }}\n                          onClick={handleSubmit}\n                        >\n                          CONFIRM\n                                            </StyledButton>\n                      </MuiThemeProvider>\n                    </Form>\n                  )}\n              </Formik>\n            </FormBody>\n          </div>\n        </Modal>\n      </PatientHeaderWrapper>\n    )\n  }\n};\n\nPatientHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\nconst ModalWrapped = withStyles(styles)(PatientHeader);\nexport default ModalWrapped;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PatientCardWrapper, PatientCardButtonWrapper } from '../../styled-components/PatientCard/patient-card-styled';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { StyledInputTextField, FormRow, FormColumn } from '../../styled-components/Forms/forms-styled';\nimport { StyledButton } from \"../../styled-components/Buttons/buttons-styled\";\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { randomHeadShot } from \"../../mock-data/\";\n\nconst styles = {\n    card: {\n        minWidth: 250,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n};\n\nconst appointmentTime = {\n    backgroundColor: '#d9d9d9',\n    maxWidth: '75px',\n    fontWeight: 'bold',\n    fontSize: '12px',\n    padding: '3px',\n    // textAlign: 'center'\n}\n\n\nconst PatientAppointmentsMobile = ({ props, patientAppointments, emailAddress, service, clinician, classes }) => (\n    < React.Fragment>\n        <PatientCardWrapper>\n            <FormRow>\n                <FormColumn>\n                    <StyledInputTextField placeholder=\"Search for Customers, Employees, Services...\" variant=\"outlined\" type=\"input\" name=\"Search\" />\n                </FormColumn>\n            </FormRow>\n        </PatientCardWrapper>\n        &nbsp;\n        {\n            patientAppointments.map((appointment, index) => (\n                <React.Fragment key={index}>\n                    <div>\n                        {'3/21/19'}\n                    </div>\n                    <PatientCardWrapper>\n\n                        <Card className={classes.card} key={index}>\n                            <CardContent>\n                                <div>\n                                    <p style={appointmentTime}>\n                                        {'12:00'}\n                                    </p>\n                                </div>\n                                <div>\n                                    <p>\n                                        <strong>\n                                            Patient Name: </strong>\n                                        {appointment.patient_Name}\n\n                                    </p>\n                                    {/* <p>\n                                        <strong>\n                                            Patient Email: </strong> {appointment.patient_Email}\n                                    </p> */}\n                                </div>\n                                <div>\n                                    <p><strong>Clinician: </strong>\n                                        <img src={randomHeadShot()} width='40' />\n                                        {appointment.assigned_To.clinicians_Name}</p>\n                                </div>\n                                <div>\n                                    <p><strong>Service: </strong>\n                                        {appointment.service}\n                                    </p>\n                                </div>\n                                <div>\n                                    <p><strong>Duration: </strong>\n                                        {appointment.duration}\n                                    </p>\n                                </div>\n                                <div>\n                                    {appointment.status === 'Approved' && <p><strong>Status: </strong><span style={{ color: 'var(--color-green' }}>{appointment.status}</span></p>}\n                                    {appointment.status === 'Waiting' && <p><strong>Status: </strong><span style={{ color: 'var(--color-pending' }}>{\"Pending\"}</span></p>}\n                                    {appointment.status === 'Cancelled' && <p><strong>Status: </strong><span style={{ color: 'var(--color-pending' }}>{appointment.status}</span></p>}\n                                </div>\n                                <div>\n                                    <StyledButton\n                                        backgroundscolor={\"var(--color-error)\"}\n                                        widths={\"100%\"}\n                                        colors={\"var(--color-white)\"}\n                                    >\n                                        Cancel\n                                     </StyledButton>\n                                </div>\n                                &nbsp;\n                                   <div>\n\n                                    <StyledButton\n                                        backgroundscolor={\"var(--color-green)\"}\n                                        widths={\"100%\"}\n                                        colors={\"var(--color-white)\"}\n                                        onClick={() => window.open('https://zoom.us/j/3395255861')}\n                                    >\n                                        Start\n                                     </StyledButton>\n                                </div>\n                            </CardContent>\n                        </Card>\n                    </PatientCardWrapper>\n                    <br />\n                </React.Fragment>\n            ))}\n    </React.Fragment >\n)\n\nPatientAppointmentsMobile.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\n// export default PatientAppointments;\nexport default withStyles(styles)(PatientAppointmentsMobile);\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    PatientCardWrapper,\n  } from '../../styled-components/PatientCard/patient-card-styled';\n\nconst PatientDashboard = ({ }) => (\n    <React.Fragment>\n        <PatientCardWrapper>\n            {/* YUSEF PUT DATA HERE */}\n        </PatientCardWrapper>\n    </React.Fragment>\n)\nPatientDashboard.propTypes = {\n  };\n  \n  export default PatientDashboard;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field } from 'formik';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, InlineDatePicker } from 'material-ui-pickers';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport StyledDivider from '../../styled-components/Divider/divider-styled';\nimport {\n  PatientCardWrapper,\n  PatientProfileCard,\n  ProfileSettingsWrapper,\n  PatientCardButton,\n  ImageCard,\n  PatientFormHeader,\n  PatientCardRow,\n  PatientCardInformationWrapper,\n} from '../../styled-components/PatientCard/patient-card-styled';\nimport { StyledInputTextField, StyledDropdownField, FormHeader, FormBody, FormRow, FormColumn, theme, dateOptions, InvisibleDiv } from '../../styled-components/Forms/forms-styled';\n\nimport CardContent from '@material-ui/core/CardContent';\n// import { PatientList1, PatientList2, PatientList3 } from './patients-card-items/patient-list';\nimport PatientPicture from '../../images/Avator-Headshots/Regular-Headshots/Headshot-4.jpg';\nimport { StyledButton } from '../../styled-components/Buttons/buttons-styled';\n\n\nconst FormikDatePicker = ({\n  _name,\n  name,\n  defaultValue,\n  form: { setFieldValue },\n  field: { value },\n}) => {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} >\n      <InlineDatePicker\n        name={name}\n        keyboard\n        format='MMMM dd, yyyy'\n        clearable\n        variant=\"outlined\"\n        type='input'\n        margin=\"normal\"\n        onChange={value => {\n          setFieldValue(_name, value.toLocaleString('en-us', dateOptions));\n        }}\n        value={(value && value.toLocaleString('en-us', dateOptions)) || defaultValue.toLocaleString('en-us', dateOptions)}\n      />\n    </MuiPickersUtilsProvider>\n  );\n};\n\nclass PatientProfile extends PureComponent {\n\n  state = {\n    gender: '',\n  }\n\n  handleChange = (e, name, fn) => {\n    this.setState({ [name]: e.target.value }, () => fn(e));\n  };\n\n  formSubmission = (data) => {\n    console.log(data)\n    this.props.updatePatientData(data)\n  }\n\n  render() {\n    const { patientList } = this.props;\n    const { gender, selectedDate } = this.state;\n    return (\n      <div style={{ display: 'flex', flexFlow: 'row wrap', marginRight: '65px', justifyContent: 'space-between', width: '100%' }}>\n        <PatientProfileCard mediamargins={'40px 0'}>\n          <ImageCard src={patientList.picture} />\n          <ProfileSettingsWrapper>\n            <ProfileSettingsWrapper.Name>\n              {patientList.firstName} {patientList.lastName}\n            </ProfileSettingsWrapper.Name>\n            <ProfileSettingsWrapper.Details>\n              <h4>YOUR DETAILS</h4>\n              <PatientCardButton backgroundscolor={\"true\"} colors={\"true\"}>\n                Account Settings\n            </PatientCardButton>\n              <PatientCardButton backgroundscolor={''} colors={''}>\n                Password\n            </PatientCardButton>\n              <PatientCardButton backgroundscolor={''} colors={''}>\n                Privacy\n            </PatientCardButton>\n            </ProfileSettingsWrapper.Details>\n          </ProfileSettingsWrapper>\n        </PatientProfileCard>\n        <PatientCardWrapper boxshadows={'shadow'} bordersradius={'4px'} margins={'40px 65px 0 0'} mediawidths='300px' mediamargins='40px 20px 0 0' paddings={'20px 10px 20px 0'}>\n          <FormHeader>\n            <h1>Patient Profile</h1>\n            <p>Some of the profile information can be edited from your profile page.</p>\n          </FormHeader>\n          <FormBody>\n            <Formik\n              initialValues={{\n                id: patientList.id,\n                gender: patientList.gender,\n                firstName: patientList.firstName,\n                middleInitial: patientList.middleInitial,\n                lastName: patientList.lastName,\n                emailAddress: patientList.emailAddress,\n                cellPhone: patientList.cellPhone,\n                address: patientList.address,\n                city: patientList.city,\n                state: patientList.state,\n                insurance: patientList.insurance,\n                groupInsuranceNumber: patientList.groupInsuranceNumber,\n              }}\n              // validationSchema={validationSchema}\n              onSubmit={this.formSubmission}\n            >\n              {({ values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting, }) => (\n                  <Form>\n                    <MuiThemeProvider theme={theme}>\n                      <FormRow>\n                        <FormColumn margins={'0 20px 0 0'}>\n                          <h3>Patient Id #</h3>\n                          <StyledInputTextField\n                            disabled={true}\n                            variant=\"outlined\"\n                            type=\"input\"\n                            name=\"id\"\n                            value={patientList.id}\n                          />\n                        </FormColumn>\n                        <FormColumn>\n                          <h3>Gender</h3>\n                          <StyledDropdownField\n                            value={gender ? gender : patientList.gender}\n                            variant=\"outlined\"\n                            type='input'\n                            onChange={(e) => this.handleChange(e, 'gender', handleChange)} onBlur={handleBlur}\n                            input={<Input name={'gender'} />}\n                          >\n                            <MenuItem value=\"N/A\">N/A</MenuItem>\n                            <MenuItem value={'Male'}>Male</MenuItem>\n                            <MenuItem value={'Female'}>Female</MenuItem>\n                          </StyledDropdownField>\n                        </FormColumn>\n                      </FormRow>\n\n                      <FormRow>\n                        <FormColumn margins='0 20px 0 0'>\n                          <h3>First Name</h3>\n                          <StyledInputTextField\n                            variant=\"outlined\"\n                            type=\"input\"\n                            name=\"firstName\"\n                            defaultValue={patientList.firstName}\n                            onChange={handleChange}\n                          />\n                        </FormColumn>\n                        <FormColumn margins='0 20px 0 0'>\n                          <h3>Middle Initial</h3>\n                          <StyledInputTextField defaultValue={patientList.middleInitial} inputProps={{ maxLength: 1 }} variant=\"outlined\" type=\"input\" fullWidth name=\"middleInitial\" />\n                        </FormColumn>\n                        <FormColumn>\n                          <h3>Last Name</h3>\n                          <StyledInputTextField defaultValue={patientList.lastName} variant=\"outlined\" type=\"input\" name=\"lastName\" />\n                        </FormColumn>\n                      </FormRow>\n\n              <FormRow>\n                  <FormColumn>\n                  <h3>Date of Birth</h3>\n                  <InvisibleDiv>\n                  <Field component={FormikDatePicker} name={\"dataOfBirth\"} _name={\"dataOfBirth\"} defaultValue={patientList.dateOfBirth}/>\n                  </InvisibleDiv>\n              </FormColumn> \n              </FormRow>\n              <FormRow>\n                <FormColumn margins='0 20px 0 0'>\n                <h3>Email Address</h3>\n                <StyledInputTextField onChange={handleChange} defaultValue={patientList.emailAddress} variant=\"outlined\" type=\"email\" name=\"emailAddress\" />\n                </FormColumn>\n                <FormColumn>\n                <h3>Phone Number</h3>\n                <StyledInputTextField onChange={handleChange} defaultValue={patientList.cellPhone || patientList.homePhone}\n                variant=\"outlined\" type=\"input\" name=\"cellPhone\" />\n                </FormColumn>\n              </FormRow>\n              <FormRow>\n                <FormColumn>\n                <h3>Street Address</h3>\n                <StyledInputTextField onChange={handleChange} defaultValue={patientList.address} variant=\"outlined\" type=\"input\" name=\"address\" />\n                </FormColumn>\n              </FormRow>\n              <FormRow>\n                <FormColumn margins='0 20px 0 0'>\n                <h3>City</h3>\n                <StyledInputTextField onChange={handleChange} defaultValue={patientList.city} variant=\"outlined\" type=\"input\" name=\"city\" />\n                </FormColumn>\n                <FormColumn>\n                <h3>State</h3>\n                <StyledInputTextField onChange={handleChange} defaultValue={patientList.state} inputProps={{ maxLength: 2 }} variant=\"outlined\" type=\"input\" name=\"state\" />\n                </FormColumn>\n              </FormRow>\n              <FormRow>\n                <FormColumn margins='0 20px 0 0'>\n                <h3>Insurance Provider</h3>\n                <StyledInputTextField onChange={handleChange} defaultValue={patientList.insurance} variant=\"outlined\" type=\"input\" name=\"insurance\" />\n                </FormColumn>\n                <FormColumn>\n                <h3>Group/Insurance #</h3>\n                <StyledInputTextField onChange={handleChange} heights={'200px'} defaultValue={patientList.groupInsuranceNumber} variant=\"outlined\" type=\"input\" name=\"groupInsuranceNumber\" />\n                </FormColumn>\n              </FormRow>\n              <StyledButton\n                margins={'20px 0'}\n                backgroundscolor={'var(--color-green)'}\n                colors={'var(--color-white)'}\n                heights={'40px'}\n                linesheight={'20px'}\n                onClick={handleSubmit}\n              >\n              Save Settings\n              </StyledButton>\n                    </MuiThemeProvider>\n                  </Form>\n                )}\n            </Formik>\n          </FormBody>\n        </PatientCardWrapper>\n      </div>\n    )\n  }\n}\nPatientProfile.propTypes = {\n  patientEditMode: PropTypes.bool,\n  patientList: PropTypes.object,\n};\n\nexport default PatientProfile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BigCalendar from 'react-big-calendar';\nimport styles from 'react-big-calendar/lib/css/react-big-calendar.css'\nimport moment from 'moment';\n\nimport { CalendarEvents, CalendarDates } from '../../../mock-data/';\nimport { PatientCardWrapper } from '../../../styled-components/PatientCard/patient-card-styled';\n\nlet allViews = Object.keys(BigCalendar.Views).map(k => BigCalendar.Views[k]);\n// Setup the localizer by providing the moment (or globalize) Object\n// to the correct localizer.\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst CardCalendar = ({ }) => (\n  <React.Fragment>\n    <PatientCardWrapper heights={'700px'}>\n      <BigCalendar\n        events={CalendarEvents}\n        views={allViews}\n        step={60}\n        showMultiDayTimes\n        max={CalendarDates.add(CalendarDates.endOf(new Date(2019, 17, 1), 'day'), -1, 'hours')}\n        defaultDate={new Date(2019, 3, 1)}\n        localizer={localizer}\n      />\n    </PatientCardWrapper>\n  </React.Fragment>\n)\nCardCalendar.propTypes = {\n\n};\n\nexport default CardCalendar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CardMessaging = ({ }) => (\n    <React.Fragment>\n\n    </React.Fragment>\n)\nCardMessaging.propTypes = {\n\n  };\n  \n  export default CardMessaging;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Current } from '../../utils/constants';\nimport EventListener from \"react-event-listener\";\n//Components\nimport PatientHeader from './patients-card-items/patient-header';\nimport PatientAppointments from '../Patients/patient-appointments';\nimport PatientAppointmentsMobile from '../Patients/patient-appointment-mobile';\nimport PatientDashboard from '../Patients/patient-dashboard';\nimport PatientProfile from '../Patients/patient-profile';\nimport CardCalendar from '../../components/ReusableComponents/CardItems/CardCalendar';\nimport CardMessaging from '../../components/ReusableComponents/CardItems/CardMessaging';\n//Styled\nimport { PatientCardWrapper } from '../../styled-components/PatientCard/patient-card-styled';\nimport { patientAppointments } from '../../mock-data/mock-data';\n\n{/* <EventListener target={'window'} onResize={this.handleResize} /> */ }\nclass PatientCard extends React.Component {\n\n  state = {\n    isDesktop: true,\n  }\n\n  componentDidMount() {\n    this.handleResize()\n  }\n  handleResize = () => {\n    if (window.innerWidth <= 1200) {\n      this.setState({ isDesktop: false });\n    }\n    else {\n      this.setState({ isDesktop: true })\n    }\n  }\n  render() {\n    const { patientList, currentPage, patientAppointments, updatePatientData } = this.props;\n    const { isDesktop } = this.state;\n\n    return (\n      < React.Fragment >\n        <PatientHeader currentPage={currentPage} patientList={patientList} />\n        {currentPage === Current.Dashboard && <PatientDashboard />}\n        <EventListener target={'window'} onResize={this.handleResize} />\n        {\n          isDesktop && currentPage === Current.Appointments && (\n            <PatientAppointments\n              emailAddress={patientList.emailAddress}\n              service={'Service Type'}\n              clinician={patientList.provider}\n              appointments={patientList.appointments}\n              patientAppointments={patientAppointments} />\n          )\n        }\n        {\n          !isDesktop && currentPage === Current.Appointments && (\n            <PatientAppointmentsMobile\n              emailAddress={patientList.emailAddress}\n              service={'Service Type'}\n              clinician={patientList.provider}\n              appointments={patientList.appointments}\n              patientAppointments={patientAppointments} />\n          )\n        }\n        {currentPage === Current.Calendar && <CardCalendar />}\n        {currentPage === Current.Messaging && <CardMessaging />}\n        {currentPage === Current.PatientProfile && <PatientProfile patientList={patientList} updatePatientData={updatePatientData} />}\n      </React.Fragment >\n\n    )\n  }\n}\n\nPatientCard.propTypes = {\n  patientList: PropTypes.object\n};\n\nexport default PatientCard;\n","/*\n * PatientPage\n * This is the first thing users see of our App, at the '/' route\n */\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n// Components\nimport Header from '../Header/Header';\nimport SideMenu from '../SideMenu/SideMenu';\nimport PatientCard from '../../components/Patients/PatientCard';\nimport { Patient4MockData, patientAppointments } from '../../mock-data';\nimport { Current } from '../../utils/constants';\n\nexport default class PatientPage extends Component {\n\t// eslint-disable-line react/prefer-stateless-function\n\tcomponentDidMount() {\n\t\tconst { getPatientData } = this.props;\n\t\tgetPatientData('8098FEB5-009B-4074-A584-1021C0FED992');\n\t}\n\trender() {\n\t\tconst { changePage, currentPage, userData, userRole, updatePatientData } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Helmet>\n\t\t\t\t\t<title>Patient Page</title>\n\t\t\t\t\t<meta name='description' content='Global Mentality Patient Page' />\n\t\t\t\t</Helmet>\n\n\t\t\t\t<div id={'main-container'}>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tchangePage={changePage}\n\t\t\t\t\t\tcurrentProfile={Current.PatientProfile}\n\t\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\t\tuserRole={userRole}\n\t\t\t\t\t/>\n\t\t\t\t\t<SideMenu changePage={changePage} currentPage={currentPage} userRole={userRole} />\n\t\t\t\t\t<PatientCard\n\t\t\t\t\t    changePage={changePage}\n\t\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\t\tpatientList={userData}\n\t\t\t\t\t\tpatientAppointments={patientAppointments}\n\t\t\t\t\t\tupdatePatientData={updatePatientData}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nPatientPage.propTypes = {\n\tpatientMockData: PropTypes.object\n};\n","\n\n//Functional Programming Fantasy\nconst Right = x => ({\n  map:fn => Right(fn(x)),\n  inspect:() => `Right(${x})`,\n  fold:(l,r) => r(x)\n});\n\nconst Left = x => ({\n  map:fn => Left(fn(x)),\n  inspect:() => `Left(${x})`,\n  fold:(l,r) => l(x) // eslint-disable-line no-unused-vars\n})\n\nconst Sum = x => ({\n  x,\n  concat:({x,y}) => Sum(x + y),\n  inspect:() => `Sum(${x})`\n})\n\nSum.empty = () => Sum(0)\n//example\n// const res  = Sum.empty().concat(Sum(1).concat(Sum(3)))\n\n\nconst All = x => ({\n  x,\n  concat:({x,y}) => All(x && y),\n  inspect:() => `All(${x})`\n})\n\nAll.empty = () => All(true)\n\nconst Any = x => ({\n  x,\n  concat:({x,y}) => Any(x || y),\n  inspect:() => `Any(${x})`\n})\n\nAny.empty = () => Any(false)\n\nconst Box = x => ({\n  fold:f => f(x),\n  map: f => Box(f(x)),\n  inspect: () => `Box(${x})`\n})\n\nconst LazyBox = g => ({\n    map:f => LazyBox(() => f(g())),\n    fold:f => f(g())\n})\n\n\n\n//Ramda style\nexport const pipe = (...fns) => x => fns.reduce((acc,fn) => fn(acc),x)\n\nexport const compose = (...fns) => x => fns.reduceRight((acc,fn) => fn(acc),x)\n\nexport const Nullable = fn => x => fn(x) ? Right(x) : Left(x);\n\nexport const maybe = fn => x => fn(x)? [x] : [];\n\n\nexport const mapReducer = fn => array =>\narray.reduce((acc,val) => {\n  acc.push(fn(val))\n  return acc;\n},[])\n\nexport const filterReducer = predicate => array =>\narray.reduce((acc,val) => {\n  if(predicate(val)){\n    acc.push(val)\n    return acc;\n  }\n  else{\n    return acc;\n  }\n},[])\n","/**\n * Patient Page selectors\n */\nimport { pipe } from '../../../utils/functional';\nimport { createSelector } from 'reselect';\n\nexport const getUserData = (state) => state.patient.userData;\nexport const getUserLoading = (state) => state.patient.getPatientLoading;\nexport const getUserDataError = (state) => state.patient.userDataError;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserRole, getCurrentPage } from '../App/redux/selectors';\nimport { changePage } from '../App/redux/actions';\nimport { getPatientData, updatePatientData } from './redux/actions';\nimport PatientPage from './PatientPage';\nimport { getUser, getUserData, getUserLoading, getUserDataError } from './redux/selectors';\n\nconst mapDispatchToProps = {\n\tchangePage,\n  getPatientData,\n  updatePatientData,\n};\n\nconst mapStateToProps = (state) => ({\n\tcurrentPage: getCurrentPage(state),\n\tuserRole: getUserRole(state),\n\tuserData: getUserData(state),\n\tuserDataLoading: getUserLoading(state),\n\tuserDataError: getUserDataError(state)\n});\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(PatientPage);\n","import styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport { Button } from '@material-ui/core';\n\nexport const ClinicianCardWrapper = styled(Card)`\n  min-height: auto;\n  height: ${({ heights }) => (heights ? heights : '100%')}!important;\n  max-width: ${({ maxwidths }) => (maxwidths)}!important;\n  min-width: ${({ minwidths }) => (minwidths)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  background-color: var(--color-white)!important;\n  display: flex;\n  flex-flow: column wrap;\n  margin: ${({ margins }) => (margins)}!important;\n  padding: ${({ paddings }) => (paddings ? paddings : '20px')}};\n  margin-right: 65px;\n  border-radius: ${({ bordersradius }) => (bordersradius ? bordersradius : '0px')}!important;\n  box-shadow: ${({ boxshadows }) => (!boxshadows ? 'none' : '')}!important;\n\n  li {\n    height: ${({ liheight }) => (liheight)}!important;\n  }\n\n  .MuiListItem-root-127{\n   text-align:center;\n  }\n  .MuiListItem-gutters-135{\n    padding: 0 !important\n  }\n\n  .MuiList-root-120 li:first-child{\n    margin-right: 18px\n  }\n\n  .MuiInputBase-root-198{\n    background-color: #F2F3F5;\n    margin-bottom: 30px;\n    border-radius: 5px;\n    width:90%;\n    padding: .8% .5%;\n  }\n\n  section{\n    margin-bottom: -8%\n  }\n\n  .MuiTypography-subheading-153{\n    font-weight: bold;\n  }\n\n  .MuiInputBase-root-205{\n    border: black 1px solid;\n    border-radius: 5px;\n    padding: 5px;\n   width:100%; \n   margin-bottom: 2%;\n  }\n\n  @media only screen and (max-width: 600px) and (min-width: 400px){\n    padding: 10px;\n    width: ${({ mediawidths }) => (mediawidths)}!important;\n    margin: ${({ mediamargins }) => (mediamargins)}!important;\n  }\n`;\nexport const ClinicianSubHeader = styled(Card)`\n  min-height: 50px;\n  height: 100%;\n  background-color: var(--color-white) !important;\n  display: flex;\n  flex-flow: column wrap;\n  padding: 20px;\n  margin-right: 65px;\n  border-radius: 0px !important;\n  box-shadow: none !important;\n  @media only screen and (max-width: 600px) and (min-width: 400px){\n    padding: 10px;\n  }\n`;\nexport const ClinicianCardInformationWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n`;\nexport const ClinicianHeaderWrapper = styled.div`\n  height: auto;\n  background-color: var(--color-white) !important;\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  margin-right: 65px;\n  border-radius: 0px !important;\n  box-shadow: none !important;\n  margin-bottom: 3px;\n  @media only screen and (max-width: 600px) and (min-width: 400px){\n    margin-right: 50px!important;\n   }\n`;\nexport const ClinicianAppointmentStatusWrapper = styled.div`\n  display: flex;\n  justify-content:${({ justify }) => (justify ? justify : 'center')}!important;\n  align-items: ${({ align }) => (align ? align : '')}!important;\n  flex-flow: ${({ flexsflow }) => (flexsflow ? flexsflow : 'column wrap')}!important;\n  background-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\n  height: ${({ heights }) => (heights)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  box-shadow: ${({ boxshadow }) => (boxshadow)}!important;\n  color: ${({ colors }) => (colors ? colors : \"var(--color-grey-text)\")}!important;\n  border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n  font-size: ${({ fontssize }) => (fontssize ? fontssize : '11px')}!important;\n  margin: ${({ margins }) => (margins)}!important;\n  border: ${({ borders }) => (borders)} !important;\n  margin-top: ${({ marginsTop }) => (marginsTop ? marginsTop : ' -10px 0')}!important;\n  font-weight: ${({ fontsweight }) => (fontsweight)}!important;\n  @media only screen and (max-width: 1029px) and (min-width: 400px){\n    width: ${({ mediawidths }) => (mediawidths)}!important;\n    justify-content:${({ mediajustify }) => (mediajustify)}!important;\n    flex-flow: ${({ mediaflexsflow }) => (mediaflexsflow)}!important;\n    align-items:${({ mediaalign }) => (mediaalign)}!important;\n    margin: ${({ mediamargins }) => (mediamargins)}!important;\n  }\n`;\nexport const ClinicianProfileCard = styled(Card)`\n  display: flex;\n  justify-content: flex-start !important;\n  align-items: center !important;\n  flex-flow: column wrap !important;\n  height: 600px !important;\n  width: 300px !important;\n  box-shadow: none !important;\n  color: var(--color-grey-text) !important;\n  font-size: 11px !important;\n  margin: 40px 20px 40px 0 !important;\n  margin-top: -10px 0 !important;\n  @media only screen and (max-width: 1029px) and (min-width: 400px){\n    width: ${({ mediawidths }) => (mediawidths)}!important;\n    justify-content:${({ mediajustify }) => (mediajustify)}!important;\n    flex-flow: ${({ mediaflexsflow }) => (mediaflexsflow)}!important;\n    align-items:${({ mediaalign }) => (mediaalign)}!important;\n    margin: ${({ mediamargins }) => (mediamargins)}!important;\n  }\n`;\nexport const ClinicianCardButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 28px 10px 0 10px;\n\n`;\n\nexport const ClinicianCardRow = styled.div`\n  margin-top: 30px;\n  background-color: ${({ backgroundscolor }) => (backgroundscolor)}!important;\n  height: ${({ heights }) => (heights)}!important;\n  width: ${({ widths }) => (widths)}!important;\n  box-shadow: ${({ boxshadow }) => (boxshadow)}!important;\n  color: ${({ colors }) => (colors ? colors : \"var(--color-black-text)\")}!important;\n  border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n  font-size: ${({ fontssize }) => (fontssize ? fontssize : '11px')}!important;\n  margin: ${({ margins }) => (margins)}!important;\n  border: ${({ borders }) => (borders)} !important;\n  margin-top: ${({ marginsTop }) => (marginsTop ? marginsTop : '30px')}!important;\n  font-weight: ${({ fontsweight }) => (fontsweight)}!important;\n`;\nexport const ImageCard = styled.div`\n  display: flex;\n  justify-content: center !important;\n  flex-flow: column wrap !important;\n  background-color: grey !important;\n  height: 275px !important;\n  width: 300px !important;\n  color: var(--color-grey-text)!important;\n  font-size: 11px !important;\n  background-image: ${({ src }) => (`url(${src})`)}!important;\n  background-size: cover !important;\n  @media only screen and (max-width: 1029px) and (min-width: 400px){\n    width: ${({ mediawidths }) => (mediawidths)}!important;\n    justify-content:${({ mediajustify }) => (mediajustify)}!important;\n    flex-flow: ${({ mediaflexsflow }) => (mediaflexsflow)}!important;\n    align-items:${({ mediaalign }) => (mediaalign)}!important;\n    margin: ${({ mediamargins }) => (mediamargins)}!important;\n  }\n`;\n\n\nexport const ProfileSettingsWrapper = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  width: 100%;\n  padding-right: 5px;\n`;\n\nProfileSettingsWrapper.Name = styled.div`\n  display: flex;\n  align-items: center;\n  height: 60px;\n  width: 100%;\n  font-size: 20px;\n  border-bottom: 1px solid var(--color-grey-text-light);\n  padding-left: 40px;\n  color: black;\n  font-weight: bold;\n`;\n\nProfileSettingsWrapper.Details = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  padding-left: 40px;\n  h4 {\n    color: rgba(128,128,128, .5);\n    font-size: 13px;\n    margin-bottom: 10px;\n  }\n\n`;\n\nexport const ClinicianCardButton = styled(Button)`\n  display: flex;\n  width: 100%;\n  height: 40px;\n  justify-content: flex-start !important;\n  margin-left: -10px !important;\n  padding-left: 10px !important;\n  margin-bottom: 10px !important;\n  background-color: ${({ backgroundscolor }) => (backgroundscolor ? 'var(--color-primary)' : '')}!important;\n  color: ${({ colors }) => (colors ? 'var(--color-secondary)' : '')} !important;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ClinicianCardRow,\n  ClinicianAppointmentStatusWrapper,\n  ClinicianHeaderWrapper\n} from '../../../styled-components/ClinicianCard/clinician-card-styled';\nimport {\n  StyledAvator,\n  RandomAvatorColor,\n  ProfileCardWrapper\n} from '../../../styled-components/Profile/profile-card-styled';\nimport { StyledButton } from '../../../styled-components/Buttons/buttons-styled';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Add } from '@material-ui/icons';\nimport { Current } from '../../../utils/constants';\n\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport { Formik, Form, Field } from 'formik';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport { StyledInputTextField, StyledDropdownField, FormHeader, FormBody, FormRow, FormColumn, theme, StyledInputTextArea } from '../../../styled-components/Forms/forms-styled';\nimport { StyledDivider } from '../../../styled-components/Divider/divider-styled';\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n  },\n});\n\nclass ClinicianHeader extends React.Component {\n  state = {\n    open: false,\n    // service: '',\n    // duration: '',\n    // assigned: ''\n  };\n\n  handleClose = () => {\n    console.log('close header')\n    this.setState({ open: false });\n  };\n\n  handleChange = (e, name, fn) => {\n    this.setState({ [name]: e.target.value }, () => fn(e));\n  };\n\n  formSubmission = (values) => {\n    console.log(values)\n    this.props.createClinicianAppointment(values)\n    this.handleClose();\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n    React.cloneElement.open = false\n  };\n\n  render() {\n    const { duration, service, assigned } = this.state;\n    const { classes, currentPage, patientList, clinicianList } = this.props;\n    console.log(clinicianList)\n    return (\n      <ClinicianHeaderWrapper>\n        <h2 style={{ margin: '0 15px 0 20px', fontWeight: 'normal', fontSize: '1.1875rem' }}>Company</h2>\n        <h1 style={{ marginTop: '15px', fontWeight: '100' }} >|</h1>\n        <h2 style={{ marginLeft: '15px', fontWeight: 'normal', fontSize: '1.1875rem' }}>\t{currentPage.charAt(0).toUpperCase() + currentPage.slice(1)}</h2>\n\n        {currentPage === Current.Appointments && (\n          <React.Fragment>\n            <StyledButton\n              backgroundscolor={\"var(--color-blue)\"}\n              widths={\"150px\"}\n              fontssize={'.9em'}\n              colors={\"var(--color-white)\"}\n              style={{ margin: '0 20px 10px auto', }}\n              onClick={() => this.setState({ open: true })}\n            >\n              New Appointment\n            {/* <Add /> */}\n            </StyledButton>\n\n            <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div style={getModalStyle()} className={classes.paper}>\n            <FormHeader>\n              <h1>Schedule Appointment</h1>\n              <StyledDivider />\n            </FormHeader>\n            <FormBody>\n              <Formik\n                initialValues={{\n                  service: '',\n                  duration: '',\n                  description: '',\n                  patientID: '8098feb5-009b-4074-a584-1021c0fed992',\n                  clinicianID: clinicianList.id\n                }}\n                // validationSchema={validationSchema}\n                onSubmit={this.formSubmission}\n              >\n                {({ values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting, }) => (\n                    <Form>\n                      <MuiThemeProvider theme={theme}>\n                        <FormRow>\n                          <FormColumn>\n                            <h3>ASSIGNED TO:</h3>\n                            <StyledDropdownField\n                              value={values.clinicianID}\n                              variant=\"outlined\"\n                              type='input'\n                              onChange={(e) => this.handleChange(e, 'clinicianID', handleChange)} onBlur={handleBlur}\n                              // input={<Input name={'assigned'} />}\n                              name=\"clinicianID\"\n                            >\n                              <MenuItem value={clinicianList.id}>{clinicianList.firstName} {clinicianList.lastName}</MenuItem>\n                            </StyledDropdownField>\n                          </FormColumn>\n                        </FormRow>\n                        <FormRow>\n                          <FormColumn>\n                            <h3>SERVICE TYPE:</h3>\n                            <StyledDropdownField\n                              value={values.service}\n                              variant=\"outlined\"\n                              type='input'\n                              onChange={(e) => this.handleChange(e, 'service', handleChange)} onBlur={handleBlur}\n                              // input={<Input name={'service'} />}\n                              name=\"service\"\n                            >\n                              <MenuItem value={'Consultation Service'}>Consultation Service</MenuItem>\n                              <MenuItem value={'Therapy Service'}>Therapy Service</MenuItem>\n                              <MenuItem value={'Medical Service'}>Medical Service</MenuItem>\n                            </StyledDropdownField>\n                          </FormColumn>\n                        </FormRow>\n\n                        <FormRow>\n                          <FormColumn margins='0 20px 0 0'>\n                            <h3>REQUESTED SERVICE DURATION:</h3>\n                            <StyledInputTextField\n                              variant=\"outlined\"\n                              type=\"input\"\n                              name=\"duration\"\n                              placeholder=\"15, 30, 60 minutes\"\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              value={values.duration}\n                              inputProps={{ maxLength: 3 }}\n                              width={\"100%\"}\n                              \n                            />\n                          </FormColumn>\n                        </FormRow>\n                        <FormRow>\n                          <FormColumn margins='0 20px 0 0'>\n                            <h3>DESCRIPTION</h3>\n                            <StyledInputTextArea placeholder=\"Use this space to describe the reason for this appointment\" onChange={handleChange} onBlur={handleBlur} value={values.description} variant=\"outlined\" type=\"input\" fullWidth name=\"description\" />\n                          </FormColumn>\n                        </FormRow>\n                        &nbsp;\n                                     <StyledDivider />\n                        <StyledButton\n                          margins={'20px 0'}\n                          backgroundscolor={'var(--color-white)'}\n                          borders={\"1px solid black\"}\n                          colors={'var(--color-black-text)'}\n                          heights={'40px'}\n                          linesheight={'20px'}\n                          onClick={this.handleClose}\n                        >\n                          CANCEL\n                                            </StyledButton>\n                        <StyledButton\n                          margins={'20px 60px'}\n                          backgroundscolor={'var(--color-green)'}\n                          colors={'var(--color-white)'}\n                          heights={'40px'}\n                          linesheight={'20px'}\n                          onClick={handleSubmit}\n                        //  style={{ marginLeft: '60%' }}\n                        >\n                          CONFIRM\n                                            </StyledButton>\n                      </MuiThemeProvider>\n                    </Form>\n                  )}\n              </Formik>\n            </FormBody>\n\n          </div>\n        </Modal>\n          </React.Fragment>\n        )\n        }\n\n        {currentPage === Current.Patients && (\n          <React.Fragment>\n\n            <StyledButton\n              backgroundscolor={\"var(--color-blue)\"}\n              widths={\"150px\"}\n              fontssize={'.9em'}\n              colors={\"var(--color-white)\"}\n              style={{ margin: '0 20px 10px auto', }}\n              onClick={() => this.setState({ open: true })}\n            >\n              Add Patient\n  {/* <Add /> */}\n            </StyledButton>\n          </React.Fragment>\n        )\n        }\n        {/* {this.state.open && <AppointmentModal open patientList={patientList}></AppointmentModal>} */}\n      </ClinicianHeaderWrapper >\n    )\n  }\n};\n\n\nClinicianHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst ModalWrapped = withStyles(styles)(ClinicianHeader);\nexport default ModalWrapped;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { ClinicianCardWrapper } from '../../styled-components/ClinicianCard/clinician-card-styled';\nimport { withStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport { StyledInputTextField, FormRow, FormColumn } from '../../styled-components/Forms/forms-styled';\nimport { StyledButton } from \"../../styled-components/Buttons/buttons-styled\";\nimport { randomHeadShot } from \"../../mock-data/\";\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderColor: '#000000',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit * 3,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n});\n\nconst flexContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  padding: '10px 0 0 0 ',\n  maxHeight: '75px',\n}\n\n\nconst appointmentTime = {\n  backgroundColor: '#d9d9d9',\n  maxWidth: '75px',\n  fontWeight: 'bold',\n  padding: '3px',\n  textAlign: 'center'\n}\nconst dateOptions = {\n  month: 'numeric',\n  day: 'numeric',\n  year: 'numeric',\n};\n\nconst timeOptions = {\n  hour: '2-digit',\n  minute: '2-digit'\n}\n\n\nconst ClinicianAppointments = ({ props, clinicianAppointments, emailAddress, service, clinician }) => (\n  < React.Fragment >\n    <ClinicianCardWrapper>\n\n      <FormRow>\n        <FormColumn>\n          <StyledInputTextField placeholder=\"Search for Customers, Employees, Services...\" variant=\"outlined\" type=\"input\" name=\"Search\" />\n        </FormColumn>\n      </FormRow>\n\n      <Grid container >\n        <Grid item xs={12} >\n          <div>\n            <List style={flexContainer}>\n              <ListItem>\n                <ListItemText primary=\"\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                  primary=\"CLINICIAN:\" />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                  primary=\"ASSIGNED TO:\" />\n              </ListItem>\n\n              <ListItem>\n                <ListItemText\n                  primary=\"SERVICE:\" />\n              </ListItem>\n\n              <ListItem>\n                <ListItemText\n                  primary=\"DURATION:\" />\n              </ListItem>\n\n              <ListItem>\n                <ListItemText\n                  primary=\"STATUS:\" />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                  primary=\"\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                  primary=\"\"\n                />\n              </ListItem>\n\n            </List>\n          </div>\n        </Grid>\n      </Grid>\n    </ClinicianCardWrapper>\n    <br />\n    {\n      clinicianAppointments.map((appointment, index) => (\n        <React.Fragment key={index}>\n          <p>{'3/21/19'}</p>\n          <ClinicianCardWrapper liheight={'50px'} justify={'center'} paddings={'10px 20px'}>\n            <List style={flexContainer} key={index}>\n              <ListItem>\n                <ListItemText style={appointmentTime}\n                  primary={'12:00'} />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                  primary={appointment.patientName}\n                />\n              </ListItem>\n              <ListItem>\n                <Avatar src={randomHeadShot()} />\n                <ListItemText\n                  primary={appointment.clinicianName} />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                  primary={appointment.service} />\n              </ListItem>\n\n              <ListItem>\n                <ListItemText\n                  primary={appointment.duration} />\n              </ListItem>\n              <ListItem>\n                {appointment.status === 'Approved' && <p style={{ color: 'var(--color-green' }}>{appointment.status}</p>}\n                {appointment.status === 'Waiting' && <p style={{ color: 'var(--color-pending' }}>{\"Pending\"}</p>}\n                {appointment.status === 'Cancelled' && <p style={{ color: 'var(--color-error' }}>{appointment.status}</p>}\n              </ListItem>\n              <ListItem>\n                <StyledButton\n                  backgroundscolor={\"var(--color-error)\"}\n                  widths={\"80%\"}\n                  colors={\"var(--color-white)\"}\n\n                >\n                  Cancel\n            </StyledButton>\n              </ListItem>\n              <ListItem>\n                <StyledButton\n                  backgroundscolor={\"var(--color-green)\"}\n                  widths={\"80%\"}\n                  colors={\"var(--color-white)\"}\n                  onClick={() => window.open('https://zoom.us/j/3395255861')}\n                >\n                  Start\n            </StyledButton>\n              </ListItem>\n\n            </List>\n            &nbsp;\n          </ClinicianCardWrapper>\n        </React.Fragment>\n      ))\n    }\n\n\n  </React.Fragment >\n)\n\nClinicianAppointments.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n// export default ClinicianAppointments;\nexport default withStyles(styles)(ClinicianAppointments);\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ClinicianCardWrapper } from '../../styled-components/ClinicianCard/clinician-card-styled';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { StyledInputTextField, FormRow, FormColumn } from '../../styled-components/Forms/forms-styled';\nimport { StyledButton } from \"../../styled-components/Buttons/buttons-styled\";\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { randomHeadShot } from \"../../mock-data/\";\n\nconst styles = {\n    card: {\n        minWidth: 250,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n};\n\nconst appointmentTime = {\n    backgroundColor: '#d9d9d9',\n    maxWidth: '75px',\n    fontWeight: 'bold',\n    fontSize: '12px',\n    padding: '3px',\n    // textAlign: 'center'\n}\n\n\nconst ClinicianAppointmentsMobile = ({ props, clinicianAppointments, emailAddress, service, clinician, classes }) => (\n    <React.Fragment>\n        <ClinicianCardWrapper>\n            <FormRow>\n                <FormColumn>\n                    <StyledInputTextField placeholder=\"Search for Customers, Employees, Services...\" variant=\"outlined\" type=\"input\" name=\"Search\" />\n                </FormColumn>\n            </FormRow>\n        </ClinicianCardWrapper>\n        &nbsp;\n        {\n            clinicianAppointments.map((appointment, index) => (\n                <React.Fragment key={index}>\n                    <div>\n                        {'3/21/19'}\n                    </div>\n                    <ClinicianCardWrapper>\n                        <Card className={classes.card} key={index}>\n                            <CardContent>\n                                <div>\n                                    <p style={appointmentTime}>\n                                        {'12:00'}\n                                    </p>\n                                </div>\n                                <div>\n                                    <p>\n                                        <strong>\n                                            Patient Name: </strong>\n                                        {appointment.patientName}\n\n                                    </p>\n                                    {/* <p>\n                                        <strong>\n                                            Patient Email: </strong> {appointment.patient_Email}\n                                    </p> */}\n                                </div>\n                                <div>\n                                    <p><strong>Clinician: </strong>\n                                        <img src={randomHeadShot()} width='40' />\n                                        {appointment.clinicianName}</p>\n                                </div>\n                                <div>\n                                    <p><strong>Service: </strong>\n                                        {appointment.service}\n                                    </p>\n                                </div>\n                                <div>\n                                    <p><strong>Duration: </strong>\n                                        {appointment.duration}\n                                    </p>\n                                </div>\n                                <div>\n                                    {appointment.status === 'Approved' && <p><strong>Status: </strong><span style={{ color: 'var(--color-green' }}>{appointment.status}</span></p>}\n                                    {appointment.status === 'Waiting' && <p><strong>Status: </strong><span style={{ color: 'var(--color-pending' }}>{\"Pending\"}</span></p>}\n                                    {appointment.status === 'Cancelled' && <p><strong>Status: </strong><span style={{ color: 'var(--color-pending' }}>{appointment.status}</span></p>}\n                                </div>\n                                <div>\n                                    <StyledButton\n                                        backgroundscolor={\"var(--color-error)\"}\n                                        widths={\"100%\"}\n                                        colors={\"var(--color-white)\"}\n                                    >\n                                        Cancel\n                                     </StyledButton>\n                                </div>\n                                &nbsp;\n                                   <div>\n\n                                    <StyledButton\n                                        backgroundscolor={\"var(--color-green)\"}\n                                        widths={\"100%\"}\n                                        colors={\"var(--color-white)\"}\n                                        onClick={() => window.open('https://zoom.us/j/3395255861')}\n                                    >\n                                        Start\n                                     </StyledButton>\n                                </div>\n                            </CardContent>\n                        </Card>\n                    </ClinicianCardWrapper>\n                    <br />\n                </React.Fragment>\n            ))}\n    </React.Fragment >\n)\n\nClinicianAppointmentsMobile.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\n// export default PatientAppointments;\nexport default withStyles(styles)(ClinicianAppointmentsMobile);\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ClinicianCardWrapper,\n} from '../../styled-components/ClinicianCard/clinician-card-styled';\n\nconst ClinicianDashboard = ({ }) => (\n    <React.Fragment>\n        <ClinicianCardWrapper>\n            {/* YUSEF PUT DATA HERE */}\n        </ClinicianCardWrapper>\n    </React.Fragment>\n)\nClinicianDashboard.propTypes = {\n};\n\nexport default ClinicianDashboard;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, InlineDatePicker } from 'material-ui-pickers';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport StyledDivider from '../../styled-components/Divider/divider-styled';\nimport {\n\tClinicianCardWrapper,\n\tClinicianProfileCard,\n\tProfileSettingsWrapper,\n\tClinicianCardButton,\n\tImageCard,\n\tClinicianFormHeader,\n\tClinicianCardRow,\n\tClinicianCardInformationWrapper\n} from '../../styled-components/ClinicianCard/clinician-card-styled';\nimport { StyledInputTextField, StyledInputTextArea, StyledDropdownField, FormHeader, FormBody, FormRow, FormColumn, theme, dateOptions, InvisibleDiv } from '../../styled-components/Forms/forms-styled';\n\nimport CardContent from '@material-ui/core/CardContent';\n// import { ClinicianList1, ClinicianList2, ClinicianList3 } from './clinicians-card-items/clinician-list';\nimport ClinicianPicture from '../../images/Avator-Headshots/Regular-Headshots/Headshot-4.jpg';\nimport { StyledButton } from '../../styled-components/Buttons/buttons-styled';\nimport { randomDoctor } from '../../mock-data/';\n\nclass ClinicianProfile extends PureComponent {\n\tstate = {\n\t\tpronoun: '',\n\t\tselectedDate: new Date(2000, 3, 18).toLocaleString('en-us', dateOptions)\n\t};\n\n\thandleChange = (e, fn) => {\n\t\tthis.setState({ [e.target.name]: e.target.value }, ()=> fn(e));\n\t};\n\n\thandleDateChange = date => {\n\t\tthis.setState({ selectedDate: date.toLocaleString('en-us', dateOptions) });\n\t};\n\n\n\tformSubmission = (data) => {\n\t\tconsole.log(data)\n\t\tthis.props.updateClinicianData(data);\n\t}\n\trender() {\n\t\tconst { clinicianList } = this.props;\n\n\t\tconst { pronoun, selectedDate } = this.state;\n\t\treturn (\n\t\t\t<div style={{ display: 'flex', flexFlow: 'row wrap', marginRight: '65px', justifyContent: 'space-between', width: '100%' }}>\n\t\t\t\t<ClinicianProfileCard mediamargins={'40px 0'}>\n\t\t\t\t\t<ImageCard src={randomDoctor()} />\n\t\t\t\t\t<ProfileSettingsWrapper>\n\t\t\t\t\t\t<ProfileSettingsWrapper.Name>\n\t\t\t\t\t\t\t{clinicianList.firstName} {clinicianList.lastName}\n\t\t\t\t\t\t</ProfileSettingsWrapper.Name>\n\t\t\t\t\t\t<ProfileSettingsWrapper.Details>\n\t\t\t\t\t\t\t<h4>YOUR DETAILS</h4>\n\t\t\t\t\t\t\t<ClinicianCardButton backgroundscolor={\"true\"} colors={\"true\"}>\n\t\t\t\t\t\t\t\tAccount Settings\n            </ClinicianCardButton>\n\t\t\t\t\t\t\t<ClinicianCardButton backgroundscolor={''} colors={''}>\n\t\t\t\t\t\t\t\tPassword\n            </ClinicianCardButton>\n\t\t\t\t\t\t\t<ClinicianCardButton backgroundscolor={''} colors={''}>\n\t\t\t\t\t\t\t\tPrivacy\n            </ClinicianCardButton>\n\t\t\t\t\t\t</ProfileSettingsWrapper.Details>\n\t\t\t\t\t</ProfileSettingsWrapper>\n\t\t\t\t</ClinicianProfileCard>\n\t\t\t\t<ClinicianCardWrapper boxshadows={'shadow'} bordersradius={'4px'} margins={'40px 65px 0 0'} mediawidths='300px' mediamargins='40px 20px 0 0' paddings={'20px 10px 20px 0'}>\n\t\t\t\t\t<FormHeader>\n\t\t\t\t\t\t<h1>Clinician Profile</h1>\n\t\t\t\t\t\t<p>Some of the profile information can be edited from your profile page.</p>\n\t\t\t\t\t</FormHeader>\n\t\t\t\t\t<FormBody>\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\t\tid: clinicianList.id,\n\t\t\t\t\t\t\t\tfirstName: clinicianList.firstName,\n\t\t\t\t\t\t\t\tlastName: clinicianList.lastName,\n\t\t\t\t\t\t\t\temailAddress: clinicianList.emailAddress,\n\t\t\t\t\t\t\t\tphoneNum: clinicianList.phoneNum,\n\t\t\t\t\t\t\t\taddress: clinicianList.address,\n\t\t\t\t\t\t\t\tpronoun: clinicianList.pronoun || \"Dr.\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// validationSchema={validationSchema}\n\t\t\t\t\t\t\tonSubmit={this.formSubmission}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({ values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\n\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t<MuiThemeProvider theme={theme}>\n\t\t\t\t\t\t\t\t\t\t<FormRow>\n\t\t\t\t\t\t\t\t\t\t\t<FormColumn margins={'0 20px 0 0'}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Clinician Id #</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledInputTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='input'\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='clinicianID'\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={clinicianList.id}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FormColumn>\n\t\t\t\t\t\t\t\t\t\t\t<FormColumn>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Pronoun</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledDropdownField\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={pronoun ? pronoun : 'Dr.'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='input'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => this.handleChange(e, handleChange)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\tinput={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input name={'pronoun'} value={pronoun} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value='N/A'>N/A</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={'Dr.'}>Dr.</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={'Mr.'}>Mr.</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={'Ms.'}>Ms.</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={'Mrs.'}>Mrs.</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledDropdownField>\n\t\t\t\t\t\t\t\t\t\t\t</FormColumn>\n\t\t\t\t\t\t\t\t\t\t</FormRow>\n\n\t\t\t\t\t\t\t\t\t\t<FormRow>\n\t\t\t\t\t\t\t\t\t\t\t<FormColumn margins='0 20px 0 0'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>First Name</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledInputTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='input'\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={clinicianList.firstName}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FormColumn>\n\t\t\t\t\t\t\t\t\t\t\t<FormColumn margins='0 20px 0 0'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Middle Initial</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledInputTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={clinicianList.middleInitial}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='input'\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='middleInitial'\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{ maxLength: 1 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FormColumn>\n\t\t\t\t\t\t\t\t\t\t\t<FormColumn>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Last Name</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledInputTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={clinicianList.lastName}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='input'\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FormColumn>\n\t\t\t\t\t\t\t\t\t\t</FormRow>\n\t\t\t\t\t\t\t\t\t\t<FormRow>\n\t\t\t\t\t\t\t\t\t\t\t<FormColumn margins='0 20px 0 0'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Email Address</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledInputTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={clinicianList.emailAddress}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='emailAddress'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FormColumn>\n\t\t\t\t\t\t\t\t\t\t\t<FormColumn>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>Phone Number</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledInputTextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={clinicianList.phoneNum}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='input'\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phoneNum'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FormColumn>\n\t\t\t\t\t\t\t\t\t\t</FormRow>\n\t\t\t\t\t\t\t\t\t\t<FormRow>\n\t\t\t\t\t\t\t\t\t\t\t<FormColumn>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>About You</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledInputTextArea\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={clinicianList.aboutYou}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\trows='6'\n\t\t\t\t\t\t\t\t\t\t\t\t\trowsMax='6'\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='aboutYou'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</FormColumn>\n\t\t\t\t\t\t\t\t\t\t</FormRow>\n\t\t\t\t\t\t\t\t\t\t<StyledButton\n\t\t\t\t\t\t\t\t\t\t\tmargins={'20px 0'}\n\t\t\t\t\t\t\t\t\t\t\tbackgroundscolor={'var(--color-green)'}\n\t\t\t\t\t\t\t\t\t\t\tcolors={'var(--color-white)'}\n\t\t\t\t\t\t\t\t\t\t\theights={'40px'}\n\t\t\t\t\t\t\t\t\t\t\tlinesheight={'20px'}\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSave Settings\n\t\t\t\t\t\t\t\t\t\t</StyledButton>\n\t\t\t\t\t\t\t\t\t</MuiThemeProvider>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t</FormBody>\n\t\t\t\t</ClinicianCardWrapper>\n\t\t\t</div>\n\t\t)\n\t}\n}\nClinicianProfile.propTypes = {\n\tclinicianEditMode: PropTypes.bool,\n\tclinicianList: PropTypes.object\n};\n\nexport default ClinicianProfile;\n","import styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport { Button } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nexport const RoleListWrapper = styled(Card)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;  \n  margin: 50px 65px 20px 0;\n  max-width: 700px;\n\n\n\n`;\nexport const RoleListHeader = styled.div`\n\tdisplay: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  height: 75px;\n  padding: 0 30px;\n  width: 100%;\n\tborder-bottom: 1px solid rgba(0, 0, 0, 0.15) !important;\n`;\n\nexport const RoleListRow = styled.div`\n\tdisplay: flex;\n  flex-flow: row wrap !important;\n  min-height: 100px;\n\theight: 100%;\n  width: 100%;\n  align-items: center;\n  padding: 10px 20px;\n\tborder-bottom: 1px solid rgba(0, 0, 0, 0.15) !important;\n`;\n\nexport const RoleListAvator = styled(Avatar)`\n  background-color: ${({ backgroundscolor }) => backgroundscolor}!important;\n  height: 75px !important;\n  width: 75px !important;\n  box-shadow: ${({ boxshadow }) => boxshadow}!important;\n  color: ${({ colors }) => colors}!important;\n  border-radius: ${({ bordersradius }) => bordersradius}!important;\n  font-size: ${({ fontssize }) => fontssize}!important;\n  margin-right: 20px !important;\n  border: ${({ borders }) => borders} !important;\n`;\n\nexport const RoleListViewButton = styled(Button)`\n    height: 40px;\n    width: 125px;\n    display: flex;\n    justify-content: center !important;\n    align-items: center !important;\n    background-color: var(--color-primary) !important;\n    border-radius: 4px;\n    margin: 10px !important;\n    color: var(--color-white) !important;\n    padding-top: 10px !important; //For span not really being centered\n    font-weight: 300 !important;\n`;\n\nexport const RoleListRemoveButton = styled(Button)`\n    height: 40px;\n    width: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(25,25, 25, 0.05) !important;\n    border-radius: 4px;\n    margin-right: 20px;\n    margin: 10px !important;\n    border: .5px solid var(--color-grey-text) !important;\n    padding-top: 10px !important; //For span not really being centered\n    box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\n    font-weight: 300 !important;\n`;\n\nexport const ButtonsWrapper = styled.div`\n    height: 100%;\n    width: 100%;\n    max-width: 300px;\n    margin: auto 0 auto auto !important;\n    padding: auto;\n`;","import React, { Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { randomHeadShot } from '../../../../mock-data/index';\nimport { Current } from '../../../../utils/constants';\n// Components\n\n// Styled Components\nimport {\n\tRoleListWrapper,\n\tRoleListHeader,\n\tRoleListRow,\n\tRoleListAvator,\n\tRoleListViewButton,\n\tRoleListRemoveButton,\n\tButtonsWrapper\n} from '../../../../styled-components/RoleList/role-list-styled';\n\nexport default class PatientList extends PureComponent {\n\thandleView = (id) => {\n\t\tconst { getPatientData, changePage } = this.props;\n\n\t\tgetPatientData(id);//<= this will be an epic, once it returns it goes to patient profile.\n\t};\n\n\trender() {\n\t\tconst { listOfPatients } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<RoleListWrapper>\n\t\t\t\t\t<RoleListHeader>\n\t\t\t\t\t\t<h4>Total Number of Patients = {Array.isArray(listOfPatients) && listOfPatients.length}</h4>\n\t\t\t\t\t</RoleListHeader>\n\t\t\t\t\t{listOfPatients.map((patient, index) => (\n\t\t\t\t\t\t<RoleListRow key={index}>\n\t\t\t\t\t\t\t<RoleListAvator src={randomHeadShot()} />\n\t\t\t\t\t\t\t<h4>{patient.firstName} {patient.lastName}</h4>\n\t\t\t\t\t\t\t{/* <p>Patient ID #: {patient.id}</p> */}\n\t\t\t\t\t\t\t<ButtonsWrapper>\n\t\t\t\t\t\t\t<RoleListViewButton onClick={() => this.handleView(patient.id)}>\n\t\t\t\t\t\t\t\tView Profile\n\t\t\t\t\t\t\t</RoleListViewButton>\n\t\t\t\t\t\t\t<RoleListRemoveButton>Remove</RoleListRemoveButton>\n\t\t\t\t\t\t\t</ButtonsWrapper>\n\t\t\t\t\t\t</RoleListRow>\n\t\t\t\t\t))}\n\t\t\t\t</RoleListWrapper>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nPatientList.propTypes = {\n\tlistOfPatients: PropTypes.array\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Current } from '../../utils/constants';\nimport EventListener from \"react-event-listener\";\n//Components\nimport ClinicianHeader from './clinicians-card-items/clinician-header';\nimport ClinicianAppointments from '../Clinicians/clinician-appointments';\nimport ClinicianAppointmentsMobile from '../Clinicians/clinician-appointment-mobile';\nimport ClinicianDashboard from '../Clinicians/clinician-dashboard';\nimport ClinicianProfile from '../Clinicians/clinician-profile';\nimport CardCalendar from '../../components/ReusableComponents/CardItems/CardCalendar';\nimport CardMessaging from '../../components/ReusableComponents/CardItems/CardMessaging';\nimport PatientList from '../../components/ReusableComponents/RoleLists/PatientList/PatientList';\nimport PatientProfile from '../../components/Patients/patient-profile';\n//Styled\nimport { ClinicianCardWrapper } from '../../styled-components/ClinicianCard/clinician-card-styled';\nimport { clinicianAppointments } from '../../mock-data/mock-data';\n\n\nclass ClinicianCard extends React.Component {\n\n  state = {\n    isDesktop: true,\n  }\n\n  componentDidMount() {\n    this.handleResize()\n  }\n\n  handleResize = () => {\n    if (window.innerWidth <= 1200) {\n      this.setState({ isDesktop: false });\n    }\n    else {\n      this.setState({ isDesktop: true })\n    }\n  }\n  render() {\n\tconst { \n\t\tcurrentPage, clinicianAppointments, clinicianList, updateClinicianData, updatePatientData, \n\t\tlistOfPatients, getPatientData, patientUserData, changePage, createClinicianAppointment } = this.props;\n\tconst { isDesktop } = this.state;\n    return (\n      <React.Fragment>\n        <ClinicianHeader currentPage={currentPage} clinicianList={clinicianList} createClinicianAppointment={createClinicianAppointment} />\n        {currentPage === Current.Dashboard && <ClinicianDashboard />}\n        <EventListener target={'window'} onResize={this.handleResize} />\n        {\n          isDesktop && currentPage === Current.Appointments && (\n            <ClinicianAppointments\n              emailAddress={clinicianList.emailAddress}\n              service={'Service Type'}\n              clinician={clinicianList.firstName + \" \" + clinicianList.lastName}\n              clinicianAppointments={clinicianAppointments} />\n          )\n        }\n        {\n          !isDesktop && currentPage === Current.Appointments && (\n            <ClinicianAppointmentsMobile\n              emailAddress={clinicianList.emailAddress}\n              service={'Service Type'}\n              clinician={clinicianList.provider}\n\t\t\t  appointments={clinicianList.appointments}\n              clinicianAppointments={clinicianAppointments} />\n          )\n        }\n        {currentPage === Current.Calendar && <CardCalendar />}\n        {currentPage === Current.Messaging && <CardMessaging />}\n        {currentPage === Current.Patients && <PatientList listOfPatients={listOfPatients} getPatientData={getPatientData} changePage={changePage}/>}\n        {currentPage === Current.PatientProfile && <PatientProfile patientList={patientUserData} updatePatientData={updatePatientData}/>}\n        {currentPage === Current.ClinicianProfile && <ClinicianProfile updateClinicianData={updateClinicianData} clinicianList={clinicianList} />}\n      </React.Fragment >\n    )\n  }\n}\n\nClinicianCard.propTypes = {\n  clinicianList: PropTypes.object\n};\n\nexport default ClinicianCard;\n","/*\n * ClinicianPage\n * This is the first thing users see of our App, at the '/' route\n */\nimport React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n// Components\nimport Header from '../Header/Header';\nimport SideMenu from '../SideMenu/SideMenu';\nimport ClinicianCard from '../../components/Clinicians/ClinicianCard';\nimport { Clinician1MockData } from '../../mock-data';\nimport { Current } from '../../utils/constants';\n\nexport default class ClinicianPage extends Component {\n\t// eslint-disable-line react/prefer-stateless-function\n\tcomponentDidMount() {\n\t\tconst { getClinicianData } = this.props;\n\t\tgetClinicianData('1');\n\t}\n\n\trender() {\n\t\tconst { changePage, currentPage, userData, userRole, updateClinicianData, listOfPatients, patientUserData, getPatientData,\n\t\t\tupdatePatientData, createClinicianAppointment, clinicianAppointments } = this.props;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Helmet>\n\t\t\t\t\t<title>Clinician Page</title>\n\t\t\t\t\t<meta name=\"description\" content=\"Global Mentality Clinician Page\" />\n\t\t\t\t</Helmet>\n\t\t\t\t<div id={'main-container'}>\n\t\t\t\t\t<Header userRole={userRole} changePage={changePage} currentPage={currentPage} currentProfile={Current.ClinicianProfile} />\n\t\t\t\t\t<SideMenu userRole={userRole} changePage={changePage} currentPage={currentPage} />\n\t\t\t\t\t<ClinicianCard \n\t\t\t\t\t  currentPage={currentPage} \n\t\t\t\t\t  listOfPatients={listOfPatients} \n\t\t\t\t\t  clinicianList={userData} \n\t\t\t\t\t  clinicianAppointments={clinicianAppointments}\n\t\t\t\t\t  updateClinicianData={updateClinicianData}\n\t\t\t\t\t  updatePatientData={updatePatientData}\n\t\t\t\t\t  patientUserData={patientUserData}\n\t\t\t\t\t  getPatientData={getPatientData} \n\t\t\t\t\t  changePage={changePage}\n\t\t\t\t\t  createClinicianAppointment={createClinicianAppointment}\n\t\t\t\t\t/>\n\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nClinicianPage.propTypes = {\n\tclinicianMockData: PropTypes.object\n};\n","/**\n * Clinician Page selectors\n */\nimport { pipe } from '../../../utils/functional';\nimport { createSelector } from 'reselect';\n\n//Regular Reducer Selectors\nexport const getUserData = (state) => state.clinician.userData;\nexport const getUserLoading = (state) => state.clinician.getClinicianLoading;\nexport const getUserDataError = (state) => state.clinician.userDataError;\nexport const getPatientList = (state) => state.clinician.patientList;\nexport const getAppointmentList = (state) => state.clinician.appointmentList;\n//Reselectors\n\n\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserRole, getCurrentPage } from '../App/redux/selectors';\nimport { changePage } from '../App/redux/actions';\nimport { getClinicianData, updateClinicianData, createClinician, createClinicianAppointment } from './redux/actions';\nimport { getPatientData, updatePatientData } from '../PatientPage/redux/actions';\nimport { getUserData as getPatientUserData } from '../PatientPage/redux/selectors';\nimport ClinicianPage from './ClinicianPage';\nimport { getUserData, getPatientList, getAppointmentList } from './redux/selectors';\n\n\nconst mapDispatchToProps = {\n  changePage,\n  getClinicianData,\n  updateClinicianData,\n  createClinician,\n  getPatientData,\n  updatePatientData,\n  createClinicianAppointment\n};\n\nconst mapStateToProps = state => ({\n  currentPage: getCurrentPage(state),\n  userData: getUserData(state),\n  userRole: getUserRole(state),\n  currentPage: getCurrentPage(state),\n  listOfPatients: getPatientList(state),\n  patientUserData: getPatientUserData(state),\n  clinicianAppointments: getAppointmentList(state),\n});\n\n\nexport default compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(ClinicianPage);\n","/**\n * NotFoundPage\n *\n * This is the page we show when the user visits a url that doesn't have a route\n */\n\nimport React, { Fragment } from 'react';\n\nconst NotFound = () => (\n  <Fragment>\n    <h1>Page not found.</h1>\n  </Fragment>\n);\n\nexport default NotFound;\n","import styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\n\nexport const SignInWrapper = styled(Card)`\n    box-shadow: ${({ boxshadows }) => (boxshadows)}!important;\n    border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n    margin: ${({ margins }) => (margins)}!important;\n    height: ${({ heights }) => (heights ? heights : '100%' )}!important;\n    width: ${({ widths }) => (widths ? widths : '100%')}!important; \n    max-width: 800px;\n    background-color: ${({ backgroundcolors }) => (backgroundcolors)}!important\n    display:flex;\n    @media only screen and (width: 1024px){\n        margin-left: -25%;\n    }\n    @media only screen and (width: 768px){\n        margin-left: -50%;\n    }\n    @media only screen and (max-width: 700px)  {\n        width: 100% !important;\n        margin: 0 auto !important;\n    }\n    `;\n\nexport const SignInSection = styled.section`\n    background-color: var(--color-white) !important;\n    width: 50%;\n    max-width: 100%;\n    flex-wrap: wrap;\n    text-align: center;\n    padding: 0 5%;\n    @media only screen and (max-width: 700px)  {\n        width: 100% !important;\n        padding: 5%;\n    }\n`;\n\nexport const SignInImage = styled.section`\n    width: 50%;\n    max-width: 100%;\n    height: auto;\n`;\n\nexport const SignInTick = styled.div`\n    border-radius: ${({ bordersradius }) => (bordersradius)}!important;\n    margin: ${({ margins }) => (margins)}!important;\n    height: ${({ heights }) => (heights)}!important;\n    width: ${({ widths }) => (widths)}!important; \n    z-index: ${({ zIndex }) => (zIndex)} !important;\n    background-color:var(--color-blue) !important;\n    max-height: 45px;\n    max-width: 45px;\n    position: absolute;\n    top:  ${({ tops }) => (tops)} !important;\n    left:  ${({ lefts }) => (lefts)} !important;\n    @media only screen and (width: 1024px){\n        left: -20% !important;\n        top: -2% !important;\n    }\n    @media only screen and (width: 768px){\n        left: -42% !important;\n    }\n    @media only screen and (max-width: 600px) {\n        max-width: 30px !important;\n        max-height: 30px !important;\n        top: -2.5% !important;    \n    }\n`;\n\nexport const NewPasswordText = styled.p`\n    margin-left: 23%;\n    font-size: .9rem;\n    @media only screen and (width: 768px){\n        margin-left: -10%\n    }\n    @media only screen and (max-width: 700px){\n        margin-left: 3%;\n    }\n\n`;\n\n","/*\n * LoginPage\n * This is the login page users see of our App, at the '/login' route\n */\nimport React, { Fragment, Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport EventListener from \"react-event-listener\";\nimport InputTextField from \"@material-ui/core/TextField\";\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { StyledButton } from \"../../styled-components/Buttons/buttons-styled\";\nimport { SignInWrapper, SignInSection, SignInImage, SignInTick, NewPasswordText } from '../../styled-components/SignIn/signIn-styled';\n\n\nexport default class LoginPage extends Component {\n  // eslint-disable-line react/prefer-stateless-function\n  state = {\n    isDesktop: true,\n  }\n\n  handleResize = () => {\n    if (window.innerWidth <= 700) {\n      this.setState({ isDesktop: false });\n    }\n    else {\n      this.setState({ isDesktop: true })\n    }\n  }\n\n  render() {\n    const { isDesktop } = this.state\n    const { formSubmission } = this.props;\n\n    const validationSchema = Yup.object().shape({\n      email: Yup.string('Enter your email')\n        .email('E-mail is not valid!')\n        .required('E-mail is required!'),\n      password: Yup.string(\"\")\n        .required('Password is required!')\n    })\n\n    return (\n      <Fragment>\n        <Helmet>\n          <title>Login Page</title>\n          <meta name=\"description\" content=\"Global Mentality Login Page\" />\n        </Helmet>\n        <div id={'main-container--login'}>\n          <SignInTick widths={\"100%\"} heights={\"100%\"} bordersradius={\"2px\"} zIndex={\"999\"} tops={\"-4%\"} lefts={\"3%\"}></SignInTick>\n          <SignInWrapper bordersradius={\"4px\"}>\n            <SignInSection>\n              <h1>Sign In</h1>\n\n              <Formik\n                initialValues={{ email: '', password: '' }}\n                validationSchema={validationSchema}\n                onSubmit={formSubmission}\n              >\n                {({ values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  isSubmitting, }) => (\n                    <Form>\n                      <div>\n                        <InputTextField label=\"Email Address\" variant=\"outlined\" type=\"email\" fullWidth name=\"email\" onChange={handleChange} onBlur={handleBlur} />\n                        {errors.email && touched.email && errors.email}\n                      </div>\n                      &nbsp;\n                      <div>\n                        <InputTextField label=\"Password\" variant=\"outlined\" type=\"password\" fullWidth name=\"password\" onChange={handleChange} onBlur={handleBlur} />\n                        {errors.password && touched.password && errors.password}\n                      </div>\n                      &nbsp;\n                      <StyledButton\n                        backgroundscolor={\"var(--color-primary)\"}\n                        widths={\"100%\"}\n                        heights={\"10%\"}\n                        colors={\"#ffffff\"}\n                        type=\"submit\"\n                      >\n                        Sign In\n                  </StyledButton>\n                    </Form>\n                  )}\n              </Formik>\n              &nbsp;\n              <hr />\n              &nbsp;\n            <StyledButton\n                backgroundscolor={\"#ffffff\"}\n                borders={\"1px solid #c9c9c9\"}\n                widths={\"100%\"}\n                heights={\"10%\"}\n                colors={\"#000000\"}\n              >\n                Create Account\n            </StyledButton>\n            </SignInSection>\n\n            <EventListener target={'window'} onResize={this.handleResize} />\n\n            {isDesktop && (<SignInImage >\n              <img src=\"https://placeimg.com/420/400/any\" alt=\"Global Mentality\" />\n            </SignInImage>)}\n\n          </ SignInWrapper>\n          <NewPasswordText>Forget your password buddy? <a href=\"#\">Get a new password</a></NewPasswordText>\n          <br />\n        </div>\n      </Fragment >\n    );\n  }\n}\n\nLoginPage.propTypes = {}\n","/**\n * Login Page selectors\n */\nimport { pipe } from '../../../utils/functional';\nimport { createSelector } from 'reselect';\n\n// export const getSize = (state) => state.login.isDesktop\nexport const getEmail = (state) => state.login.getEmail\nexport const getPassword = (state) => state.login.getPassword\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport LoginPage from './LoginPage';\nimport { handleResize, formSubmission } from './redux/actions';\n\n//*** Here for example purposes of selectors\nimport { getSize, getEmail, getPassword } from './redux/selectors';\n\n\nconst mapStateToProps = state => ({\n  // isDesktop: getSize(state),\n  user: {\n    email: getEmail(state),\n    password: getPassword(state)\n  }\n});\n\nconst mapDispatchToProps = {\n  // handleResize,\n  formSubmission\n};\n\nexport default compose(\n  withRouter, //provides history to \"container component\" aka \"smart component\"\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )\n)(LoginPage);","/*\n * Login Actions\n *\n * Actions change things in your application\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\n * we have these actions which are the only way your application interacts with\n * your application state. This guarantees that your state is up to date and nobody\n * messes it up weirdly somewhere.\n *\n * To add a new Action:\n * 1) Import your types\n * 2) Add a function like this:\n *    export yourAction = (var || var, var) => ({\n *        type: YOUR_ACTION_TYPE,\n *        payload: var || payload: { var, var }\n *    });\n */\nimport { LoginPageActionTypes } from './types';\n\n/**\n * Changes the input field of the form\n * @return {object}    An action object with a type of CHANGE_USERNAME\n */\n\n// export const handleResize = () => ({ type: LoginPageActionTypes.HANDLE_RESIZE })\n\nexport const formSubmission = (loginInfo) => ({ type: LoginPageActionTypes.FORM_SUBMISSION, payload: loginInfo })\n","/**\n *\n * App\n *\n * This component is the skeleton around the actual pages, and should only\n * contain code that should be seen on all pages.\n */\n\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Role } from '../../utils/constants';\n\nimport PatientPage from '../PatientPage/';\nimport ClinicianPage from '../ClinicianPage/';\nimport OfficePage from '../PatientPage/';\nimport AdminPage from '../PatientPage/';\nimport NotFoundPage from '../NotFoundPage/';\nimport LoginPage from '../LoginPage/';\nimport './style.scss';\n\nconst pathname = window.location.pathname;\nconst idName =\n\n\t\tpathname === '/login' ? 'main-container--login' :\n\t\t'main-container';\n\n// const navigateTo = (role) => {\n// \tif (role === Role.Patient) {\n// \t\treturn PatientPage;\n// \t} else if (role === Role.Clinician) {\n// \t\treturn ClinicianPage;\n// \t} else if (role === Role.OfficeAdmin) {\n// \t\treturn OfficePage;\n// \t} else if (role === Role.SuperAdmin) {\n// \t\treturn AdminPage;\n// \t} else {\n// \t\treturn NotFoundPage;\n// \t}\n// };\n\nconst App = ({}) => (\n\t<div className='app-wrapper'>\n\t\t<Helmet titleTemplate='Global Mentality App' defaultTitle='Global Mentality'>\n\t\t\t<meta name='description' content='Global Mentality' />\n\t\t</Helmet>\n\t\t<Switch>\n\t\t\t{/* TODO Conditionals for permissions of pages */}\n\t\t\t<Route exact path='/patient' component={PatientPage} />\n\t\t\t<Route exact path='/clinician' component={ClinicianPage} />\n\t\t\t{/* {role === Role.OfficeAdmin && <Route path='/office' component={OfficePage} />}\n\t\t\t{role === Role.SuperAdmin && <Route path='/admin' component={AdminPage} />} */}\n\t\t\t<Route path='/login' component={LoginPage} />\n\t\t\t<Route exact path='/' component={ClinicianPage} />\n\t\t\t<Route path='/not-found' component={NotFoundPage} />\n\t\t</Switch>\n\t</div>\n);\n\nexport default App;\n","/**\n * app.js\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n// Import all the third party stuff\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'react-router-redux';\nimport FontFaceObserver from 'fontfaceobserver';\nimport createHistory from 'history/createBrowserHistory';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createLogger } from 'redux-logger';\nimport { rootReducer } from './reducers';\nimport { rootEpic } from './epics';\nimport 'sanitize.css/sanitize.css';\n\n// Import root app\nimport App from './containers/App';\n\n// Load the favicon\n/* eslint-disable import/no-webpack-loader-syntax */\nimport '!file-loader?name=[name].[ext]!./images/global-mentality-icon.svg';\n/* eslint-enable import/no-webpack-loader-syntax */\n\n// Import CSS reset and Global Styles\nimport './styles/theme.scss';\n\n// Observe loading of Open Sans (to remove open sans, remove the <link> tag in\n// the index.html file and this observer)\nconst openSansObserver = new FontFaceObserver('Open Sans', {});\n\n// When Open Sans is loaded, add a font-family using Open Sans to the body\nopenSansObserver.load().then(\n\t() => {\n\t\tdocument.body.classList.add('fontLoaded');\n\t},\n\t() => {\n\t\tdocument.body.classList.remove('fontLoaded');\n\t}\n);\n\n// Create redux store with history\nconst logger = createLogger({\n\tcollapsed: true,\n\tduration: true,\n\ttimestamp: true,\n\tlevel: 'log',\n\tdiff: true\n});\n\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nconst epicMiddleware = createEpicMiddleware();\nconst history = createHistory();\nconst store = createStore(rootReducer, reduxDevTools, applyMiddleware(epicMiddleware, logger));\nepicMiddleware.run(rootEpic);\n\n// store.subscribe(() => {\n//  //Checks user role and passes down to the app routes\n//  console.log(store.getState().config.userRole)\n// });\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ConnectedRouter history={history}>\n\t\t\t<App />\n\t\t</ConnectedRouter>\n\t</Provider>,\n\tdocument.getElementById('app')\n);\n","module.exports = __webpack_public_path__ + \"static/media/Headshot-2.d479c177.jpg\";"],"sourceRoot":""}